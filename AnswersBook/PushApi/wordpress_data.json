[
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2016/10/04/open-sourcing-the-coveo-javascript-search-framework/",
        "revisions": [
            1732
        ],
        "title": "Open-Sourcing the Coveo JavaScript Search Framework",
        "short_URL": "http://wp.me/p7VTrW-rL",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {
            "TypeScript": {
                "description": "",
                "post_count": 3,
                "ID": 25138290,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typescript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typescript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "typescript",
                "name": "TypeScript"
            },
            "GitHub": {
                "description": "",
                "post_count": 1,
                "ID": 5603054,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:github",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:github/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "github",
                "name": "GitHub"
            },
            "jsui": {
                "description": "",
                "post_count": 3,
                "ID": 69235323,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jsui",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jsui/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "jsui",
                "name": "jsui"
            },
            "TypeDoc": {
                "description": "",
                "post_count": 1,
                "ID": 405525749,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typedoc",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typedoc/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "typedoc",
                "name": "TypeDoc"
            },
            "javascript": {
                "description": "",
                "post_count": 7,
                "ID": 457,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "javascript",
                "name": "javascript"
            }
        },
        "global_ID": "de8a1781368180bffee8a568ef97a580",
        "ID": 1721,
        "content": "Testing. In July 2016, the Coveo Search UI, also known as the Coveo JavaScript Search Framework, became open-source. This means that, from now on, anyone will be able to go on GitHub, take the Coveo Search UI, and modify the code itself to adapt it to their own needs.\n<!-- more -->\n\nAlthough it is called the JavaScript Search Framework, the code is written using <a href=\"http://www.typescriptlang.org/\">TypeScript</a>. The TypeScript code is then compiled into JavaScript, which allows us to modify our code base without the fear of breaking the framework.\n<h2 id=\"why-open-sourcing-it\">Why open-sourcing it?</h2>\nAs Coveo continues to grow, we have more and more partners that need to implement our Search UI in a website, and tweak it in different ways to fit their needs.\n\nBefore open-sourcing the code, our partners had to do some serious code-gymnastics to bypass certain sections of the Search Framework and implement their own features.\n\nWe improved the flexibility and usability of the framework, and by open-sourcing it, we are giving our advanced Coveo partners a means to take their implementation to the next level by allowing them to take the code and play with it to their heart’s content.\n<h2 id=\"whats-different-with-the-open-source-version\">What’s different with the open-source version?</h2>\nWe did not decide to simply open-source the code; we modified it to make it more user friendly for anyone who wants to join in.\n<h3 id=\"improved-documentation\">Improved documentation</h3>\nBefore the open-source version, the JavaScript Search Framework documentation had to be updated by hand every time there was a modification in the code. While the people at Coveo are keenly aware of the importance of good documentation, it still happened from time to time that certain features were added, removed, or modified without the documentation reflecting this change.\n\nFrom now on, the documentation is generated using <a href=\"https://github.com/TypeStrong/typedoc/\">TypeDoc</a>, which means that the documentation is made from comments left in the code. To access the current documentation, see the <a href=\"https://coveo.github.io/search-ui/\">Coveo Search UI documentation</a>.\n\nThis way, it is much easier for developers to remember to update the documentation when adding new features or modifying existing ones.\n\nThis also means that anyone playing with the open-source code is able to see the documentation right next to the component code without having to refer to an external website.\n\nFurthermore, the TypeDoc generated documentation can be easily implemented directly in the UI components, such as the <a href=\"http://www.coveo.com/go?dest=cloudhelp&amp;lcid=9&amp;context=230\">JavaScript Search Interface Editor</a>. This way, the components can be used even by people who are not familiar with coding.\n<h3 id=\"removed-internal-jquery-dependencies\">Removed internal jQuery dependencies</h3>\nThe old JavaScript Search Framework was dependent on the jQuery library. However, because a plethora of other packages also use this library, the potential for conflicts between the Coveo Search Framework and other packages was high.\n\nWith the new Search UI, we removed our dependency on that library, while still continuing to support it. This way, other packages or features that use the jQuery library will still work in the Coveo Search Framework, while also lowering the risk of potential conflict.\n<h3 id=\"update-the-way-the-project-is-built\">Update the way the project is built</h3>\nWe started using <a href=\"http://www.typescriptlang.org/\">TypeScript</a> at a really early stage in the project, nearly 3 years ago, in the JavaScript Search Framework version 0.4. Since then, the “correct” way to set up a TypeScript project has evolved tremendously.\n\nWe made extensive use of <a href=\"https://www.typescriptlang.org/docs/handbook/triple-slash-directives.html\">triple-slash directives</a> to instruct the typescript compiler how to bundle the project.\n\nWhile this method served us well at the beginning of the project, it has serious drawback. The main one is that the project becomes monolithic and cannot be easily customized to include or exclude certains components.\n\nWe modified our project to instead use ES6 CommonJS modules and <a href=\"https://webpack.github.io/\">webpack</a> in order to have a much more flexible bundle. Technically speaking, specifying any entry point in the project results in a coherent bundle that executes correctly at run time.\n\nThis also brought some development perks, such as a <a href=\"https://webpack.github.io/docs/webpack-dev-server.html\">webpack dev server</a>, which makes developing with the Search UI much more enjoyable.\n<h2 id=\"can-people-contribute-to-the-project\">Can people contribute to the project?</h2>\nWe would love for people to contribute to our Search UI project! Simply make a Pull Request, and a feature or improvement that you coded could be added to the Coveo Search Framework.\n\nThis not only makes our developers aware of your implementations, but it also makes your other projects that much easier to start.\n\nCoveo is very open to new ideas and features, and would love to hear from what you think should be improved. We await your pull requests in our <a href=\"https://github.com/coveo/search-ui\">GitHub Project</a>, and we hope that you enjoy the new Coveo Search Framework!\n\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "4",
                "id": "2088",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2087",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2086",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "f04a85dddd7905c064dc048187fe50ea",
                "id": "2085",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/10/04/chad-test/",
                "id": "2084",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "javascript": {
                    "description": "",
                    "parent": 0,
                    "post_count": 5,
                    "ID": 457,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "javascript",
                    "name": "javascript"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "TypeScript": {
                    "description": "",
                    "post_count": 3,
                    "ID": 25138290,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typescript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typescript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "typescript",
                    "name": "TypeScript"
                },
                "GitHub": {
                    "description": "",
                    "post_count": 1,
                    "ID": 5603054,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:github",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:github/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "github",
                    "name": "GitHub"
                },
                "jsui": {
                    "description": "",
                    "post_count": 3,
                    "ID": 69235323,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jsui",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jsui/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "jsui",
                    "name": "jsui"
                },
                "TypeDoc": {
                    "description": "",
                    "post_count": 1,
                    "ID": 405525749,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typedoc",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typedoc/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "typedoc",
                    "name": "TypeDoc"
                },
                "javascript": {
                    "description": "",
                    "post_count": 7,
                    "ID": 457,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "javascript",
                    "name": "javascript"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2016/10/04/open-sourcing-the-coveo-javascript-search-framework/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2016-10-04T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "open-sourcing-the-coveo-javascript-search-framework",
        "categories": {
            "javascript": {
                "description": "",
                "parent": 0,
                "post_count": 5,
                "ID": 457,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "javascript",
                "name": "javascript"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:43:35+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1721",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1721/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1721/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1721/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2016/09/12/sitecore-powershell-extension-with-coveo/",
        "revisions": [
            1733
        ],
        "title": "Sitecore PowerShell Extension with Coveo",
        "short_URL": "http://wp.me/p7VTrW-rM",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {
            "Sitecore": {
                "description": "",
                "post_count": 2,
                "ID": 2412844,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:sitecore",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:sitecore/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "sitecore",
                "name": "Sitecore"
            },
            "PowerShell": {
                "description": "",
                "post_count": 1,
                "ID": 178495,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:powershell",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:powershell/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "powershell",
                "name": "PowerShell"
            }
        },
        "global_ID": "1582d6f5aea815f62f0b90d4f34b0e38",
        "ID": 1722,
        "content": "The excellent <a href=\"https://marketplace.sitecore.net/Modules/Sitecore_PowerShell_console.aspx?sc_lang=en\">Sitecore PowerShell Extension</a> allows you to return items from your index and display its properties in a friendly manner, all of this at a much faster speed than using the Content Search API. This is, of course, just one function of that rich extension.\n\n<!-- more -->\n\nCoveo has a <a href=\"https://developers.coveo.com/display/SearchREST/REST+Search+API+Home\">REST Search API</a> which gives you the opportunity to send complex queries, but the advantage of the SPE is its usability across all your search providers. For example, I might want to compare the amount of results returned between Lucene, Solr, and Coveo indexes with the same script.\n<h2 id=\"example-with-lucene\">Example with Lucene</h2>\nThanks to CJ Morgan at <a href=\"http://www.brainjocks.com/team\">BrainJocks</a> for providing me with a basic SPE script with several examples.\nThis will work with Lucene and I believe also with Solr. It uses the sitecore_master_index with some custom GUIDs and templates.\n<div class=\"language-powershell highlighter-rouge\">\n<pre class=\"highlight\"><code>\n<span class=\"c1\"># This will return all items that have the template planogram within the the index sitecore_master</span>\nFind-Item -Index <span class=\"s2\">\"sitecore_master\"</span> -Criteria @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Equals\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_templatename\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"Planogram\"</span><span class=\"o\">}</span> \n \n<span class=\"c1\"># This will show two items: one being master, and one being web.</span>\nFind-Item -Index <span class=\"s2\">\"sitecore_master\"</span> -Criteria @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Contains\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_uniqueid\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"{005ac360-4daa-4de7-b158-88b193f8f5bc}\"</span><span class=\"o\">}</span>\n \n<span class=\"c1\"># This is an example of how to do multiple filters at once</span>\n<span class=\"nv\">$filterParams</span> <span class=\"o\">=</span> @<span class=\"o\">(</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Contains\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_uniqueid\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"{005ac360-4daa-4de7-b158-88b193f8f5bc}\"</span><span class=\"o\">}</span>,\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Equals\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_database\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"web\"</span><span class=\"o\">}</span>\n    <span class=\"o\">)</span>   \nFind-Item -Index <span class=\"s2\">\"sitecore_master\"</span> -Criteria <span class=\"nv\">$filterParams</span>\n \n<span class=\"c1\"># This will return only a certain number of items for the sitecore_master index</span>\nFind-Item -Index <span class=\"s2\">\"sitecore_master\"</span> -First 1000\n \n<span class=\"c1\"># This will allow you to view the properties of the index so I can do more work on it</span>\n<span class=\"c1\"># Powershell screen has a buffer, so using Format-Table -Autosize to show it horizontally</span>\nFind-Item -Index <span class=\"s2\">\"sitecore_master\"</span> -First 10 | <span class=\"nb\">Select-Object</span> -Property <span class=\"k\">*</span>\n \n<span class=\"c1\"># This will allow you to see the fields value of the index item</span>\n<span class=\"c1\"># which is the information you will use in the Field variable for the Filter</span>\nFind-Item -Index <span class=\"s2\">\"sitecore_master\"</span> -First 1 | <span class=\"nb\">select</span> -expand <span class=\"s2\">\"Fields\"</span>\n \n<span class=\"c1\"># This will search by a particular version and will only allow the descendants of a certain item</span>\n<span class=\"nv\">$filterParams</span> <span class=\"o\">=</span> @<span class=\"o\">(</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Equals\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_version\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"2\"</span><span class=\"o\">}</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"DescendantOf\"</span>; Value <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"nb\">Get-Item </span>master: -ID <span class=\"s2\">\"{B03731AD-B04C-41B6-944C-D21BBC5926D4}\"</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n    <span class=\"o\">)</span>\n \nFind-Item -Index <span class=\"s2\">\"sitecore_master\"</span> -Criteria <span class=\"nv\">$filterParams</span> -First 10\n \n \n<span class=\"c1\"># When the items are returned using Find-Item they are not true Sitecore Items but instead</span>\n<span class=\"c1\"># are \"Sitecore.ContentSearch.SearchTypes.SearchResultItem\" items.  To make them into regular Sitecore items, you have to add </span>\n<span class=\"c1\"># Initialize-Item at the end of the results, as such.</span>\n<span class=\"nv\">$filterParams</span> <span class=\"o\">=</span> @<span class=\"o\">(</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Equals\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_version\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"2\"</span><span class=\"o\">}</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"DescendantOf\"</span>; Value <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"nb\">Get-Item </span>master: -ID <span class=\"s2\">\"{B03731AD-B04C-41B6-944C-D21BBC5926D4}\"</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n    <span class=\"o\">)</span>\n \nFind-Item -Index <span class=\"s2\">\"sitecore_master\"</span> -Criteria <span class=\"nv\">$filterParams</span> -First 10 | Initialize-Item\n \n \n<span class=\"c1\"># Filter by other parameters as well</span>\n<span class=\"nv\">$filterParams</span> <span class=\"o\">=</span> @<span class=\"o\">(</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"StartsWith\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_fullpath\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"/sitecore/content/Markets/301UnitedStates_301/Snippets/Detailed Business Reviews\"</span><span class=\"o\">}</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Equals\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_language\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"en\"</span> <span class=\"o\">}</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Equals\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_template\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"6bf27a02e6064608b7d3f02ea3a30955\"</span><span class=\"o\">}</span>\n    <span class=\"o\">)</span>\n \n<span class=\"nv\">$item</span> <span class=\"o\">=</span> Find-Item -Index <span class=\"s2\">\"sitecore_master\"</span> -Criteria <span class=\"nv\">$filterParams</span> -First 10 <span class=\"c1\">#| Initialize-Item</span>\n<span class=\"nv\">$item</span>\n<span class=\"c1\">#$item.Fields | Format-List -Property *</span>\n\n\n</code></pre>\n</div>\n<h2 id=\"example-with-coveo\">Example with Coveo</h2>\nCoveo has a few unique twists in the way it handles fields. This new example is based on the coveo_master_index , which is created by default when installing the package. I will explain the changes in the next section.\n<div class=\"language-powershell highlighter-rouge\">\n<pre class=\"highlight\"><code>\n<span class=\"c1\"># This will return all items that have the template article group within the the index Coveo Master</span>\nFind-Item -Index <span class=\"s2\">\"Coveo_master_index\"</span> -Criteria @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Equals\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_templatename\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"Article Group\"</span><span class=\"o\">}</span> \n\n<span class=\"c1\"># This will return a single item</span>\nFind-Item -Index <span class=\"s2\">\"Coveo_master_index\"</span> -Criteria @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Equals\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_uniqueid\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"{A5CDBC19-FFEA-4801-81A6-2B87F318B275}\"</span><span class=\"o\">}</span>\n\n<span class=\"c1\"># This is an example of how to do multiple filters at once</span>\n<span class=\"nv\">$filterParams</span> <span class=\"o\">=</span> @<span class=\"o\">(</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Equals\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_uniqueid\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"{A5CDBC19-FFEA-4801-81A6-2B87F318B275}\"</span><span class=\"o\">}</span>,\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Equals\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_database\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"web\"</span><span class=\"o\">}</span>\n    <span class=\"o\">)</span>\nFind-Item -Index <span class=\"s2\">\"Coveo_web_index\"</span> -Criteria <span class=\"nv\">$filterParams</span> -First 10\n\n<span class=\"c1\"># This will return only a certain number of items for the selected index</span>\nFind-Item -Index <span class=\"s2\">\"Coveo_master_index\"</span> -First 100\n\n<span class=\"c1\"># This will allow you to view the properties of the index so I can do more work on it</span>\n<span class=\"c1\"># Powershell screen has a buffer, so using Format-Table -Autosize to show it horizontally</span>\nFind-Item -Index <span class=\"s2\">\"Coveo_master_index\"</span> -First 10 | <span class=\"nb\">Select-Object</span> -Property <span class=\"k\">*</span>\n\n<span class=\"c1\"># This will allow you to see the fields value of the index item</span>\n<span class=\"c1\"># which is the information you will use in the Field variable for the Filter</span>\nFind-Item -Index <span class=\"s2\">\"Coveo_master_index\"</span> -First 1 | <span class=\"nb\">select</span> -expand <span class=\"s2\">\"Fields\"</span>\n\n<span class=\"c1\"># This will search by a particular version and will only allow the descendants of a certain item</span>\n<span class=\"nv\">$filterParams</span> <span class=\"o\">=</span> @<span class=\"o\">(</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Equals\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_version\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"2\"</span><span class=\"o\">}</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"DescendantOf\"</span>; Value <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"nb\">Get-Item </span>master: -ID <span class=\"s2\">\"{110D559F-DEA5-42EA-9C1C-8A5DF7E70EF9}\"</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n    <span class=\"o\">)</span>\nFind-Item -Index <span class=\"s2\">\"Coveo_master_index\"</span> -Criteria <span class=\"nv\">$filterParams</span> -First 10\n\n\n<span class=\"c1\"># When the items are returned using Find-Item they are not true Sitecore Items but instead</span>\n<span class=\"c1\"># are \"Sitecore.ContentSearch.SearchTypes.SearchResultItem\" items. To make them into regular Sitecore items, you have to add </span>\n<span class=\"c1\"># Initialize-Item at the end of the results, as such.</span>\n<span class=\"nv\">$filterParams</span> <span class=\"o\">=</span> @<span class=\"o\">(</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Equals\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_version\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"2\"</span><span class=\"o\">}</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"DescendantOf\"</span>; Value <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"nb\">Get-Item </span>master: -ID <span class=\"s2\">\"{110D559F-DEA5-42EA-9C1C-8A5DF7E70EF9}\"</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n    <span class=\"o\">)</span>\nFind-Item -Index <span class=\"s2\">\"Coveo_master_index\"</span> -Criteria <span class=\"nv\">$filterParams</span> -First 10 | Initialize-Item\n\n\n<span class=\"c1\"># Filter by other parameters as well</span>\n<span class=\"nv\">$filterParams</span> <span class=\"o\">=</span> @<span class=\"o\">(</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"StartsWith\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_fullpath\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"/sitecore/content/Home/Team/Brandon-Royal\"</span><span class=\"o\">}</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Equals\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_language\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"en\"</span> <span class=\"o\">}</span>\n        @<span class=\"o\">{</span><span class=\"k\">Filter</span> <span class=\"o\">=</span> <span class=\"s2\">\"Equals\"</span>; Field <span class=\"o\">=</span> <span class=\"s2\">\"_template\"</span>; Value <span class=\"o\">=</span> <span class=\"s2\">\"97963d48bd0646ca8279cd2ba3c7aa36\"</span><span class=\"o\">}</span>\n    <span class=\"o\">)</span>\n<span class=\"nv\">$item</span> <span class=\"o\">=</span> Find-Item -Index <span class=\"s2\">\"Coveo_master_index\"</span> -Criteria <span class=\"nv\">$filterParams</span> -First 10 | Initialize-Item\n<span class=\"nv\">$item</span>\n<span class=\"nv\">$item</span>.Fields | <span class=\"nb\">Format-List</span> -Property <span class=\"k\">*</span>\n\n\n</code></pre>\n</div>\n<h2 id=\"what-is-different\">What is different?</h2>\n<ul>\n\t<li>Contains is considered an advanced field query in Coveo, which required the field to be a facet. I would not recommend _uniqueid as a facet since it contains a lot of unique values, so I changed the operator to an Equals.</li>\n\t<li>Coveo usually creates one index per database, which means that the _uniqueid field will return a single value against the Coveo_master_index, not two like in the Lucene example.</li>\n\t<li>When returning a specific amount of results, the Lucene example used a First 1000. I changed it to 100, since Coveo, by default, will return less values for performance reasons. You can increase this value in the config file: https://developers.coveo.com/display/SitecoreV4/Retrieving+Large+Sets+of+Items+Using+LINQ</li>\n\t<li>_template does not contain any dashes when indexed by Coveo. However, templateid will . So I removed the dashes in my query, but I could also simply change the field for templateid.</li>\n</ul>\nAnd that’s it! Thanks again to <a href=\"https://www.cognifide.com/\">Cognifide</a> for creating the module and to anyone who contributed to it.\n\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "5",
                "id": "2099",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2098",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2097",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "9ab1a68d0a9281229fecc3cbfe7cac5a",
                "id": "2096",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/09/12/sitecore-powershell-module-with-Coveo/",
                "id": "2095",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Sitecore": {
                    "description": "",
                    "parent": 0,
                    "post_count": 2,
                    "ID": 2412844,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sitecore",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sitecore/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "sitecore",
                    "name": "Sitecore"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "Sitecore": {
                    "description": "",
                    "post_count": 2,
                    "ID": 2412844,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:sitecore",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:sitecore/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "sitecore",
                    "name": "Sitecore"
                },
                "PowerShell": {
                    "description": "",
                    "post_count": 1,
                    "ID": 178495,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:powershell",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:powershell/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "powershell",
                    "name": "PowerShell"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2016/09/12/sitecore-powershell-extension-with-coveo/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2016-09-12T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "sitecore-powershell-extension-with-coveo",
        "categories": {
            "Sitecore": {
                "description": "",
                "parent": 0,
                "post_count": 2,
                "ID": 2412844,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sitecore",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sitecore/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "sitecore",
                "name": "Sitecore"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:44:32+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1722",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1722/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1722/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1722/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2016/07/27/software-quality/",
        "revisions": [
            1734
        ],
        "title": "Software Quality",
        "short_URL": "http://wp.me/p7VTrW-rN",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {
            "quality": {
                "description": "",
                "post_count": 1,
                "ID": 16525,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:quality",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:quality/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "quality",
                "name": "quality"
            },
            "code": {
                "description": "",
                "post_count": 3,
                "ID": 656,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:code",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:code/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "code",
                "name": "code"
            },
            "Programming": {
                "description": "",
                "post_count": 6,
                "ID": 196,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "programming",
                "name": "Programming"
            }
        },
        "global_ID": "8b708d034e0916ebee80944c90bb0897",
        "ID": 1723,
        "content": "When I try to code, I always ask myself what’s right and what’s wrong about software quality. Sometimes, those questions aren’t easy to answer, but as software developers, we must answer them. Over my short time (4 years) as a developer, I developed certain universal and basic interrogations. I found some by reading online and others by questioning myself. When answered correctly, they can give you a hint at the quality of a software.\n\n<!-- more -->\n\nEvery time I code, I answer all of them. Sometimes, the answer can be, for that particular project: “I don’t care”. Sometimes, for that specific line of code, I don’t have to care because there already is a structure, a framework, or a way of doing things that already makes sure the software is great. The important thing is to be aware of those questions, and to take a decision for each of them.\n\nThose questions aren’t in any particular order. I try to split them by software project phase: design, implementation, tests, build, deployment, and monitoring. Some are useful for more than one phase. For each one of them, I try to answer it briefly and offer some potential solutions. Obviously, those solutions are based on my personal knowledge and may - and I hope so - change over time.\n<h2 id=\"design\">Design</h2>\nThe design phase is where everything is built. Developers must make sure they focus on the problem to solve with the right challenge in mind. Try to divide and conquer by fixing one problem at a time. At this point, it is very easy to over design something. Keep in mind the final goal and review it with peers.\n<h3 id=\"compatibility\">Compatibility</h3>\nWhen creating a software, think about the future.\n<ul>\n\t<li>How will it run with other APIs?</li>\n\t<li>Can you break the API contract?</li>\n\t<li>If not, how can you change it?</li>\n</ul>\nMost of the time, you must make sure everything stays compatible with your API clients. There aren’t many solutions to that challenge. One of the best ways is to use API versioning. Each time there’s a breaking change on the client side, you change version. Over a long period of time, you can deprecate some API versions and then proceed to clean up some code.\n<h3 id=\"extensibility\">Extensibility</h3>\n<ul>\n\t<li>Can a developer easily change or add functionalities to that component?</li>\n\t<li>Should a client be able to change its behavior?</li>\n</ul>\nWhen designing a software, try to think about those different needs. You can challenge them to make them simpler. Sometimes, the requirements are per client, per line of business, or they won’t change at all. Plan ahead and figure out a way to fill all needs. Sometimes, you must let clients code what they want themselves. When they do, design a framework instead of a product. Overall, keep in mind how someone, internal or external, can add functionalities and whom they target.\n<h3 id=\"upgradability\">Upgradability</h3>\nUpgradability is a bit different than extensibility. In extensibility, you make sure you can add features and modify component behavior based on needs. When talking about upgradability, you need to make sure that you can change the whole component as the application evolves. A component of your software should not be completely bound to another system. You should ask yourself these kinds of questions:\n<ul>\n\t<li>Can we change the database technology easily?</li>\n\t<li>How can we change the whole back-end without affecting the clients?</li>\n\t<li>Can we change an application layer without major impacts everywhere?</li>\n</ul>\nAcross-the-board, it’s a good practice to have a module with a single purpose, which communicates with other parts of the application using a well-known standard. If you don’t, you’ll end up with a house of cards that breaks when anyone tries to change a part of it. By making sure all your modules talk to each other using a standard, you’ll be able to upgrade them separately way easier.\n\nSome standard ways to help your modules communicate are <a href=\"https://en.wikibooks.org/wiki/Communication_Networks/HTTP_Protocol\">REST</a> or <a href=\"https://en.wikipedia.org/wiki/JSON-RPC\">JSON_RPC</a> and <em>not</em> <a href=\"https://en.wikipedia.org/wiki/Component_Object_Model\">COM Objects</a>, binary serialized objects, or Microsoft-Only thingies (I know they are getting better). The later ones aren’t cross-platform or cross-language and they bind the module to a specific technology.\n\nIf you <em>really</em> don’t want to use a web server or need more speed, try something like <a href=\"https://developers.google.com/protocol-buffers/\">Google Protocol Buffer</a> or <a href=\"https://en.wikipedia.org/wiki/Apache_Thrift\">Thrift</a>.\n<h3 id=\"debuggable\">Debuggable</h3>\n<ul>\n\t<li>How can I find a bug in the app?</li>\n\t<li>How can I troubleshoot a problem in a production environment?</li>\n\t<li>How can I look at variable values?</li>\n</ul>\nAt any time, you must be able to debug an application execution. There will be bugs; make sure your software isn’t a big black box. To do so, you can add internal and external logs everywhere - it will help you understand the app flow. Logging everything all the time can consume resources and slow down your app. Having intelligent logs and error messages is tremendously important here. A good log can solve problems before going to the support team (<code class=\"highlighter-rouge\">An error happened.</code> vs <code class=\"highlighter-rouge\">The communication failed because XYZ wasn't configured properly.</code>). If you need more logs, you can use dynamic switches that will trace your app in specific scenarios without restarting the application. If everything else fails, make sure you can attach to the process or dump the memory to analyze it.\n<h2 id=\"implementation\">Implementation</h2>\nNow that we’ve asked ourselves some questions about the design, we are ready to implement it. Obviously, there are still some interrogations to be answered.\n<h3 id=\"best-practices\">Best Practices</h3>\n<ul>\n\t<li>Am I the first one to ever solve that problem?</li>\n\t<li>What is the state of the art about that?</li>\n\t<li>How does the industry do these things?</li>\n</ul>\nThose are big questions that hide a lot of things. Best practices are what you learn at school or work - how to reuse code, use <a href=\"https://en.wikipedia.org/wiki/Software_design_pattern\">designs patterns</a>, write comments, etc. (Here’s <a href=\"https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882\">a great book</a> about it) I’ve put them all in the same category because the end result is the same - learn and search for outside information. There’s always a good reason behind a community choice. Why do we write comments? To share knowledge. Why do we reuse code? Because it’s easier to maintain and understand. You see the picture.\n\nIn general, when implementing a solution, try to be lazy and search for existing solutions or parts of solutions. In a world that moves so fast, you can’t objectively go your own way and ignore a whole community.\n<h3 id=\"code-review\">Code Review</h3>\n<ul>\n\t<li>Should I have my code reviewed by someone else?</li>\n\t<li>Can others learn from what I’ve done?</li>\n\t<li>Should I enforce a code standard?</li>\n</ul>\nCode review is done first for quality purposes, but it is an excellent way to learn and share information to the whole team. Over the years, I’ve learned as much as a reviewer than a reviewee. To start adopting a code review process in your team, there are many tools or processes you can use. You can enforce <a href=\"https://help.github.com/articles/using-pull-requests/\">pull requests</a> on your master branch or use softwares like:\n<ul>\n\t<li><a href=\"https://www.phacility.com/\">Phabricator</a></li>\n\t<li><a href=\"https://en.wikipedia.org/wiki/Gerrit_(software)\">Gerrit</a></li>\n\t<li><a href=\"https://www.reviewboard.org/\">Reviewboard</a></li>\n\t<li><a href=\"https://www.atlassian.com/software/crucible\">Crucible</a></li>\n</ul>\n<h3 id=\"maintainability\">Maintainability</h3>\n<ul>\n\t<li>Is it a quick demo?</li>\n\t<li>Will it be in a product?</li>\n\t<li>How many end users will use it?</li>\n\t<li>How long will it be used?</li>\n\t<li>Does it need documentation?</li>\n</ul>\nA quick one-time demo that will be put to trash at the end of the week doesn’t need the same maintenance effort as a feature in the main product. A great quote about maintainability is “Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.”\n\nOn another subject, <a href=\"http://www.compaid.com/caiinternet/ezine/capersjones-maintenance.pdf\">a group of researchers</a> identified some key factors that can affect the maintenance of software. As positive impact factors, they talk about <em>Maintenance specialists</em>, <em>High staff experience</em>, <em>Table-driven variables and data</em>, and <em>Low complexity of base code</em>. They also list negative factors like: <em>Error prone modules</em>, <em>Embedded variables and data</em>, <em>Staff inexperience</em>, and <em>High complexity of base code</em>. In other words, make sure to follow best practices, keep it simple and stupid, and have a way to measure your application with tools (complexity analysis, unit testing, etc.). (Here’s<a href=\"https://www.amazon.ca/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052\"> another good book</a>)\n<h3 id=\"tests\">Tests</h3>\n<ul>\n\t<li>What are the use cases?</li>\n\t<li>What could fail?</li>\n\t<li>What behavior could change?</li>\n\t<li>Do I really want to do this manually each time there’s a release?</li>\n\t<li>What should my test cover?</li>\n</ul>\nTry to find that pesky bug that someone would run into in production. Unit testing reduces your maintenance and saves money - it’s a medium-term investment. A bug found early in the software lifecycle costs a lot less than a bug found by a client.\n\nEvery language has its own way of doing unit tests. Take advantage of that fact and integrate unit tests in your build process. Try testing the modules individually and together. To do that, you can use mocking framework <a href=\"http://source.coveo.com/2014/10/01/java8-mockito/\">Mockito</a>, <a href=\"https://github.com/Moq/moq4/wiki/Quickstart\">Moq</a>, <a href=\"http://jsmockito.org/\">JsMockito</a>) to really corner a part of your application and test it easily. Those tests should be lightning fast and run each time someone makes a change. Also, for integration tests, you must mimic the real thing as much as you can. In those cases, you can use external calls, events recording/replaying, or even a real user session emulation (like <a href=\"http://www.seleniumhq.org/\">Selenium</a> or <a href=\"http://phantomjs.org/\">PhantomJS</a>).\n\nAn important part of unit testing is making sure a failing test is investigated - a green build must be a team priority. All those tests will make sure that when you change something in your code, it doesn’t break anything. Running the tests systematically will accelerate development times and enable confidence in minor changes.\n<h2 id=\"build--deploy\">Build &amp; Deploy</h2>\nI’ve put together the build and deploy process because they have a lot of common goals.\n<h3 id=\"replicable\">Replicable</h3>\n<ul>\n\t<li>Can anyone replicate the same setup easily?</li>\n\t<li>Are all environments essentially the same?</li>\n\t<li>Are the developers using something that looks like the production environment?</li>\n</ul>\nA setup that looks like the real thing really helps the developers to code and test potential pitfalls. There are a lot of tools that can help you standardize the build and deploy processes. To help you, you can check some tools like <a href=\"http://gulpjs.com/\">gulp</a>, <a href=\"https://msdn.microsoft.com/en-us/library/dd393574.aspx\">msbuild</a>, and <a href=\"https://maven.apache.org/\">maven</a> for the build process, and <a href=\"https://www.npmjs.com/\">npm</a>, <a href=\"https://en.wikipedia.org/wiki/Pip_(package_manager)\">pip</a>, and <a href=\"https://www.nuget.org/\">NuGet</a> for your dependencies management. Typically, each language has its own way of doing things.\n\nWhen you know what your build process looks like, make it work into a continuous integration platform like <a href=\"https://jenkins.io/\">Jenkins</a>, <a href=\"https://travis-ci.org/\">Travis</a> or <a href=\"https://www.jetbrains.com/teamcity/\">TeamCity</a>. Those tools will build your project and make sure everyone can build it correctly and not only <em>On Their Machine<sup>TM</sup></em>.\n\nOverall, the processes must be so easy that any developer would be able to build and deploy to their dev environment. One person must not have the exclusive knowledge on how to build or deploy - there shouldn’t have any human single point of failure for these processes.\n<h3 id=\"uptime\">Uptime</h3>\n<ul>\n\t<li>When an error happens, can we recover?</li>\n\t<li>Will data be lost?</li>\n\t<li>What uptime (<a href=\"https://fr.wikipedia.org/wiki/Service_level_agreement\">SLA</a>) are we aiming for?</li>\n</ul>\nWhen maintaining software, uptime and data integrity are normally very important things and there are a lot of articles that talk about them. To achieve uptime at Coveo, we usually put the upgraded module in read-only for a certain amount of time and create a parallel module that isn’t active for the clients. Then, we test it and make sure everything works correctly on the new one. When ready, we swap (gradually, when we can) the two modules. At any point, we can rollback, and it won’t affect any of our clients.\n\nTo achieve data integrity, there aren’t a lot of things we can do that scales for big volumes. The best thing I know is to release a change without making the actual breaking change - e.g., removing a database column - in the same release as the upgraded solution. After that release, the software should not use the deleted resource. After a certain number of releases, when everything falls back on the new solution, you can make the breaking change. This way, you can still rollback and make sure data isn’t lost.\n<h2 id=\"monitoring\">Monitoring</h2>\nLast but not least - the monitoring. Any quality software must have a way to monitor itself so it can improve and fix problems before they arise. Monitoring is a way for your app to communicate to developers - by communicating through logs or alerts, a developer can know if the software is happy or needs something. Don’t mute your app; give it a voice!\n<h3 id=\"measurable\">Measurable</h3>\n<ul>\n\t<li>What is currently happening in my application?</li>\n\t<li>What are the performances?</li>\n\t<li>Where should I put my efforts to optimize the software?</li>\n</ul>\nThere’s a saying in the manager world: “If you can’t measure it, you can’t manage it.” This is also true for any software you write. If someone writes a black box, they can only control the input and monitor the output. As any black box, there are millions and millions of possibilities of what could go wrong.\n\nTo give an app a voice, you can use just about anything. Make it blink, beep, or vibrate; it doesn’t really matter - simply make sure you can communicate with it in real time. Obviously, there are solutions better than others (blinking isn’t very convenient). A great way to communicate with your app is by using a log platform (<a href=\"https://getsentry.com/welcome/\">Sentry</a>, <a href=\"http://www.stackdriver.com/\">Stackdriver</a>, <a href=\"https://www.elastic.co/products/logstash\">Logstash</a>, etc.) and integrate it with a logger (<a href=\"http://logging.apache.org/log4j/2.x/\">Log4XYZ</a>, console logs, etc.) This way, you’ll be able to see what’s happening nearly in real time and can produce statistics out of it - it will help tremendously.\n\nWhen the log part is done, you can use software like <a href=\"http://graphite.readthedocs.io/en/latest/faq.html\">Graphite</a> or <a href=\"https://influxdata.com/\">InfluxDB</a> to visualize and understand your software. Those tools can graph real-time your app performance and issues based on various data.\n<h3 id=\"actionable\">Actionable</h3>\nHaving your app talk to you is great, but you also have to make sure that when it’s yelling, someone is answering the call. So make sure you have a way to detect errors that create an action item somewhere. Again, there are some platforms that can alert you when something strange happens (<a href=\"https://www.pagerduty.com/\">Pager duty</a>, <a href=\"https://victorops.com/product/\">VictorOps</a>, <a href=\"https://ifttt.com/\">IFTTT</a>). Monitoring that doesn’t trigger any real action is way less effective.\n\nThis is it! These are all the questions I keep asking myself when I write and design any software. There is a lot more content we could write for each of these sections, but I’ve tried to keep it short and only give you a grasp of how I see things. Any feedback is welcome :).\n\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "6",
                "id": "2108",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2107",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2106",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "6b89e01d75b5ae63280182ed8657622d",
                "id": "2105",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/07/27/software-quality/",
                "id": "2104",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Programming": {
                    "description": "",
                    "parent": 0,
                    "post_count": 2,
                    "ID": 196,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:programming",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:programming/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "programming",
                    "name": "Programming"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "quality": {
                    "description": "",
                    "post_count": 1,
                    "ID": 16525,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:quality",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:quality/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "quality",
                    "name": "quality"
                },
                "code": {
                    "description": "",
                    "post_count": 3,
                    "ID": 656,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:code",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:code/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "code",
                    "name": "code"
                },
                "Programming": {
                    "description": "",
                    "post_count": 6,
                    "ID": 196,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "programming",
                    "name": "Programming"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2016/07/27/software-quality/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2016-07-27T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "software-quality",
        "categories": {
            "Programming": {
                "description": "",
                "parent": 0,
                "post_count": 2,
                "ID": 196,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:programming",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:programming/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "programming",
                "name": "Programming"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:45:31+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1723",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1723/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1723/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1723/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2016/07/21/using-request-objects-with-feign/",
        "revisions": [
            1735
        ],
        "title": "Using request objects with Feign",
        "short_URL": "http://wp.me/p7VTrW-rO",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {
            "python": {
                "description": "",
                "post_count": 1,
                "ID": 832,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:python",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:python/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "python",
                "name": "python"
            },
            "Programming": {
                "description": "",
                "post_count": 6,
                "ID": 196,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "programming",
                "name": "Programming"
            },
            "Feign": {
                "description": "",
                "post_count": 1,
                "ID": 939502,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:feign",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:feign/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "feign",
                "name": "Feign"
            },
            "code": {
                "description": "",
                "post_count": 3,
                "ID": 656,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:code",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:code/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "code",
                "name": "code"
            },
            "java": {
                "description": "",
                "post_count": 2,
                "ID": 1017,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:java",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:java/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "java",
                "name": "java"
            }
        },
        "global_ID": "d009aa99548f6ba3de8528907a66f82b",
        "ID": 1724,
        "content": "We recently decided to move our functional tests stack from python to Java, mainly to make coding them easier (our project’s backend is coded in Java) and thus increase the number of tests getting written. We needed a few things to make this possible and one of them was a complete and comprehensive Java client for the Usage Analytics API. Since a lot of the Java API clients we use internaly are built with <a href=\"https://github.com/OpenFeign/feign\">Netflix’s Feign</a>, I decided to give it a go.\n\n<!-- more -->\n\nAfter playing with Feign a little, I started to really like the tool. Writing an HTTP client with it is pretty easy, and it would not be a lot of work to maintain. I only had one major concern: there was no out of the box support for request objects.\n\nUsing request objects is a simple pattern that help maintain methods with many optional parameters, which is the case for some our API’s methods. Without request objects, calling a method would look like this:\n<div class=\"language-java highlighter-rouge\">\n<pre class=\"highlight\"><code><span class=\"n\">statsApi</span><span class=\"o\">.</span><span class=\"na\">getCombinedData</span><span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span>\n                         <span class=\"n\">to</span><span class=\"o\">,</span>\n                         <span class=\"n\">dimensions</span><span class=\"o\">,</span>\n                         <span class=\"n\">metrics</span><span class=\"o\">,</span>\n                         <span class=\"kc\">null</span><span class=\"o\">,</span>\n                         <span class=\"kc\">null</span><span class=\"o\">,</span>\n                         <span class=\"kc\">null</span><span class=\"o\">,</span>\n                         <span class=\"kc\">null</span><span class=\"o\">,</span>\n                         <span class=\"kc\">true</span><span class=\"o\">,</span>\n                         <span class=\"kc\">null</span><span class=\"o\">,</span>\n                         <span class=\"kc\">null</span><span class=\"o\">,</span>\n                         <span class=\"kc\">null</span><span class=\"o\">);</span>\n</code></pre>\n</div>\nNot looking so good, right? Using a request object transforms the method call into this:\n<div class=\"language-java highlighter-rouge\">\n<pre class=\"highlight\"><code><span class=\"n\">statsApi</span><span class=\"o\">.</span><span class=\"na\">getCombinedData</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">GetCombinedDataRequest</span><span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span>\n                                                    <span class=\"n\">to</span><span class=\"o\">,</span>\n                                                    <span class=\"n\">dimensions</span><span class=\"o\">,</span>\n                                                    <span class=\"n\">metrics</span><span class=\"o\">)</span>\n                         <span class=\"o\">.</span><span class=\"na\">withIncludeMetadata</span><span class=\"o\">(</span><span class=\"kc\">true</span><span class=\"o\">));</span>\n</code></pre>\n</div>\nWay better!\n\nFor the request objects, we settled for a constructor that would take the required parameters of the API call in arguments. The optional parameters can then be added to the request with setters or via the fluent interface pattern.\n\nSo, this is all very nice, but it does not fix my initial concern with Feign. I have some really nice request objects, but I cannot use any of them, as they are not supported. But, since Feign is very easily extendable, I simply added support for the request objects via a homemade encoder. And thus, the ReflectionEncoder was born.\n<div class=\"language-java highlighter-rouge\">\n<pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ReflectionEncoder</span> <span class=\"kd\">implements</span> <span class=\"n\">Encoder</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">static</span> <span class=\"kd\">final</span> <span class=\"n\">String</span> <span class=\"n\">DEFAULT_DATETIME_FORMAT</span> <span class=\"o\">=</span> <span class=\"s\">\"yyyy-MM-dd'T'HH:mm:ss.SSSZZ\"</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">ObjectMapper</span> <span class=\"n\">mapper</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Encoder</span> <span class=\"n\">fallbackEncoder</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">ReflectionEncoder</span><span class=\"o\">(</span><span class=\"n\">ObjectMapper</span> <span class=\"n\">mapper</span><span class=\"o\">,</span>\n                             <span class=\"n\">Encoder</span> <span class=\"n\">fallbackEncoder</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">mapper</span> <span class=\"o\">=</span> <span class=\"n\">mapper</span><span class=\"o\">;</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">fallbackEncoder</span> <span class=\"o\">=</span> <span class=\"n\">fallbackEncoder</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">encode</span><span class=\"o\">(</span><span class=\"n\">Object</span> <span class=\"n\">parametersObject</span><span class=\"o\">,</span> <span class=\"n\">Type</span> <span class=\"n\">bodyType</span><span class=\"o\">,</span> <span class=\"n\">RequestTemplate</span> <span class=\"n\">template</span><span class=\"o\">)</span>\n      <span class=\"kd\">throws</span> <span class=\"n\">EncodeException</span> <span class=\"o\">{</span>\n      <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">Request</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">.</span><span class=\"na\">isAssignableFrom</span><span class=\"o\">(</span><span class=\"n\">parametersObject</span><span class=\"o\">.</span><span class=\"na\">getClass</span><span class=\"o\">()))</span> <span class=\"o\">{</span>\n        <span class=\"n\">Map</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">,</span> <span class=\"n\">Object</span><span class=\"o\">&gt;</span> <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">HashMap</span><span class=\"o\">&lt;&gt;();</span>\n        <span class=\"k\">try</span> <span class=\"o\">{</span>\n          <span class=\"c1\">// Prepare the requestTemplate</span>\n          <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">Method</span> <span class=\"n\">method</span> <span class=\"o\">:</span> <span class=\"n\">parametersObject</span><span class=\"o\">.</span><span class=\"na\">getClass</span><span class=\"o\">().</span><span class=\"na\">getMethods</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">method</span><span class=\"o\">.</span><span class=\"na\">isAnnotationPresent</span><span class=\"o\">(</span><span class=\"n\">QueryParam</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n              <span class=\"n\">String</span> <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">method</span><span class=\"o\">.</span><span class=\"na\">getAnnotation</span><span class=\"o\">(</span><span class=\"n\">QueryParam</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">value</span><span class=\"o\">();</span>\n              <span class=\"n\">Object</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">method</span><span class=\"o\">.</span><span class=\"na\">invoke</span><span class=\"o\">(</span><span class=\"n\">parametersObject</span><span class=\"o\">);</span>\n              <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">Collection</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">.</span><span class=\"na\">isAssignableFrom</span><span class=\"o\">(</span><span class=\"n\">method</span><span class=\"o\">.</span><span class=\"na\">getReturnType</span><span class=\"o\">()))</span> <span class=\"o\">{</span>\n                  <span class=\"n\">value</span> <span class=\"o\">=</span>\n                      <span class=\"o\">((</span><span class=\"n\">Collection</span><span class=\"o\">&lt;?&gt;)</span> <span class=\"n\">value</span><span class=\"o\">)</span>\n                          <span class=\"o\">.</span><span class=\"na\">stream</span><span class=\"o\">()</span>\n                          <span class=\"o\">.</span><span class=\"na\">map</span><span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">-&gt;</span> <span class=\"n\">String</span><span class=\"o\">.</span><span class=\"na\">valueOf</span><span class=\"o\">(</span><span class=\"n\">v</span><span class=\"o\">))</span>\n                          <span class=\"o\">.</span><span class=\"na\">collect</span><span class=\"o\">(</span><span class=\"n\">Collectors</span><span class=\"o\">.</span><span class=\"na\">toList</span><span class=\"o\">());</span>\n                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">DateTime</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">.</span><span class=\"na\">isAssignableFrom</span><span class=\"o\">(</span><span class=\"n\">method</span><span class=\"o\">.</span><span class=\"na\">getReturnType</span><span class=\"o\">()))</span> <span class=\"o\">{</span>\n                  <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"o\">((</span><span class=\"n\">DateTime</span><span class=\"o\">)</span> <span class=\"n\">value</span><span class=\"o\">).</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"n\">DEFAULT_DATETIME_FORMAT</span><span class=\"o\">);</span>\n                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                  <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">String</span><span class=\"o\">.</span><span class=\"na\">valueOf</span><span class=\"o\">(</span><span class=\"n\">value</span><span class=\"o\">);</span>\n                <span class=\"o\">}</span>\n                <span class=\"n\">params</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"n\">key</span><span class=\"o\">,</span> <span class=\"n\">value</span><span class=\"o\">);</span>\n                <span class=\"n\">template</span><span class=\"o\">.</span><span class=\"na\">query</span><span class=\"o\">(</span><span class=\"n\">key</span><span class=\"o\">,</span> <span class=\"n\">keyToTemplate</span><span class=\"o\">(</span><span class=\"n\">key</span><span class=\"o\">));</span>\n              <span class=\"o\">}</span>\n            <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">method</span><span class=\"o\">.</span><span class=\"na\">isAnnotationPresent</span><span class=\"o\">(</span><span class=\"n\">PathParam</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n              <span class=\"n\">String</span> <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">method</span><span class=\"o\">.</span><span class=\"na\">getAnnotation</span><span class=\"o\">(</span><span class=\"n\">PathParam</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">).</span><span class=\"na\">value</span><span class=\"o\">();</span>\n              <span class=\"n\">Object</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">method</span><span class=\"o\">.</span><span class=\"na\">invoke</span><span class=\"o\">(</span><span class=\"n\">parametersObject</span><span class=\"o\">);</span>\n              <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">params</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"n\">key</span><span class=\"o\">,</span> <span class=\"n\">String</span><span class=\"o\">.</span><span class=\"na\">valueOf</span><span class=\"o\">(</span><span class=\"n\">value</span><span class=\"o\">));</span>\n              <span class=\"o\">}</span>\n            <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">method</span><span class=\"o\">.</span><span class=\"na\">isAnnotationPresent</span><span class=\"o\">(</span><span class=\"n\">BodyParam</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n              <span class=\"n\">template</span><span class=\"o\">.</span><span class=\"na\">body</span><span class=\"o\">(</span><span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">writeValueAsString</span><span class=\"o\">(</span><span class=\"n\">method</span><span class=\"o\">.</span><span class=\"na\">invoke</span><span class=\"o\">(</span><span class=\"n\">parametersObject</span><span class=\"o\">)));</span>\n            <span class=\"o\">}</span>\n          <span class=\"o\">}</span>\n\n          <span class=\"c1\">// Replace templates with actual values</span>\n          <span class=\"n\">template</span><span class=\"o\">.</span><span class=\"na\">resolve</span><span class=\"o\">(</span><span class=\"n\">params</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span>\n            <span class=\"n\">IllegalAccessException</span>\n            <span class=\"o\">|</span> <span class=\"n\">IllegalArgumentException</span>\n            <span class=\"o\">|</span> <span class=\"n\">InvocationTargetException</span>\n            <span class=\"o\">|</span> <span class=\"n\">JsonProcessingException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n          <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nf\">EncodeException</span><span class=\"o\">(</span><span class=\"s\">\"Could not encode parameter object correctly\"</span><span class=\"o\">,</span> <span class=\"n\">e</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n      <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n        <span class=\"n\">fallbackEncoder</span><span class=\"o\">.</span><span class=\"na\">encode</span><span class=\"o\">(</span><span class=\"n\">parametersObject</span><span class=\"o\">,</span> <span class=\"n\">bodyType</span><span class=\"o\">,</span> <span class=\"n\">template</span><span class=\"o\">);</span>\n      <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"nf\">keyToTemplate</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">key</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"s\">\"{\"</span> <span class=\"o\">+</span> <span class=\"n\">key</span> <span class=\"o\">+</span> <span class=\"s\">\"}\"</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>\n</div>\nIt may look complicated, but it’s in fact pretty simple. Here is how it works: if the object received by the encoder is of the right type, it will use reflection to find the getters of the object, and depending on the annotation, inject the parameter at the right place in the RequestTemplate. Otherwise, it will use a fallback encoder.\n\nNow, simply set the ReflectionEncoder in your client class with the builder provided by Feign and you are ready to go!\n\nHere is a complete example of a simple client using request objects.\n<div class=\"language-java highlighter-rouge\">\n<pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">interface</span> <span class=\"nc\">CustomDimensionsApi</span> <span class=\"kd\">extends</span> <span class=\"n\">ClientFactory</span><span class=\"o\">.</span><span class=\"na\">Api</span>\n<span class=\"o\">{</span>\n    <span class=\"nd\">@RequestLine</span><span class=\"o\">(</span><span class=\"s\">\"PUT /\"</span> <span class=\"o\">+</span> <span class=\"n\">ApiVersion</span><span class=\"o\">.</span><span class=\"na\">VERSION</span> <span class=\"o\">+</span> <span class=\"s\">\"/dimensions/custom/{apiName}\"</span><span class=\"o\">)</span>\n    <span class=\"n\">DimensionResponse</span> <span class=\"nf\">editDimension</span><span class=\"o\">(</span><span class=\"n\">EditDimensionRequest</span> <span class=\"n\">request</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n</code></pre>\n</div>\n<div class=\"language-java highlighter-rouge\">\n<pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">EditDimensionRequest</span> <span class=\"kd\">extends</span> <span class=\"n\">BaseRequest</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">apiName</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Boolean</span> <span class=\"n\">updatePastEvents</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">CustomDimensionModel</span> <span class=\"n\">customDimensionModel</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">EditDimensionRequest</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">apiName</span><span class=\"o\">,</span>\n                                <span class=\"n\">CustomDimensionModel</span> <span class=\"n\">customDimensionModel</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">apiName</span> <span class=\"o\">=</span> <span class=\"n\">apiName</span><span class=\"o\">;</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">customDimensionModel</span> <span class=\"o\">=</span> <span class=\"n\">customDimensionModel</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@PathParam</span><span class=\"o\">(</span><span class=\"s\">\"apiName\"</span><span class=\"o\">)</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getApiName</span><span class=\"o\">()</span> <span class=\"o\">{</span> <span class=\"k\">return</span> <span class=\"n\">apiName</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setApiName</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">apiName</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">apiName</span> <span class=\"o\">=</span> <span class=\"n\">apiName</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n\n    <span class=\"nd\">@QueryParam</span><span class=\"o\">(</span><span class=\"s\">\"updatePastEvents\"</span><span class=\"o\">)</span>\n    <span class=\"kd\">public</span> <span class=\"n\">Boolean</span> <span class=\"nf\">getUpdatePastEvents</span><span class=\"o\">()</span> <span class=\"o\">{</span> <span class=\"k\">return</span> <span class=\"n\">updatePastEvents</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setUpdatePastEvents</span><span class=\"o\">(</span><span class=\"n\">Boolean</span> <span class=\"n\">updatePastEvents</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">updatePastEvents</span> <span class=\"o\">=</span> <span class=\"n\">updatePastEvents</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n\n    <span class=\"nd\">@BodyParam</span>\n    <span class=\"kd\">public</span> <span class=\"n\">CustomDimensionModel</span> <span class=\"nf\">getCustomDimensionModel</span><span class=\"o\">()</span> <span class=\"o\">{</span> <span class=\"k\">return</span> <span class=\"n\">customDimensionModel</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setCustomDimensionModel</span><span class=\"o\">(</span><span class=\"n\">CustomDimensionModel</span> <span class=\"n\">customDimensionModel</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">customDimensionModel</span> <span class=\"o\">=</span> <span class=\"n\">customDimensionModel</span><span class=\"o\">;</span> <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"n\">EditDimensionRequest</span> <span class=\"nf\">withUpdatePastEvents</span><span class=\"o\">(</span><span class=\"n\">Boolean</span> <span class=\"n\">updatePastEvents</span><span class=\"o\">){</span>\n        <span class=\"n\">setUpdatePastEvents</span><span class=\"o\">(</span><span class=\"n\">updatePastEvents</span><span class=\"o\">);</span> <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>\n</div>\nThere you have it: a very simple HTTP client built with Feign, using a request object. It made coding our functional tests way easier and made them much cleaner. The next steps for us would be to combine that with <a href=\"http://source.coveo.com/2016/02/19/microservices-and-exception-handling/\">better exception handling</a> (awesome post by my friend Jacques-Etienne Beaudet, go check it out) and we would be unstoppable!\n\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "7",
                "id": "2117",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2116",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2115",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "cb24e4ffe3e18f8c6b5da7986196c7b8",
                "id": "2114",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/07/21/feign-request-object/",
                "id": "2113",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Programming": {
                    "description": "",
                    "parent": 0,
                    "post_count": 2,
                    "ID": 196,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:programming",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:programming/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "programming",
                    "name": "Programming"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "python": {
                    "description": "",
                    "post_count": 1,
                    "ID": 832,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:python",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:python/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "python",
                    "name": "python"
                },
                "Programming": {
                    "description": "",
                    "post_count": 6,
                    "ID": 196,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "programming",
                    "name": "Programming"
                },
                "Feign": {
                    "description": "",
                    "post_count": 1,
                    "ID": 939502,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:feign",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:feign/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "feign",
                    "name": "Feign"
                },
                "code": {
                    "description": "",
                    "post_count": 3,
                    "ID": 656,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:code",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:code/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "code",
                    "name": "code"
                },
                "java": {
                    "description": "",
                    "post_count": 2,
                    "ID": 1017,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:java",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:java/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "java",
                    "name": "java"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2016/07/21/using-request-objects-with-feign/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2016-07-21T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "using-request-objects-with-feign",
        "categories": {
            "Programming": {
                "description": "",
                "parent": 0,
                "post_count": 2,
                "ID": 196,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:programming",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:programming/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "programming",
                "name": "Programming"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:46:19+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1724",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1724/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1724/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1724/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2016/06/22/of-reading-too-many-resumes/",
        "revisions": [
            1736
        ],
        "title": "Of reading too many resumes",
        "short_URL": "http://wp.me/p7VTrW-rP",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {
            "jobs": {
                "description": "",
                "post_count": 1,
                "ID": 3558,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jobs",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jobs/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "jobs",
                "name": "jobs"
            },
            "careers": {
                "description": "",
                "post_count": 1,
                "ID": 20466,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:careers",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:careers/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "careers",
                "name": "careers"
            },
            "Resumes": {
                "description": "",
                "post_count": 1,
                "ID": 113245,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:resumes",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:resumes/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "resumes",
                "name": "Resumes"
            }
        },
        "global_ID": "2b858a6190c622538277b42782931abe",
        "ID": 1725,
        "content": "We have many interns right now at Coveo. For the summer, this process starts in February when we get over one hundred applications through multiple universities. All those applications had one thing in common, <strong>The Resume</strong>.\n\nOver the years, I’ve read hundreds of them and have therefore accumulated a good list of what you should and shouldn’t do.\n\n<!-- more -->\n\nKeep in mind that this will be aimed more toward people looking for internships, but most details also apply to the general public. Also, this is based on personal experience; I’ve not consulted a long list of experts. Finally, I have a long list of notes. This is only a subset of quick things around submitting your resume.\n<h2 id=\"keep-it-short\">Keep it short!</h2>\n<a href=\"http://www.forbes.com/sites/susanadams/2012/03/26/what-your-resume-is-up-against/\">A study in 2012</a> has shown that the average recruiter will spend 6.25 seconds (yes, seconds) before deciding if further investigation is required, or if this resume goes into the (virtual) recycling bin. This is probably less time than you invested in your latest tweet.\n\nBest recommendation is to keep your resume as short as possible. Intern or fresh out of school? 1 page, top 2 is if you have had many internships, projects, open source contributions, etc.\n<h2 id=\"keep-it-electronic\">Keep it electronic!</h2>\nAlways remember when you apply for what job you are applying. Want to come and code with us? Awesome. The only resume you have is paper? Awesome. As in <em>I just missed my plane</em> awesome.\n\nThe electronic version I can share it automatically with everybody I need to, have it on my laptop if I ever need to, search for it, search in it.\nTo achieve the same result with the paper version, I need to scan it, OCR it, then do all the other steps. This is too much of a time investment in turning a document into bits and bytes for somebody that should help us solve gigantic programming challenges.\n\nOh, and the electronic version cannot get covered in spilled wine. Just saying.\n<h2 id=\"keep-your-metadata-clean\">Keep your metadata clean!</h2>\nYou know those special properties in Words and PDF; title author etc.? Be sure to fill them in. The more the document goes into software, the more chances this meta information ends up being used.\n\nYou made your resume based on your mother’s because you liked her template? If you don’t fill the properties, you might not only end up using her fonts. Oh, you liked her recipes template. Even better.\n<h2 id=\"keep-your-filename-clean\">Keep your filename clean!</h2>\nThere are a few subtopics here.\n\nFirst, welcome to 1995. Long gone the 8 char limit. You can use more than a word to name your document. Actually, please do.\n\nSecond, choose a name in a way that scales for the person receiving it. You may decide to name the resume with the company you are sending it to (so you know which version you sent). But put yourself in my shoes. I get 100 resume all named “Coveo.pdf”. I then need to do some renaming to avoid them clashing if I drop them in the same folder. <em>2016 Summer - John Doe for Coveo.pdf</em> Now we are talking. I can guess from this you’d be able to write proper email title, variable and function name and code a distributed resource locking mechanism.\n\nLastly, don’t PascalCase your words. I may search by name. I have a better chance to find it if the OS or the system can recognize the words. Separate them with a space, hyphen or underscore (the last one does not always work well in all systems).\n<h2 id=\"the-cover-letter\">The Cover Letter</h2>\nThere are two philosophies here. Those who don’t look at the cover letter (some study say it’s 90% of the market), and those who find it’s an important way to know a candidate. I think they are a good way to know the motivations of a candidate (or lack thereof).\n\nYou have a few options, in my preferred order:\n<ul>\n\t<li>A personalized cover letter where you clearly took the time to write something unique for us</li>\n\t<li>No cover letter (Close second option)</li>\n\t<li>A cover text sang by a dancing clown while throwing pies and confetti running around the office</li>\n\t<li>A generic cover letter that you could have sent elsewhere if you’d replace 3-4 words</li>\n</ul>\nSo if you don’t have time to make a serious cover letter, then avoid going for the quick fix.\n\nI’ll add that a cover letter is an introduction to your resume. When sending it by email, you don’t need a PDF cover letter. Your email IS the introduction to your resume. It is your cover letter. Don’t introduce your introduction to your resume, I’ll feel over-introduced.\n<h2 id=\"so\">So!</h2>\nHere you go. A few quick things to keep in mind before submitting your resume. No rocket science, but details can make a difference when we are going through piles of resumes and there is not much separating candidate #19 from #20 in line.\n\nNext time I’ll go deeper into what to write in your curriculum vitae.\n\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "8",
                "id": "2126",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2125",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2124",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "90eb901d7b3f43dcb8c9a410c03ee3c9",
                "id": "2123",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/06/22/of-reading-too-many-resumes/",
                "id": "2122",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Resumes": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 113245,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:resumes",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:resumes/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "resumes",
                    "name": "Resumes"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "jobs": {
                    "description": "",
                    "post_count": 1,
                    "ID": 3558,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jobs",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jobs/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "jobs",
                    "name": "jobs"
                },
                "careers": {
                    "description": "",
                    "post_count": 1,
                    "ID": 20466,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:careers",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:careers/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "careers",
                    "name": "careers"
                },
                "Resumes": {
                    "description": "",
                    "post_count": 1,
                    "ID": 113245,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:resumes",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:resumes/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "resumes",
                    "name": "Resumes"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2016/06/22/of-reading-too-many-resumes/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2016-06-22T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "of-reading-too-many-resumes",
        "categories": {
            "Resumes": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 113245,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:resumes",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:resumes/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "resumes",
                "name": "Resumes"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:47:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1725",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1725/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1725/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1725/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2016/06/20/how-to-prevent-frequent-javascript-mistakes/",
        "revisions": [
            1737
        ],
        "title": "How to prevent frequent JavaScript mistakes",
        "short_URL": "http://wp.me/p7VTrW-rQ",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {
            "javascript": {
                "description": "",
                "post_count": 7,
                "ID": 457,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "javascript",
                "name": "javascript"
            },
            "Programming": {
                "description": "",
                "post_count": 6,
                "ID": 196,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "programming",
                "name": "Programming"
            },
            "ESLint": {
                "description": "",
                "post_count": 1,
                "ID": 222469697,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:eslint",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:eslint/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "eslint",
                "name": "ESLint"
            }
        },
        "global_ID": "d115c585487b4c9b27562482af859ae3",
        "ID": 1726,
        "content": "When writing JavaScript, I spend a lot of time fixing simple mistakes. Unlike\ncompiled languages you are more likely to make mistakes. It is easy for syntax\nerrors to sneak into your code without realizing it until you actually try and\nrun your code.\n\nHow many times have I got an <code class=\"highlighter-rouge\">undefined</code> variable because I refactored some code\nand forgot to rename <em>that</em> variable.\n\nEven though it has been more than 5 years since I wrote my first <code class=\"highlighter-rouge\">Hello World</code>.\nThe feeling remains the same – Why did I make this mistake <em>again</em> ?\n\n<!-- more -->\n\nTo help me fix some of those mistakes, I tried a few linting tools over the\nyears. From the overly strict <a href=\"http://www.jslint.com/\">JSLint</a> to the more\nflexible variant <a href=\"http://jshint.com/\">JSHint</a> and <a href=\"http://jscs.info/\">JSCS</a>. I\nrecently discovered <a href=\"http://eslint.org/\">ESLint</a> and fell in love with its\nextensibility and features.\n<blockquote>JSCS and ESLint have merged since April 14th you can check their blog posts <a href=\"https://medium.com/@markelog/jscs-end-of-the-line-bc9bf0b3fdb2#.glmbaqz0c\">JSCS</a> and <a href=\"http://eslint.org/blog/2016/04/welcoming-jscs-to-eslint\">ESLint</a>.</blockquote>\n<h1 id=\"overview\">Overview</h1>\nLinting is a process of checking the source code for <em>programmatic</em> as well as\n<em>stylistic</em> errors. A <code class=\"highlighter-rouge\">Lint</code> or a <code class=\"highlighter-rouge\">Linter</code> is a program that supports linting.\nThey are available for most languages like CSS, Python, JavaScript, HTML, etc…\n<h2 id=\"eslint\">ESLint</h2>\n<a href=\"http://eslint.org/\">ESLint</a> is the most recent of the four linting tools\npreviously mentioned. It was created by <strong>Nicholas C. Zakas</strong> in june 2013.\n<blockquote>Its goal is to provide a pluggable linting utility for JavaScript.</blockquote>\nDesigned to be heavily extensible, it comes with a large set of custom rules and\nit is really easy to install. It gives precise and concise output by including\nthe rule name out of the box. You are always aware of which rule was causing an\nerror.\n\n<code class=\"highlighter-rouge\">ESLint</code> provides good documentation for <a href=\"http://eslint.org/docs/rules/\">its\nrules</a>. It is easy to follow and is grouped into\nlogical categories. Each rule gives details about what it <em>enforces</em> or <em>not</em>\nand provides examples of <strong>good</strong> and <strong>bad</strong> written code for it.\n<h3 id=\"pros\">Pros</h3>\n<ul>\n\t<li>Customizable: every rule can be toggled, and many rules have extra settings\nthat can be tweaked</li>\n\t<li>ES6/JSX support out of the box</li>\n\t<li>Supports custom reporters</li>\n\t<li>Has many plugins available and is very extensible</li>\n\t<li>Include many rules not available in other linters</li>\n</ul>\n<h3 id=\"cons\">Cons</h3>\n<ul>\n\t<li>Slow, compared to JSHint or JSCS, but faster than these two if combined</li>\n\t<li>Requires some configuration to get started</li>\n</ul>\n<h2 id=\"extensibility\">Extensibility</h2>\nSince <code class=\"highlighter-rouge\">ESLint</code> is extremely extensible, I have created a <a href=\"https://github.com/coveo/eslint-config-coveo\">shareable config rule\nset</a> to help my fellow colleagues\nhere at <a href=\"www.coveo.com\">Coveo</a> who write Pure JavaScript.\n<h3 id=\"open-sourcing\">Open-sourcing</h3>\n<code class=\"highlighter-rouge\">eslint-config-coveo</code> started as an internal project for my team (Salesforce\nintegration) then we decided – Hey… why not open-source it?\n\nWith that in mind, I created a gulp task wrapper that uses <strong>our</strong> rule set\ndefined from <a href=\"https://github.com/coveo/eslint-config-coveo\">that shareable\nconfig</a>. You can find the project\n<code class=\"highlighter-rouge\">pretty-javascript</code> <a href=\"https://github.com/coveo/pretty-javascript\">here</a>.\n<h2 id=\"want-to-be-a-javascript-high-priest-of-digital-innovation\">Want to be a JavaScript high priest of digital innovation?</h2>\nFor anyone who wants to write JavaScript like we do it at <strong>Coveo</strong> follow these\nsimple steps to get you up and running.\n<ul>\n\t<li>Install <code class=\"highlighter-rouge\">pretty-javascript</code> and <code class=\"highlighter-rouge\">gulp</code> packages from <code class=\"highlighter-rouge\">npm</code></li>\n</ul>\n<div class=\"language-sh highlighter-rouge\">\n<pre class=\"highlight\"><code>npm install --save-dev pretty-javascript gulp\n</code></pre>\n</div>\n<ul>\n\t<li>Create an <code class=\"highlighter-rouge\">eslint</code> configuration file</li>\n</ul>\n.eslintrc.yaml\n<div class=\"language-yaml highlighter-rouge\">\n<pre class=\"highlight\"><code><span class=\"nn\">---</span>\n  <span class=\"s\">extends</span><span class=\"pi\">:</span> <span class=\"s\">coveo</span>\n  <span class=\"s\">rules</span><span class=\"pi\">:</span>\n    <span class=\"s\">... (they can be overriden)</span>\n</code></pre>\n</div>\n<strong>OR</strong>\n\n.eslintrc.json\n<div class=\"language-json highlighter-rouge\">\n<pre class=\"highlight\"><code><span class=\"p\">{</span>\n  <span class=\"nt\">\"extends\"</span><span class=\"p\">:</span> <span class=\"s2\">\"coveo\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"rules\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"err\">...</span> <span class=\"err\">(they</span> <span class=\"err\">can</span> <span class=\"err\">be</span> <span class=\"err\">overriden)</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n<ul>\n\t<li>Create a gulp task to run <code class=\"highlighter-rouge\">eslint</code></li>\n</ul>\ngulpfile.js\n<div class=\"language-js highlighter-rouge\">\n<pre class=\"highlight\"><code><span class=\"kd\">var</span> <span class=\"nx\">gulp</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp'</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">linter</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'pretty-javascript'</span><span class=\"p\">);</span>\n\n<span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">task</span><span class=\"p\">(</span><span class=\"s1\">'lint'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">gulp</span>\n    <span class=\"p\">.</span><span class=\"nx\">src</span><span class=\"p\">(</span><span class=\"s1\">'src/**/*.js'</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">linter</span><span class=\"p\">());</span>\n<span class=\"p\">});</span>\n</code></pre>\n</div>\n<h2 id=\"want-to-be-a-typescript-tech-wizard-in-residence\">Want to be a TypeScript tech-wizard-in-residence?</h2>\nFor TypeScript lovers, <strong>Coveo</strong> also provides a gulp task wrapper to lint\nTypeScript. The project <em>pretty-typescript</em> can be found\n<a href=\"https://github.com/coveo/pretty-typescript\">here</a> (huge kudos to Dominique\nBégin).\n\nSimilarly to <em>pretty-javascript</em>, you only have to include <code class=\"highlighter-rouge\">pretty-typescript</code>\nand <code class=\"highlighter-rouge\">gulp</code> from <code class=\"highlighter-rouge\">npm</code>.\n<div class=\"language-sh highlighter-rouge\">\n<pre class=\"highlight\"><code>npm install --save-dev pretty-typescript gulp\n</code></pre>\n</div>\nThen simply add a task to lint your TypeScript code in your <code class=\"highlighter-rouge\">gulpfile</code> as\nfollows :\n<div class=\"language-js highlighter-rouge\">\n<pre class=\"highlight\"><code><span class=\"kd\">var</span> <span class=\"nx\">linter</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'pretty-typescript'</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">gulp</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp'</span><span class=\"p\">);</span>\n\n<span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">task</span><span class=\"p\">(</span><span class=\"s1\">'lint'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">gulp</span>\n    <span class=\"p\">.</span><span class=\"nx\">src</span><span class=\"p\">(</span><span class=\"s1\">'/src/**/*.ts'</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">linter</span><span class=\"p\">())</span>\n    <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">dest</span><span class=\"p\">(</span><span class=\"s1\">'src'</span><span class=\"p\">));</span>\n<span class=\"p\">});</span>\n</code></pre>\n</div>\n<blockquote>Sit back, relax and enjoy watching your silly mistakes from your terminal\noutput!</blockquote>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "9",
                "id": "2135",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2134",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2133",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "74b35dc908597bb51d0b787a3e5c30b5",
                "id": "2132",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/06/20/open-source-coveo-javascript-linter/",
                "id": "2131",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "javascript": {
                    "description": "",
                    "parent": 0,
                    "post_count": 5,
                    "ID": 457,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "javascript",
                    "name": "javascript"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "javascript": {
                    "description": "",
                    "post_count": 7,
                    "ID": 457,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "javascript",
                    "name": "javascript"
                },
                "Programming": {
                    "description": "",
                    "post_count": 6,
                    "ID": 196,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "programming",
                    "name": "Programming"
                },
                "ESLint": {
                    "description": "",
                    "post_count": 1,
                    "ID": 222469697,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:eslint",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:eslint/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "eslint",
                    "name": "ESLint"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2016/06/20/how-to-prevent-frequent-javascript-mistakes/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2016-06-20T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "how-to-prevent-frequent-javascript-mistakes",
        "categories": {
            "javascript": {
                "description": "",
                "parent": 0,
                "post_count": 5,
                "ID": 457,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "javascript",
                "name": "javascript"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:47:34+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1726",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1726/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1726/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1726/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2016/06/15/adding-support-for-require-in-nashorn/",
        "revisions": [
            1738
        ],
        "title": "Adding support for 'require' in Nashorn",
        "short_URL": "http://wp.me/p7VTrW-rR",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {
            "javascript": {
                "description": "",
                "post_count": 7,
                "ID": 457,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "javascript",
                "name": "javascript"
            },
            "Nashorn": {
                "description": "",
                "post_count": 1,
                "ID": 6646766,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:nashorn",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:nashorn/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "nashorn",
                "name": "Nashorn"
            },
            "NodeJS": {
                "description": "",
                "post_count": 1,
                "ID": 31896918,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:nodejs",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:nodejs/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "nodejs",
                "name": "NodeJS"
            }
        },
        "global_ID": "7976f41024ec36fcccdf94fc8bb66b52",
        "ID": 1727,
        "content": "Some parts of Coveo’s query pipeline are <a href=\"http://source.coveo.com/2014/09/23/adding-server-side-scripting/\">extensible using JavaScript</a>. We initially used <a href=\"http://dynjs.org/\">DynJS</a>, but since it’s now unmaintained, we had to switch to a new JS engine, namely Nashorn that comes out-of-the-box starting with Java 8. Nashorn works pretty well, but it’s missing built-in support for the <code class=\"highlighter-rouge\">require</code> function that is used with CommonJS modules.\n<!-- more -->\nSince it’s a pretty handy feature, we have decided to <a href=\"https://github.com/coveo/nashorn-commonjs-modules\">open source</a> it and publish it on <a href=\"http://mvnrepository.com/artifact/com.coveo/nashorn-commonjs-modules\">Maven Central</a>.\n\nUsing it is pretty straightforward: you simply need to call the <code class=\"highlighter-rouge\">Require.enable</code> method in your Java code, passing it your instance of <code class=\"highlighter-rouge\">NashornScriptEngine</code> as well as an implementation of a special interface called <code class=\"highlighter-rouge\">Folder</code>, responsible of loading JavaScript files from the backing medium of your choice. Here is an example:\n<div class=\"language-java highlighter-rouge\">\n<pre class=\"highlight\"><code><span class=\"n\">FilesystemFolder</span> <span class=\"n\">rootFolder</span> <span class=\"o\">=</span> <span class=\"n\">FilesystemFolder</span><span class=\"o\">.</span><span class=\"na\">create</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">File</span><span class=\"o\">(</span><span class=\"s\">\"/path/to/my/folder\"</span><span class=\"o\">),</span> <span class=\"s\">\"UTF-8\"</span><span class=\"o\">);</span>\n<span class=\"n\">Require</span><span class=\"o\">.</span><span class=\"na\">enable</span><span class=\"o\">(</span><span class=\"n\">engine</span><span class=\"o\">,</span> <span class=\"n\">rootFolder</span><span class=\"o\">);</span>\n</code></pre>\n</div>\nPretty simple, right? Once this is done you can use <code class=\"highlighter-rouge\">require</code> in your JavaScript code, just as you would within NodeJS:\n<div class=\"language-js highlighter-rouge\">\n<pre class=\"highlight\"><code><span class=\"kd\">var</span> <span class=\"nx\">foo</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'./foo.js'</span><span class=\"p\">);</span>\n</code></pre>\n</div>\nAs for loading files, we provide out-of-the-box implementations for using the filesystem and Java resources. Providing your own is a straightforward process — as an example, here at Coveo we use one that is backed by an SQL database.\n\nAs far as I know, the library fully implements the NodeJS API for loading modules (as described <a href=\"https://nodejs.org/api/modules.html\">here</a>). It even supports loading modules from the <code class=\"highlighter-rouge\">node_modules</code> folder and subfolders, so you can use <code class=\"highlighter-rouge\">npm</code> to download libraries and their dependencies. Of course, Nashorn doesn’t support the Node APIs so most modules simply won’t work, but you can still use it to download portable libraries such as <a href=\"http://underscorejs.org/\">Underscore</a>.\n\nEnjoy!\n\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "10",
                "id": "2144",
                "key": "original_post_id"
            },
            {
                "value": "10",
                "id": "2152",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2143",
                "key": "restapi_import_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2151",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2142",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "my_blog",
                "id": "2150",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "cb16c16b7782b453598fa14a03211d66",
                "id": "2141",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "cb16c16b7782b453598fa14a03211d66",
                "id": "2149",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/06/15/nashorn-require/",
                "id": "2140",
                "key": "rss_pi_source_url"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/06/15/nashorn-require/",
                "id": "2148",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "javascript": {
                    "description": "",
                    "parent": 0,
                    "post_count": 5,
                    "ID": 457,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "javascript",
                    "name": "javascript"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "javascript": {
                    "description": "",
                    "post_count": 7,
                    "ID": 457,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "javascript",
                    "name": "javascript"
                },
                "Nashorn": {
                    "description": "",
                    "post_count": 1,
                    "ID": 6646766,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:nashorn",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:nashorn/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "nashorn",
                    "name": "Nashorn"
                },
                "NodeJS": {
                    "description": "",
                    "post_count": 1,
                    "ID": 31896918,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:nodejs",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:nodejs/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "nodejs",
                    "name": "NodeJS"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2016/06/15/adding-support-for-require-in-nashorn/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2016-06-15T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "adding-support-for-require-in-nashorn",
        "categories": {
            "javascript": {
                "description": "",
                "parent": 0,
                "post_count": 5,
                "ID": 457,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "javascript",
                "name": "javascript"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:48:39+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1727",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1727/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1727/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1727/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2016/05/11/isomorphic-typescript-fetch-promises-ava-and-coverage/",
        "title": "Isomorphic TypeScript, fetch, promises, ava and coverage",
        "short_URL": "http://wp.me/p7VTrW-rS",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "731e29f55926c45dfb4eab065cb415dd",
        "ID": 1728,
        "content": "<p>Writing an API client in JavaScript is a lot of work, you have to write one for\nNode.js and one for the browser. I found out a way to have both on the same\ncodebase with the same API, all that with only changes to the build scripts.\n It’s called isomorphic code, and doing it with modern TypeScript isn’t easy,\nbut it’s achievable.</p>\n\n<!-- more -->\n\n<p>TypeScript brings lots of advantages to the JavaScript world with almost mandatory\ntypings. But TypeScript code is transpiled, and to play well with other libraries\nthat aren’t originally written in TypeScript needs manually written type\ndefinition and some hacks to play well with other external tools, like code\ncoverage and test frameworks.</p>\n\n<h1 id=\"isomorphic\">Isomorphic</h1>\n\n<p>Isomorphic is a trendy word with a nice soul behind, that means sharing some code\nbetween frontend and backend with minor or no changes. Since TypeScript can be compiled\nto JavaScript, it can run on Node.js and in the browser. An API client sharing the\nsame code could be written with the same code everywhere.</p>\n\n<p>I want my API client to fetch resources using the same simple call everywhere.</p>\n\n<div class=\"language-js highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kr\">const</span> <span class=\"nx\">client</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">coveoanalytics</span><span class=\"p\">.</span><span class=\"nx\">analytics</span><span class=\"p\">.</span><span class=\"nx\">Client</span><span class=\"p\">({</span> <span class=\"na\">token</span> <span class=\"p\">:</span> <span class=\"s1\">'YOUR-TOKEN'</span><span class=\"p\">})</span>\n<span class=\"c1\">// Send your event</span>\n<span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">sendCustomEvent</span><span class=\"p\">({</span>\n  <span class=\"na\">eventType</span><span class=\"p\">:</span> <span class=\"s2\">\"dog\"</span><span class=\"p\">;</span>\n  <span class=\"nl\">eventValue</span><span class=\"p\">:</span> <span class=\"s2\">\"Hello! Yes! This is Dog!\"</span><span class=\"p\">;</span>\n<span class=\"p\">});</span>\n</code></pre>\n</div>\n\n<p>All this without having 2 codebases.</p>\n\n<h2 id=\"window-fetch-and-promises\">Window, fetch and promises</h2>\n\n<p>Let’s fix the main difference between Node.js and the browser.</p>\n\n<p>Getting data from the browser is done using an <code class=\"highlighter-rouge\">XMLHttpRequest</code> or using the new\n<code class=\"highlighter-rouge\">fetch</code> API that is defined on the global object <code class=\"highlighter-rouge\">window</code>.</p>\n\n<div class=\"language-js highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:80/'</span><span class=\"p\">).</span><span class=\"nx\">then</span><span class=\"p\">(</span> <span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// Do stuff with the response</span>\n<span class=\"p\">})</span>\n</code></pre>\n</div>\n\n<p>In Node.js:</p>\n\n<div class=\"language-js highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kd\">var</span> <span class=\"nx\">http</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'http'</span><span class=\"p\">);</span>\n<span class=\"nx\">http</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">({</span>\n  <span class=\"na\">hostname</span><span class=\"p\">:</span> <span class=\"s1\">'localhost'</span><span class=\"p\">,</span>\n  <span class=\"na\">port</span><span class=\"p\">:</span> <span class=\"mi\">80</span><span class=\"p\">,</span>\n  <span class=\"na\">path</span><span class=\"p\">:</span> <span class=\"s1\">'/'</span>\n<span class=\"p\">},</span> <span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// Do stuff with response</span>\n<span class=\"p\">})</span>\n</code></pre>\n</div>\n\n<p>First things first, the fetch API is nice, simple and returns promises. But fetch\nisn’t defined in all browsers and is not even part of Node.js standard libraries.\nPromises aren’t defined in all browsers.</p>\n\n<p>Fortunately there are nice libraries for both of these cases. Let’s use them.</p>\n\n<div class=\"language-sh highlighter-rouge\"><pre class=\"highlight\"><code>npm install --save es6-promises isomorphic-fetch\n</code></pre>\n</div>\n\n<p>But wait, don’t go too fast! You are in TypeScript you need the type definition\nif you don’t want to put the <code class=\"highlighter-rouge\">any</code> type everywhere. Again in the console:</p>\n\n<div class=\"language-sh highlighter-rouge\"><pre class=\"highlight\"><code>npm install --save-dev typings\ntypings install --save --ambient isomorphic-fetch es6-promise\n</code></pre>\n</div>\n\n<p>Typings is a nice tool to find type definitions and it contains the type\ndefinition of most popular JavaScript library.</p>\n\n<p>Now let’s handle the 2 cases, in the browser and in Node.js.</p>\n\n<h3 id=\"nodejs\">Node.js</h3>\n\n<p>Since <code class=\"highlighter-rouge\">fetch</code> is defined on the global object and promises are natively\nimplemented in Node.js. Just tell the people using your library to inject\n<code class=\"highlighter-rouge\">isomorphic-fetch</code> in their Node.js application.</p>\n\n<p>Compile using <code class=\"highlighter-rouge\">tsc</code> with a tsconfig.json</p>\n\n<div class=\"language-json highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nt\">\"compilerOptions\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nt\">\"module\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"commonjs\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nt\">\"target\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"es5\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nt\">\"outDir\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"dist\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nt\">\"declaration\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nt\">\"noImplicitAny\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nt\">\"removeComments\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nt\">\"sourceMap\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"nt\">\"files\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n      </span><span class=\"s2\">\"... your files\"</span><span class=\"w\">\n      </span><span class=\"s2\">\"typings/main.d.ts\"</span><span class=\"w\">\n    </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre>\n</div>\n\n<p>With a Node.js entrypoint like this <code class=\"highlighter-rouge\">index.ts</code> script:</p>\n\n<div class=\"language-js highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kr\">import</span> <span class=\"o\">*</span> <span class=\"nx\">as</span> <span class=\"nx\">analytics</span> <span class=\"nx\">from</span> <span class=\"s1\">'./analytics'</span><span class=\"p\">;</span>\n<span class=\"kr\">import</span> <span class=\"o\">*</span> <span class=\"nx\">as</span> <span class=\"nx\">SimpleAnalytics</span> <span class=\"nx\">from</span> <span class=\"s1\">'./simpleanalytics'</span><span class=\"p\">;</span>\n<span class=\"kr\">import</span> <span class=\"o\">*</span> <span class=\"nx\">as</span> <span class=\"nx\">history</span> <span class=\"nx\">from</span> <span class=\"s1\">'./history'</span><span class=\"p\">;</span>\n<span class=\"kr\">import</span> <span class=\"o\">*</span> <span class=\"nx\">as</span> <span class=\"nx\">donottrack</span> <span class=\"nx\">from</span> <span class=\"s1\">'./donottrack'</span><span class=\"p\">;</span>\n<span class=\"kr\">export</span> <span class=\"p\">{</span>\n    <span class=\"nx\">analytics</span><span class=\"p\">,</span>\n    <span class=\"nx\">donottrack</span><span class=\"p\">,</span>\n    <span class=\"nx\">history</span><span class=\"p\">,</span>\n    <span class=\"nx\">SimpleAnalytics</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<p>Then build it with <code class=\"highlighter-rouge\">tsc</code>. If you don’t have it installed globally, you can use\nthe <code class=\"highlighter-rouge\">npm bin</code> executable <code class=\"highlighter-rouge\">$(npm bin)/tsc</code></p>\n\n<h3 id=\"browser\">Browser</h3>\n\n<p>The browser is a special case. Not everyone is using a web bundler, and I wanted\nto provide a library that could be bootstrapped like Google Analytics, so I needed\nmy own bundle. When people don’t use a module bundler, you have to expose your\nlibrary via a global object.</p>\n\n<p>We’ll bundle our library with Webpack, and inject the promises and fetch libraries in it.\nWe’ll also provide an entrypoint that will export variable to the global window object.</p>\n\n<p>First the entrypoint:</p>\n\n<div class=\"language-js highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kr\">import</span> <span class=\"o\">*</span> <span class=\"nx\">as</span> <span class=\"nx\">entrypoint</span> <span class=\"nx\">from</span> <span class=\"s1\">'./index'</span><span class=\"p\">;</span>\n<span class=\"nx\">global</span><span class=\"p\">.</span><span class=\"nx\">ourlibentrypoint</span> <span class=\"o\">=</span> <span class=\"nx\">entrypoint</span>\n</code></pre>\n</div>\n\n<p>Then the webpack configuration</p>\n\n<div class=\"language-sh highlighter-rouge\"><pre class=\"highlight\"><code>npm install --save-dev webpack ts-loader exports-loader\n</code></pre>\n</div>\n\n<div class=\"language-js highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kd\">var</span> <span class=\"nx\">webpack</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"webpack\"</span><span class=\"p\">);</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"na\">entry</span><span class=\"p\">:</span> <span class=\"s2\">\"./src/browser.ts\"</span><span class=\"p\">,</span>\n    <span class=\"na\">output</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">path</span><span class=\"p\">:</span> <span class=\"s2\">\"./dist/\"</span><span class=\"p\">,</span>\n        <span class=\"na\">filename</span><span class=\"p\">:</span> <span class=\"s2\">\"bundle.js\"</span>\n    <span class=\"p\">},</span>\n        <span class=\"na\">devtool</span><span class=\"p\">:</span> <span class=\"s1\">'source-map'</span><span class=\"p\">,</span>\n        <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">extensions</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'.ts'</span><span class=\"p\">],</span>\n        <span class=\"na\">root</span><span class=\"p\">:</span> <span class=\"nx\">__dirname</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">module</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">loaders</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"na\">test</span><span class=\"p\">:</span> <span class=\"sr\">/</span><span class=\"se\">.</span><span class=\"sr\">ts$/</span><span class=\"p\">,</span> <span class=\"na\">loader</span><span class=\"p\">:</span> <span class=\"s1\">'ts-loader'</span><span class=\"p\">}]</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">plugins</span><span class=\"p\">:[</span>\n        <span class=\"c1\">// The injection is done here</span>\n        <span class=\"k\">new</span> <span class=\"nx\">webpack</span><span class=\"p\">.</span><span class=\"nx\">ProvidePlugin</span><span class=\"p\">({</span>\n            <span class=\"s1\">'Promise'</span><span class=\"p\">:</span> <span class=\"s1\">'es6-promise'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'fetch'</span><span class=\"p\">:</span> <span class=\"s1\">'exports?self.fetch!whatwg-fetch'</span>\n        <span class=\"p\">}),</span>\n        <span class=\"k\">new</span> <span class=\"nx\">webpack</span><span class=\"p\">.</span><span class=\"nx\">optimize</span><span class=\"p\">.</span><span class=\"nx\">UglifyJsPlugin</span><span class=\"p\">()</span>\n    <span class=\"p\">],</span>\n    <span class=\"na\">ts</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">compilerOptions</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"c1\">// We already emit declarations in our normal compilation step</span>\n            <span class=\"c1\">// not needed here</span>\n            <span class=\"na\">declaration</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<p>Cook your bundle with <code class=\"highlighter-rouge\">webpack</code>! The <code class=\"highlighter-rouge\">dist/bundle.js</code> file can now be included\nin your <code class=\"highlighter-rouge\">html</code>.</p>\n\n<h1 id=\"tests\">Tests</h1>\n\n<p>For sanity, let’s add tests to our library. We’ll use <a href=\"https://github.com/sindresorhus/ava\">Ava</a> from the prolific\n<a href=\"https://github.com/sindresorhus\">sindresorhus</a> which is a modern testing library for JavaScript. Happily it comes with its own <code class=\"highlighter-rouge\">d.ts</code> bundled so no\nneed of <code class=\"highlighter-rouge\">typings</code> for that one.</p>\n\n<p>The setup is simple.</p>\n\n<div class=\"language-sh highlighter-rouge\"><pre class=\"highlight\"><code>npm install --save-dev ava\n</code></pre>\n</div>\n\n<p>A different tsconfig.json is needed for tests. So here is <code class=\"highlighter-rouge\">tsconfig.test.json</code>:</p>\n\n<div class=\"language-json highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nt\">\"compilerOptions\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nt\">\"module\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"commonjs\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nt\">\"target\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"es5\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nt\">\"outDir\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"dist_test\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nt\">\"declaration\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nt\">\"noImplicitAny\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nt\">\"removeComments\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">Inline</span><span class=\"w\"> </span><span class=\"err\">source</span><span class=\"w\"> </span><span class=\"err\">map</span><span class=\"w\"> </span><span class=\"err\">are</span><span class=\"w\"> </span><span class=\"err\">required</span><span class=\"w\"> </span><span class=\"err\">by</span><span class=\"w\"> </span><span class=\"err\">nyc</span><span class=\"w\"> </span><span class=\"err\">the</span><span class=\"w\"> </span><span class=\"err\">coverage</span><span class=\"w\"> </span><span class=\"err\">tool</span><span class=\"w\">\n        </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">to</span><span class=\"w\"> </span><span class=\"err\">correctly</span><span class=\"w\"> </span><span class=\"err\">map</span><span class=\"w\"> </span><span class=\"err\">to</span><span class=\"w\"> </span><span class=\"err\">good</span><span class=\"w\"> </span><span class=\"err\">files.</span><span class=\"w\">\n        </span><span class=\"nt\">\"inlineSourceMap\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"nt\">\"files\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"s2\">\"... your test files\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"s2\">\"test/lib.d.ts\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"s2\">\"typings/main.d.ts\"</span><span class=\"w\">\n    </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre>\n</div>\n\n<p>Some libs forgets type definitions. In my case I had to add a special <code class=\"highlighter-rouge\">lib.d.ts</code>\nfor tests.</p>\n\n<p><code class=\"highlighter-rouge\">test/lib.d.ts</code>:</p>\n\n<div class=\"language-js highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kr\">interface</span> <span class=\"nx\">IteratorResult</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"p\">{</span>\n    <span class=\"na\">done</span><span class=\"p\">:</span> <span class=\"kr\">boolean</span><span class=\"p\">;</span>\n    <span class=\"nx\">value</span><span class=\"p\">?:</span> <span class=\"nx\">T</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kr\">interface</span> <span class=\"nx\">Iterator</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">next</span><span class=\"p\">(</span><span class=\"nx\">value</span><span class=\"p\">?:</span> <span class=\"nx\">any</span><span class=\"p\">):</span> <span class=\"nx\">IteratorResult</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n    <span class=\"k\">return</span><span class=\"p\">?(</span><span class=\"nx\">value</span><span class=\"p\">?:</span> <span class=\"nx\">any</span><span class=\"p\">):</span> <span class=\"nx\">IteratorResult</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n    <span class=\"k\">throw</span><span class=\"p\">?(</span><span class=\"nx\">e</span><span class=\"p\">?:</span> <span class=\"nx\">any</span><span class=\"p\">):</span> <span class=\"nx\">IteratorResult</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<p>To enable extended babel support in ava, you have to require babel-register in AVA.\nYou can do this in the <code class=\"highlighter-rouge\">package.json</code> file by adding an <code class=\"highlighter-rouge\">ava</code> key.</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>\"ava\": {\n  \"require\": [\n    \"babel-register\" ] }\n</code></pre>\n</div>\n\n<p>Tests can be run with <code class=\"highlighter-rouge\">tsc -p tsconfig.test.json &amp;&amp; ava \"**/*test.js\"</code></p>\n\n<h2 id=\"coverage\">Coverage</h2>\n\n<p>Adding coverage was simple, AVA runs tests in different process so you need to\n have a coverage runner that supports this. <a href=\"https://github.com/bcoe/nyc\">nyc</a>\n does that task for you.</p>\n\n<div class=\"language-sh highlighter-rouge\"><pre class=\"highlight\"><code>npm install --save-dev nyc\n</code></pre>\n</div>\n\n<p>You’ll have to create a file which includes all your TypeScript files, so nyc\nand ava are aware of all the TypeScript available. I created a fake test that\nloads the Node.js entrypoint. That tests is always green.</p>\n\n<div class=\"language-js highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kr\">import</span> <span class=\"nx\">test</span> <span class=\"nx\">from</span> <span class=\"s1\">'ava'</span><span class=\"p\">;</span>\n<span class=\"kr\">import</span> <span class=\"o\">*</span> <span class=\"nx\">as</span> <span class=\"nx\">coveoanalytics</span> <span class=\"nx\">from</span> <span class=\"s1\">'../src/index'</span><span class=\"p\">;</span>\n\n<span class=\"nx\">test</span><span class=\"p\">(</span><span class=\"s1\">'coverage'</span><span class=\"p\">,</span> <span class=\"nx\">t</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kr\">const</span> <span class=\"nx\">_</span> <span class=\"o\">=</span> <span class=\"nx\">coveoanalytics</span><span class=\"p\">;</span>\n<span class=\"p\">});</span>\n</code></pre>\n</div>\n\n<p>It is also nice to get code coverage in the original languague, which is\nTypeScript. To do this you need to place the source maps inline. In your\ntsconfig.test.json add this key <code class=\"highlighter-rouge\">\"compilerOptions\".\"inlineSourceMap\": true</code>.</p>\n\n<p>You can then run your tests using <code class=\"highlighter-rouge\">tsc -p tsconfig.test.json &amp;&amp; nyc ava \"**/*test.js\"</code></p>\n\n<h2 id=\"plugging-all-this-together\">Plugging all this together.</h2>\n\n<p>If you followed the article without skipping part, you should be good to go,\nhere’s a recap of the most important parts.</p>\n\n<p><code class=\"highlighter-rouge\">package.json</code>:</p>\n\n<div class=\"language-json highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"err\">...</span><span class=\"w\">\n  </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">your</span><span class=\"w\"> </span><span class=\"err\">2</span><span class=\"w\"> </span><span class=\"err\">compiled</span><span class=\"w\"> </span><span class=\"err\">entry</span><span class=\"w\"> </span><span class=\"err\">points</span><span class=\"w\"> </span><span class=\"err\">here</span><span class=\"w\">\n  </span><span class=\"nt\">\"main\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"dist/index.js\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nt\">\"browser\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"dist/bundle.js\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"err\">...</span><span class=\"w\">\n  </span><span class=\"nt\">\"scripts\"</span><span class=\"p\">:{</span><span class=\"w\">\n    </span><span class=\"err\">...</span><span class=\"w\">\n    </span><span class=\"nt\">\"build:webpack\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"webpack\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nt\">\"build:tsc\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"tsc\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nt\">\"build\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"npm run-script lint &amp;&amp; npm run-script build:webpack &amp;&amp; npm run-script build:tsc\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nt\">\"test\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"tsc -p tsconfig.test.json &amp;&amp; nyc ava \"**/*test.js\"\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">...</span><span class=\"w\">\n  </span><span class=\"err\">}</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"err\">...</span><span class=\"w\">\n  </span><span class=\"nt\">\"dependencies\"</span><span class=\"p\">:{</span><span class=\"w\">\n    </span><span class=\"err\">...</span><span class=\"w\">\n    </span><span class=\"nt\">\"isomorphic-fetch\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"2.2.1\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">...</span><span class=\"w\">\n  </span><span class=\"err\">}</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nt\">\"devDependencies\"</span><span class=\"p\">:{</span><span class=\"w\">\n    </span><span class=\"err\">...</span><span class=\"w\">\n    </span><span class=\"nt\">\"es6-promise\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"3.1.2\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nt\">\"ava\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"0.14.0\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nt\">\"exports-loader\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"0.6.3\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nt\">\"nyc\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"6.4.4\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nt\">\"TypeScript\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"1.8.10\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nt\">\"typings\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"0.8.1\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nt\">\"webpack\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"1.13.0\"</span><span class=\"w\">\n    </span><span class=\"err\">...</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"err\">...</span><span class=\"w\">\n  </span><span class=\"nt\">\"ava\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nt\">\"require\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n      </span><span class=\"s2\">\"babel-register\"</span><span class=\"w\">\n    </span><span class=\"p\">]</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre>\n</div>\n\n<p>You also need:</p>\n\n<ul>\n  <li>1 tsconfig file for your normal builds (Webpack and Node.js)</li>\n  <li>1 tsconfig file for your tests</li>\n  <li>1 typings file to have the type definitions of isomorphic-fetch and es6-promises</li>\n  <li>A lot of tests</li>\n  <li>1 Browser entrypoint (mine is named <code class=\"highlighter-rouge\">browser.ts</code>)</li>\n  <li>1 Node entrypoint (mine is named <code class=\"highlighter-rouge\">index.ts</code>)</li>\n  <li>A <code class=\"highlighter-rouge\">webpack.config.js</code> file similar to the one above</li>\n</ul>\n\n<p>This was a tedious work to glue everything together, but it was worth it.\nTypeScript is a nice transpiler bringing a lot to a large application’s codebase.\nIt is up to date and even transpiles to ES2015 which you can then retranspile\nwith babel if you want more included.</p>\n\n<p>If you want to see an example of what came out of it see <a href=\"https://github.com/coveo/coveo.analytics.js\">coveo.analytics.js</a></p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "12",
                "id": "2161",
                "key": "original_post_id"
            },
            {
                "value": "12",
                "id": "2169",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2160",
                "key": "restapi_import_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2168",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2159",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "my_blog",
                "id": "2167",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "65407d653709df83560c55e410276eb6",
                "id": "2158",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "65407d653709df83560c55e410276eb6",
                "id": "2166",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/05/11/isomorphic-typescript-ava-w-coverage/",
                "id": "2157",
                "key": "rss_pi_source_url"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/05/11/isomorphic-typescript-ava-w-coverage/",
                "id": "2165",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2016/05/11/isomorphic-typescript-fetch-promises-ava-and-coverage/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2016-05-11T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "isomorphic-typescript-fetch-promises-ava-and-coverage",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-05-11T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1728",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1728/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1728/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1728/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2016/04/18/indexing-only-relevant-parts-of-sitecore-rendered-content/",
        "title": "Indexing Only Relevant Parts of Sitecore Rendered Content",
        "short_URL": "http://wp.me/p7VTrW-rT",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "d3db5db264cdde529c613a46b3084d42",
        "ID": 1729,
        "content": "<p>For website search, relevancy of the search results should be a priority. When indexing a Sitecore item with Coveo for Sitecore, you want as much information as possible to be indexed. That’s why you probably use the <a href=\"https://developers.coveo.com/display/public/SitecoreV3/Indexing+Documents+with+HTML+Content+Processor\"><code class=\"highlighter-rouge\">HtmlContentInBodyWithRequestsProcessor</code></a> to index the Sitecore rendered HTML of the item. However, you don’t want to index global sections of the HTML like the header, footer, navigation, ads and sidebars.</p>\n\n<p>A few solutions were available to do so. This post details a simple solution that involves only a Sitecore processor and minor edits to layouts, sublayouts or views.</p>\n\n<!-- more -->\n\n<h2 id=\"official-solution\">Official Solution</h2>\n\n<p>The <a href=\"https://developers.coveo.com/display/public/SitecoreV3/Indexing+Documents+with+HTML+Content+Processor\">official documentation</a> details a complex solution that requires:</p>\n\n<ul>\n  <li>A new device,</li>\n  <li>The duplication of most of your layouts,</li>\n  <li>The configuration of the presentation of all your rendering templates, and</li>\n  <li>A lot of attention not to forget updating the new device presentation when a change is made to the default device presentation.</li>\n</ul>\n\n<p>This solution has the advantage to be easy to maintain by content editors and marketers.</p>\n\n<h2 id=\"other-solutions\">Other Solutions</h2>\n\n<p>Other solutions are possible with the help of a developer:</p>\n\n<ol>\n  <li>Modify the code of unwanted UI components to avoid rendering their content when detecting the Coveo HTTP request user agent.</li>\n  <li>Code a custom processor to remove unwanted sections after the rendered HTML is fetched.</li>\n</ol>\n\n<h2 id=\"introducing-the-cleanhtmlcontentinbodyprocessor\">Introducing the CleanHtmlContentInBodyProcessor</h2>\n\n<p>The idea is to use harmless HTML comment elements around HTML markup you don’t want to be indexed. The processor is removing the comments and all the markup in between. The processor should run after the one fetching the HTML but before the item is sent to the index for indexing.</p>\n\n<h3 id=\"code\">Code</h3>\n\n<p>The main code of the processor is fairly simple. It uses Regex to delete matched sections of the markup. The code currently assumes that the HTML is encoded in UTF-8 but can be easily adjusted for your integration. The complete code can be found in the <a href=\"https://github.com/coveo/samples/blob/master/coveo-for-sitecore/processors/CleanHtmlContentInBodyProcessor.cs\">Coveo Samples GitHub repository</a>.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\"><span class=\"k\">public</span> <span class=\"k\">class</span> <span class=\"nc\">CleanHtmlContentInBodyProcessor</span> <span class=\"p\">:</span> <span class=\"n\">IProcessor</span><span class=\"p\">&lt;</span><span class=\"n\">CoveoPostItemProcessingPipelineArgs</span><span class=\"p\">&gt;</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"n\">StartCommentText</span> <span class=\"p\">{</span> <span class=\"k\">get</span><span class=\"p\">;</span> <span class=\"k\">set</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n    <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"n\">EndCommentText</span> <span class=\"p\">{</span> <span class=\"k\">get</span><span class=\"p\">;</span> <span class=\"k\">set</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n\n    <span class=\"k\">public</span> <span class=\"k\">void</span> <span class=\"nf\">Process</span><span class=\"p\">(</span><span class=\"n\">CoveoPostItemProcessingPipelineArgs</span> <span class=\"n\">p_Args</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nf\">ShouldProcess</span><span class=\"p\">(</span><span class=\"n\">p_Args</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n            <span class=\"kt\">string</span> <span class=\"n\">originalHtmlContent</span> <span class=\"p\">=</span> <span class=\"n\">Encoding</span><span class=\"p\">.</span><span class=\"n\">UTF8</span><span class=\"p\">.</span><span class=\"nf\">GetString</span><span class=\"p\">(</span><span class=\"n\">p_Args</span><span class=\"p\">.</span><span class=\"n\">CoveoItem</span><span class=\"p\">.</span><span class=\"n\">BinaryData</span><span class=\"p\">);</span>\n            <span class=\"kt\">string</span> <span class=\"n\">cleanedHtmlContent</span> <span class=\"p\">=</span> <span class=\"nf\">CleanHtmlContent</span><span class=\"p\">(</span><span class=\"n\">originalHtmlContent</span><span class=\"p\">);</span>\n            <span class=\"n\">p_Args</span><span class=\"p\">.</span><span class=\"n\">CoveoItem</span><span class=\"p\">.</span><span class=\"n\">BinaryData</span> <span class=\"p\">=</span> <span class=\"n\">Encoding</span><span class=\"p\">.</span><span class=\"n\">UTF8</span><span class=\"p\">.</span><span class=\"nf\">GetBytes</span><span class=\"p\">(</span><span class=\"n\">cleanedHtmlContent</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">private</span> <span class=\"kt\">string</span> <span class=\"nf\">CleanHtmlContent</span><span class=\"p\">(</span><span class=\"kt\">string</span> <span class=\"n\">p_HtmlContent</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">Regex</span><span class=\"p\">.</span><span class=\"nf\">Replace</span><span class=\"p\">(</span><span class=\"n\">p_HtmlContent</span><span class=\"p\">,</span> <span class=\"s\">@\"&lt;!--s*\"</span> <span class=\"p\">+</span> <span class=\"n\">StartCommentText</span> <span class=\"p\">+</span> <span class=\"s\">@\"s*--&gt;.*?&lt;!--s*\"</span> <span class=\"p\">+</span> <span class=\"n\">EndCommentText</span> <span class=\"p\">+</span> <span class=\"s\">@\"s*--&gt;\"</span><span class=\"p\">,</span> <span class=\"s\">\"\"</span><span class=\"p\">,</span> <span class=\"n\">RegexOptions</span><span class=\"p\">.</span><span class=\"n\">Singleline</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<h3 id=\"usage\">Usage</h3>\n\n<h4 id=\"in-the-configuration-file\">In the Configuration File</h4>\n\n<p>Add the processor node after your existing HTML fetching processor in your Coveo for Sitecore configuration file (<code class=\"highlighter-rouge\">Coveo.SearchProvider.config</code>) or even better, in a patch file.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-xml\"><span class=\"nt\">&lt;configuration</span> <span class=\"na\">xmlns:patch=</span><span class=\"s\">\"http://www.sitecore.net/xmlconfig/\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;sitecore&gt;</span>\n    <span class=\"nt\">&lt;pipelines&gt;</span>\n      <span class=\"nt\">&lt;coveoPostItemProcessingPipeline&gt;</span>\n        <span class=\"c\">&lt;!-- Your existing HTML fetching processor --&gt;</span>\n        <span class=\"nt\">&lt;processor</span> <span class=\"na\">type=</span><span class=\"s\">\"Coveo.SearchProvider.Processors.HtmlContentInBodyWithRequestsProcessor, Coveo.SearchProviderBase\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"c\">&lt;!-- The CleanHtmlContentInBodyProcessor processor --&gt;</span>\n        <span class=\"nt\">&lt;processor</span> <span class=\"na\">type=</span><span class=\"s\">\"Coveo.For.Sitecore.Samples.Processors.CleanHtmlContentInBodyProcessor, Coveo.For.Sitecore.Samples\"</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;StartCommentText&gt;</span>BEGIN NOINDEX<span class=\"nt\">&lt;/StartCommentText&gt;</span>\n          <span class=\"nt\">&lt;EndCommentText&gt;</span>END NOINDEX<span class=\"nt\">&lt;/EndCommentText&gt;</span>\n        <span class=\"nt\">&lt;/processor&gt;</span>\n      <span class=\"nt\">&lt;/coveoPostItemProcessingPipeline&gt;</span>\n    <span class=\"nt\">&lt;/pipelines&gt;</span>\n  <span class=\"nt\">&lt;/sitecore&gt;</span>\n<span class=\"nt\">&lt;/configuration&gt;</span></code></pre></figure>\n\n<h4 id=\"in-the-layouts-sublayouts-and-views\">In the Layouts, Sublayouts and Views</h4>\n\n<p>Add comment elements in your layouts, sublayouts and views around the HTML markup you want to exclude from the indexed documents. Comments text need to match the processor configuration.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-html\"><span class=\"nt\">&lt;body&gt;</span>\n  <span class=\"c\">&lt;!-- BEGIN NOINDEX --&gt;</span>\n    <span class=\"nt\">&lt;header&gt;</span>...<span class=\"nt\">&lt;/header&gt;</span>\n  <span class=\"c\">&lt;!-- END NOINDEX --&gt;</span>\n\n  <span class=\"nt\"><div> <span class=\"na\">class=</span><span class=\"s\">\"main-content\"</span><span class=\"nt\">&gt;</span>...<span class=\"nt\"></div></span>\n\n  <span class=\"c\">&lt;!-- BEGIN NOINDEX --&gt;</span>\n    <span class=\"nt\">&lt;footer&gt;</span>...<span class=\"nt\">&lt;/footer&gt;</span>\n  <span class=\"c\">&lt;!-- END NOINDEX --&gt;</span>\n\n  <span class=\"nt\"><span class=\"na\">src=</span><span class=\"s\">\"IncludedScript.js\"</span><span class=\"nt\">&gt;</span>\n\n  <span class=\"c\">&lt;!-- BEGIN NOINDEX --&gt;</span>\n    <span class=\"nt\"><span class=\"na\">src=</span><span class=\"s\">\"ExcludedScript.js\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"c\">&lt;!-- END NOINDEX --&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span></code></pre></figure>\n\n<h4 id=\"rebuild\">Rebuild</h4>\n\n<p>After adding the processor and the comments, rebuild your Sitecore indexes managed by Coveo for Sitecore to index the cleaned HTML content.</p>\n\n<h3 id=\"possible-issues\">Possible Issues</h3>\n\n<p>Be cautious with the comment locations. There are 2 possible problems:</p>\n\n<ol>\n  <li>Removing a different number of start tags than end tags. This will make your HTML invalid and cause a lot of rendering problems.</li>\n  <li>Nested comments. Avoid them as the code don’t support them. The content between the first start comment and the first end comment will be removed, leaving everything between the two end comments.</li>\n</ol>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>Whichever solution used, a Coveo for Sitecore integrator should always ensure the best search relevancy by indexing all but unwanted content. This ensures a great user experience and an increase of the key performance indicators for the customer.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "14",
                "id": "2178",
                "key": "original_post_id"
            },
            {
                "value": "14",
                "id": "2186",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2177",
                "key": "restapi_import_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2185",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2176",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "my_blog",
                "id": "2184",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "5f34e583073541f03a511f3447829b83",
                "id": "2175",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "5f34e583073541f03a511f3447829b83",
                "id": "2183",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/04/18/indexing-only-relevant-parts-of-sitecore-rendered-content/",
                "id": "2174",
                "key": "rss_pi_source_url"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/04/18/indexing-only-relevant-parts-of-sitecore-rendered-content/",
                "id": "2182",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2016/04/18/indexing-only-relevant-parts-of-sitecore-rendered-content/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2016-04-18T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "indexing-only-relevant-parts-of-sitecore-rendered-content",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-04-18T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1729",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1729/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1729/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1729/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2016/02/19/microservices-and-exception-handling-in-java-with-feign-and-reflection/",
        "title": "Microservices and exception handling in Java with Feign and reflection",
        "short_URL": "http://wp.me/p7VTrW-rU",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "6c00d8fdf100412468c52698a993f714",
        "ID": 1730,
        "content": "<p><strong>Update 2016/07/08</strong>: The project is now available on <a href=\"https://github.com/coveo/feign-error-decoder\">GitHub</a>! I plan on making it more generic before publishing it to Maven, I’ll update this post soon with the new details.</p>\n\n<p>Exception handling across microservices can be tedious, let’s see how the Java reflection API can help us ease the pain!\n<!-- more --></p>\n\n<h1 id=\"microservices-architecture\">Microservices architecture</h1>\n<p>When it comes to building a complex application in the cloud, microservices architecture is the newest and coolest kid in town. It has numerous advantages over the more <em>traditional</em> monolithic architecture such as :</p>\n\n<ul>\n  <li>modularization and isolation, which makes the development easier in a big team;</li>\n  <li>more efficient scaling of the critical paths of the application;</li>\n  <li>possibility to upgrade only a microservice at a time, making the deployments less risky and less prone to unexpected side effects;</li>\n  <li>technology independance : by exposing an API with a clearly defined contract with a set of common rules shared by all microservices, you don’t have to care which language or database is used by the microservice.</li>\n</ul>\n\n<p>I could go on for a while on this, microservices are a great way to build applications in the cloud. There are lots of awesome OSS projects from our friends at <a href=\"https://netflix.github.io/\">Netflix</a> and <a href=\"https://spring.io/\">Spring</a> that will help you doing this, from <a href=\"https://github.com/Netflix/eureka\">service discovery</a> to <a href=\"https://github.com/Netflix/ribbon\">mid-tier load balancing</a> and <a href=\"https://github.com/Netflix/archaius\">dynamic configuration</a>, there’s a library for most requirements you’ll have to meet. It’s also great to see Spring coming aboard with <a href=\"http://projects.spring.io/spring-cloud/\">Spring Cloud</a> collaborating and integrating some of the Netflix librairies into a very useful and simple library to use with your new or existing Spring application!</p>\n\n<h2 id=\"caveats\">Caveats</h2>\n<p>It wouln’t be fair to avoid talking about the downsides of microservices as they do present some challenges and are not suited to everyone and every application out there. Splitting an application into microservices bring some additional concerns like :</p>\n\n<ul>\n  <li>complex configuration management : 10 microservices? 10 configuration profiles, 10 Logback configurations, etc. (using a centralized <a href=\"https://github.com/spring-cloud/spring-cloud-config\">configuration server</a> can help you on this though);</li>\n  <li>performance hit : you need to validate this token? No problem, just make a POST to this endpoint with the token in the body and you’ll get the response in no time! While this is true for most cases, the network overhead, serialization/deserialization process can become a bottleneck and you always have to be resilient for network outages or congestion;</li>\n  <li>Interacting with other microservices brings a lot of boilerplate code : whereas a single additional method to a class was needed in a monolithic architecture, in a microservices you need a resource implementing an API, a client, some authorization mechanism, exception handling, etc.</li>\n</ul>\n\n<h1 id=\"dynamic-exception-handling-using-feignhttpsgithubcomnetflixfeign-and-reflection\">Dynamic exception handling using <a href=\"https://github.com/Netflix/feign\">Feign</a> and reflection</h1>\n\n<p>In a monolithic application, handling exceptions is a walk in the park. However, if something goes wrong during an inter-service call, most of the times you’ll want to propagate this exception or handle it gracefully. The problem is, you don’t get an exception from the client, you get an HTTP code and a body describing the error or you may get a generic exception depending on the client used.</p>\n\n<p>For some of our applications at Coveo, we use <a href=\"https://github.com/Netflix/feign\">Feign</a> to build our clients across services. It allows us to easily build clients by just writing an interface with the parameters, the endpoint and the thrown exceptions like this :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">interface</span> <span class=\"nc\">GitHub</span> <span class=\"o\">{</span>\n  <span class=\"nd\">@RequestLine</span><span class=\"o\">(</span><span class=\"s\">\"GET /users/{user}/repos\"</span><span class=\"o\">)</span>\n  <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">Repo</span><span class=\"o\">&gt;</span> <span class=\"nf\">getUserRepos</span><span class=\"o\">(</span><span class=\"nd\">@Param</span><span class=\"o\">(</span><span class=\"s\">\"user\"</span><span class=\"o\">)</span> <span class=\"n\">String</span> <span class=\"n\">user</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">UserDoesNotExistException</span><span class=\"o\">;</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>When using the client, you are able to easily decode errors using the <code class=\"highlighter-rouge\">ErrorDecoder</code> interface with the received <code class=\"highlighter-rouge\">Response</code> object when the HTTP code is not in the 200 range. Now, we only need a way to map the errors to the proper exception.</p>\n\n<h2 id=\"required-base-exception\">Required base exception</h2>\n\n<p>Most of our exceptions here at Coveo inherit from a base exception which defines a readable <code class=\"highlighter-rouge\">errorCode</code> that is unique per exception :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">abstract</span> <span class=\"kd\">class</span> <span class=\"nc\">ServiceException</span> <span class=\"kd\">extends</span> <span class=\"n\">Exception</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">errorCode</span><span class=\"o\">;</span>\n    <span class=\"c1\">//Constructors omitted</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getErrorCode</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">errorCode</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>This allows us to translate exceptions on the API into a <code class=\"highlighter-rouge\">RestException</code> object with a consistent error code and message like this :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-json\"><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nt\">\"errorCode\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"INVALID_TOKEN\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nt\">\"message\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"The provided token is invalid or expired.\"</span><span class=\"w\">\n</span><span class=\"p\">}</span></code></pre></figure>\n\n<p>Using the <code class=\"highlighter-rouge\">errorCode</code> as the key, we can use the reflection API of Java to build up a map of thrown exceptions at runtime and rethrow them like there was no inter-service call!</p>\n\n<h3 id=\"using-reflection-to-create-a-dynamic-errordecoder\">Using reflection to create a dynamic <code class=\"highlighter-rouge\">ErrorDecoder</code></h3>\n<p>Alright, let’s dive into the code. First, we need a little POJO to hold the information for instantiation :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ThrownServiceExceptionDetails</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Class</span><span class=\"o\">&lt;?</span> <span class=\"kd\">extends</span> <span class=\"n\">ServiceException</span><span class=\"o\">&gt;</span> <span class=\"n\">clazz</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Constructor</span><span class=\"o\">&lt;?</span> <span class=\"kd\">extends</span> <span class=\"n\">ServiceException</span><span class=\"o\">&gt;</span> <span class=\"n\">emptyConstructor</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Constructor</span><span class=\"o\">&lt;?</span> <span class=\"kd\">extends</span> <span class=\"n\">ServiceException</span><span class=\"o\">&gt;</span> <span class=\"n\">messageConstructor</span><span class=\"o\">;</span>\n    <span class=\"c1\">//getters and setters omitted</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>Then, we use reflection to get the thrown exceptions from the client in the constructor by passing the Feign interface as a parameter :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">FeignServiceExceptionErrorDecoder</span> <span class=\"kd\">implements</span> <span class=\"n\">ErrorDecoder</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">static</span> <span class=\"kd\">final</span> <span class=\"n\">Logger</span> <span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">LoggerFactory</span><span class=\"o\">.</span><span class=\"na\">getLogger</span><span class=\"o\">(</span><span class=\"n\">FeignServiceExceptionErrorDecoder</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n\n    <span class=\"kd\">private</span> <span class=\"n\">Class</span><span class=\"o\">&lt;?&gt;</span> <span class=\"n\">apiClass</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Map</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">,</span> <span class=\"n\">ThrownServiceExceptionDetails</span><span class=\"o\">&gt;</span> <span class=\"n\">exceptionsThrown</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">HashMap</span><span class=\"o\">&lt;&gt;();</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">FeignServiceExceptionErrorDecoder</span><span class=\"o\">(</span><span class=\"n\">Class</span><span class=\"o\">&lt;?&gt;</span> <span class=\"n\">apiClass</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">Exception</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">apiClass</span> <span class=\"o\">=</span> <span class=\"n\">apiClass</span><span class=\"o\">;</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">Method</span> <span class=\"n\">method</span> <span class=\"o\">:</span> <span class=\"n\">apiClass</span><span class=\"o\">.</span><span class=\"na\">getMethods</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n            <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">method</span><span class=\"o\">.</span><span class=\"na\">getAnnotation</span><span class=\"o\">(</span><span class=\"n\">RequestLine</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">Class</span><span class=\"o\">&lt;?&gt;</span> <span class=\"n\">clazz</span> <span class=\"o\">:</span> <span class=\"n\">method</span><span class=\"o\">.</span><span class=\"na\">getExceptionTypes</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n                    <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">ServiceException</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">.</span><span class=\"na\">isAssignableFrom</span><span class=\"o\">(</span><span class=\"n\">clazz</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n                        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">Modifier</span><span class=\"o\">.</span><span class=\"na\">isAbstract</span><span class=\"o\">(</span><span class=\"n\">clazz</span><span class=\"o\">.</span><span class=\"na\">getModifiers</span><span class=\"o\">()))</span> <span class=\"o\">{</span>\n                            <span class=\"n\">extractServiceExceptionInfoFromSubClasses</span><span class=\"o\">(</span><span class=\"n\">clazz</span><span class=\"o\">);</span>\n                        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                            <span class=\"n\">extractServiceExceptionInfo</span><span class=\"o\">(</span><span class=\"n\">clazz</span><span class=\"o\">);</span>\n                        <span class=\"o\">}</span>\n                    <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"Exception '{}' declared thrown on interface '{}' doesn't inherit from \n                                     ServiceException, it will be skipped.\"</span><span class=\"o\">,</span> <span class=\"n\">clazz</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">(),</span> <span class=\"n\">apiClass</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">())</span>\n                    <span class=\"o\">}</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span></code></pre></figure>\n\n<p>With the thrown exceptions in hand, knowing that they inherit from <code class=\"highlighter-rouge\">ServiceException</code>, we extract the <code class=\"highlighter-rouge\">errorCode</code> and the relevant constructors. It supports empty constructor and single <code class=\"highlighter-rouge\">String</code> parameter constructor :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">private</span> <span class=\"kt\">void</span> <span class=\"nf\">extractServiceExceptionInfo</span><span class=\"o\">(</span><span class=\"n\">Class</span><span class=\"o\">&lt;?&gt;</span> <span class=\"n\">clazz</span><span class=\"o\">)</span>\n        <span class=\"kd\">throws</span> <span class=\"n\">Exception</span>\n<span class=\"o\">{</span>\n    <span class=\"n\">ServiceException</span> <span class=\"n\">thrownException</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n    <span class=\"n\">Constructor</span><span class=\"o\">&lt;?&gt;</span> <span class=\"n\">emptyConstructor</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n    <span class=\"n\">Constructor</span><span class=\"o\">&lt;?&gt;</span> <span class=\"n\">messageConstructor</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n\n    <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">Constructor</span><span class=\"o\">&lt;?&gt;</span> <span class=\"n\">constructor</span> <span class=\"o\">:</span> <span class=\"n\">clazz</span><span class=\"o\">.</span><span class=\"na\">getConstructors</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n        <span class=\"n\">Class</span><span class=\"o\">&lt;?&gt;[]</span> <span class=\"n\">parameters</span> <span class=\"o\">=</span> <span class=\"n\">constructor</span><span class=\"o\">.</span><span class=\"na\">getParameterTypes</span><span class=\"o\">();</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">parameters</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">emptyConstructor</span> <span class=\"o\">=</span> <span class=\"n\">constructor</span><span class=\"o\">;</span>\n            <span class=\"n\">thrownException</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"n\">ServiceException</span><span class=\"o\">)</span> <span class=\"n\">constructor</span><span class=\"o\">.</span><span class=\"na\">newInstance</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">parameters</span><span class=\"o\">.</span><span class=\"na\">length</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">parameters</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">].</span><span class=\"na\">isAssignableFrom</span><span class=\"o\">(</span><span class=\"n\">String</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n            <span class=\"n\">messageConstructor</span> <span class=\"o\">=</span> <span class=\"n\">constructor</span><span class=\"o\">;</span>\n            <span class=\"n\">thrownException</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"n\">ServiceException</span><span class=\"o\">)</span> <span class=\"n\">constructor</span><span class=\"o\">.</span><span class=\"na\">newInstance</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">String</span><span class=\"o\">());</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">thrownException</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">exceptionsThrown</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"n\">thrownException</span><span class=\"o\">.</span><span class=\"na\">getErrorCode</span><span class=\"o\">(),</span>\n                <span class=\"k\">new</span> <span class=\"nf\">ThrownServiceExceptionDetails</span><span class=\"o\">()</span>\n                    <span class=\"o\">.</span><span class=\"na\">withClazz</span><span class=\"o\">((</span><span class=\"n\">Class</span><span class=\"o\">&lt;?</span> <span class=\"kd\">extends</span> <span class=\"n\">ServiceException</span><span class=\"o\">&gt;)</span> <span class=\"n\">clazz</span><span class=\"o\">)</span>\n                    <span class=\"o\">.</span><span class=\"na\">withEmptyConstructor</span><span class=\"o\">((</span><span class=\"n\">Constructor</span><span class=\"o\">&lt;?</span> <span class=\"kd\">extends</span> <span class=\"n\">ServiceException</span><span class=\"o\">&gt;)</span> <span class=\"n\">emptyConstructor</span><span class=\"o\">)</span>\n                    <span class=\"o\">.</span><span class=\"na\">withMessageConstructor</span><span class=\"o\">((</span><span class=\"n\">Constructor</span><span class=\"o\">&lt;?</span> <span class=\"kd\">extends</span> <span class=\"n\">ServiceException</span><span class=\"o\">&gt;)</span> <span class=\"n\">messageConstructor</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"na\">warn</span><span class=\"o\">(</span><span class=\"s\">\"Couldn't instantiate the exception '{}' for the interface '{}', it needs an empty or String \n                     only *public* constructor.\"</span><span class=\"o\">,</span> <span class=\"n\">clazz</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">(),</span> <span class=\"n\">apiClass</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">());</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>Bonus feature, when the scanned exception is abstract, we use the Spring <code class=\"highlighter-rouge\">ClassPathScanningCandidateComponentProvider</code> to get all the subclasses and add them to the map :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">private</span> <span class=\"kt\">void</span> <span class=\"nf\">extractServiceExceptionInfoFromSubClasses</span><span class=\"o\">(</span><span class=\"n\">Class</span><span class=\"o\">&lt;?&gt;</span> <span class=\"n\">clazz</span><span class=\"o\">)</span>\n        <span class=\"kd\">throws</span> <span class=\"n\">Exception</span>\n<span class=\"o\">{</span>\n    <span class=\"n\">Set</span><span class=\"o\">&lt;</span><span class=\"n\">Class</span><span class=\"o\">&lt;?&gt;&gt;</span> <span class=\"n\">subClasses</span> <span class=\"o\">=</span> <span class=\"n\">getAllSubClasses</span><span class=\"o\">(</span><span class=\"n\">clazz</span><span class=\"o\">);</span>\n    <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">Class</span><span class=\"o\">&lt;?&gt;</span> <span class=\"n\">subClass</span> <span class=\"o\">:</span> <span class=\"n\">subClasses</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">extractServiceExceptionInfo</span><span class=\"o\">(</span><span class=\"n\">subClass</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">private</span> <span class=\"n\">Set</span><span class=\"o\">&lt;</span><span class=\"n\">Class</span><span class=\"o\">&lt;?&gt;&gt;</span> <span class=\"n\">getAllSubClasses</span><span class=\"o\">(</span><span class=\"n\">Class</span><span class=\"o\">&lt;?&gt;</span> <span class=\"n\">clazz</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">ClassNotFoundException</span>\n<span class=\"o\">{</span>\n    <span class=\"n\">ClassPathScanningCandidateComponentProvider</span> <span class=\"n\">provider</span> <span class=\"o\">=</span> \n            <span class=\"k\">new</span> <span class=\"nf\">ClassPathScanningCandidateComponentProvider</span><span class=\"o\">(</span><span class=\"kc\">false</span><span class=\"o\">);</span>\n    <span class=\"n\">provider</span><span class=\"o\">.</span><span class=\"na\">addIncludeFilter</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">AssignableTypeFilter</span><span class=\"o\">(</span><span class=\"n\">clazz</span><span class=\"o\">));</span>\n\n    <span class=\"n\">Set</span><span class=\"o\">&lt;</span><span class=\"n\">BeanDefinition</span><span class=\"o\">&gt;</span> <span class=\"n\">components</span> <span class=\"o\">=</span> <span class=\"n\">provider</span><span class=\"o\">.</span><span class=\"na\">findCandidateComponents</span><span class=\"o\">(</span><span class=\"s\">\"your/base/package/here\"</span><span class=\"o\">);</span>\n\n    <span class=\"n\">Set</span><span class=\"o\">&lt;</span><span class=\"n\">Class</span><span class=\"o\">&lt;?&gt;&gt;</span> <span class=\"n\">subClasses</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">HashSet</span><span class=\"o\">&lt;&gt;();</span>\n    <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">BeanDefinition</span> <span class=\"n\">component</span> <span class=\"o\">:</span> <span class=\"n\">components</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">subClasses</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"n\">Class</span><span class=\"o\">.</span><span class=\"na\">forName</span><span class=\"o\">(</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"na\">getBeanClassName</span><span class=\"o\">()));</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">subClasses</span><span class=\"o\">;</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>Finally, we need to implement Feign <code class=\"highlighter-rouge\">ErrorDecoder</code>. We deserialize the body into the <code class=\"highlighter-rouge\">RestException</code> object who holds the <code class=\"highlighter-rouge\">message</code> and the <code class=\"highlighter-rouge\">errorCode</code> used to map to the proper exception :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"nd\">@Override</span>\n<span class=\"kd\">public</span> <span class=\"n\">Exception</span> <span class=\"nf\">decode</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">methodKey</span><span class=\"o\">,</span>\n                        <span class=\"n\">Response</span> <span class=\"n\">response</span><span class=\"o\">)</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">JacksonDecoder</span> <span class=\"n\">jacksonDecoder</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">JacksonDecoder</span><span class=\"o\">();</span>\n    <span class=\"k\">try</span> <span class=\"o\">{</span>\n        <span class=\"n\">RestException</span> <span class=\"n\">restException</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"n\">RestException</span><span class=\"o\">)</span> <span class=\"n\">jacksonDecoder</span><span class=\"o\">.</span><span class=\"na\">decode</span><span class=\"o\">(</span><span class=\"n\">response</span><span class=\"o\">,</span> <span class=\"n\">RestException</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">restException</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">exceptionsThrown</span><span class=\"o\">.</span><span class=\"na\">containsKey</span><span class=\"o\">(</span><span class=\"n\">restException</span><span class=\"o\">.</span><span class=\"na\">getErrorCode</span><span class=\"o\">()))</span> <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"nf\">getExceptionByReflection</span><span class=\"o\">(</span><span class=\"n\">restException</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"n\">IOException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// Fail silently here, irrelevant as a new exception will be thrown anyway</span>\n    <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"n\">Exception</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"na\">error</span><span class=\"o\">(</span><span class=\"s\">\"Error instantiating the exception to be thrown for the interface '{}'\"</span><span class=\"o\">,</span> \n                     <span class=\"n\">apiClass</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">(),</span> <span class=\"n\">e</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">return</span> <span class=\"nf\">defaultDecode</span><span class=\"o\">(</span><span class=\"n\">methodKey</span><span class=\"o\">,</span> <span class=\"n\">response</span><span class=\"o\">,</span> <span class=\"n\">restException</span><span class=\"o\">);</span> <span class=\"c1\">//fallback not presented here</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">private</span> <span class=\"n\">ServiceException</span> <span class=\"nf\">getExceptionByReflection</span><span class=\"o\">(</span><span class=\"n\">RestException</span> <span class=\"n\">restException</span><span class=\"o\">)</span>\n        <span class=\"kd\">throws</span> <span class=\"n\">Exception</span>\n<span class=\"o\">{</span>\n    <span class=\"n\">ServiceException</span> <span class=\"n\">exceptionToBeThrown</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n    <span class=\"n\">ThrownServiceExceptionDetails</span> <span class=\"n\">exceptionDetails</span> <span class=\"o\">=</span> <span class=\"n\">exceptionsThrown</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">restException</span><span class=\"o\">.</span><span class=\"na\">getErrorCode</span><span class=\"o\">());</span>\n    <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">exceptionDetails</span><span class=\"o\">.</span><span class=\"na\">hasMessageConstructor</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n        <span class=\"n\">exceptionToBeThrown</span> <span class=\"o\">=</span> <span class=\"n\">exceptionDetails</span><span class=\"o\">.</span><span class=\"na\">getMessageConstructor</span><span class=\"o\">().</span><span class=\"na\">newInstance</span><span class=\"o\">(</span><span class=\"n\">restException</span><span class=\"o\">.</span><span class=\"na\">getMessage</span><span class=\"o\">());</span>\n    <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n        <span class=\"n\">exceptionToBeThrown</span> <span class=\"o\">=</span> <span class=\"n\">exceptionDetails</span><span class=\"o\">.</span><span class=\"na\">getEmptyConstructor</span><span class=\"o\">().</span><span class=\"na\">newInstance</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">exceptionToBeThrown</span><span class=\"o\">;</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<h1 id=\"success\">Success!</h1>\n<p>Now that wasn’t so hard was it? By using this <code class=\"highlighter-rouge\">ErrorDecoder</code>, all the exceptions declared thrown, even the subclasses of abstract base exceptions in our APIs, will get a chance to live by and get thrown on both sides of an inter-service call, with no specific treatment, just some reflection magic!</p>\n\n<p>Hopefully this will come in handy for you, thanks for reading!</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "16",
                "id": "2195",
                "key": "original_post_id"
            },
            {
                "value": "16",
                "id": "2204",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2194",
                "key": "restapi_import_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2203",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2193",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "my_blog",
                "id": "2202",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "6004598668cf97698ea26ae3609f2454",
                "id": "2192",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "6004598668cf97698ea26ae3609f2454",
                "id": "2201",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/02/19/microservices-and-exception-handling/",
                "id": "2191",
                "key": "rss_pi_source_url"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/02/19/microservices-and-exception-handling/",
                "id": "2200",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2016/02/19/microservices-and-exception-handling-in-java-with-feign-and-reflection/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2016-02-19T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "microservices-and-exception-handling-in-java-with-feign-and-reflection",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-02-19T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1730",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1730/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1730/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1730/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2016/02/04/typescript-dependency-injection-and-decorators/",
        "title": "Typescript Dependency Injection and Decorators",
        "short_URL": "http://wp.me/p7VTrW-rV",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "87d4e574686400ed41e4616141e0f303",
        "ID": 1731,
        "content": "<p>In July 2015, Microsoft announced the release of Typescript 1.5, introducing <a href=\"https://github.com/Microsoft/TypeScript/wiki/What's-new-in-TypeScript#decorators\">decorators</a>, based on the ES7 decorator proposal. I had to test it!</p>\n\n<!-- more -->\n\n<blockquote>\n  <p>It should be noted that decorators are still in <a href=\"https://github.com/wycats/javascript-decorators\">stage 1 proposal</a> and their actual implementation could change anytime</p>\n</blockquote>\n\n<p>This article will demonstrate the possibility of using decorators to do dependency injection in Typescript.</p>\n\n<h2 id=\"why-use-injection\">Why use injection?</h2>\n\n<ol>\n  <li>\n    <p>Injection avoids the pollution of the global namespace with object instances.</p>\n  </li>\n  <li>\n    <p>It provides an easy way to share an object instance across our application, without the need to pass the object everywhere.</p>\n\n    <p>In our constantly growing Single Page Application, we have some objects that are constants through a user visit. E.g., the visitor’s browser and the logged User. The first offers us some utility methods like <code class=\"highlighter-rouge\">browser.isMobile()</code> or <code class=\"highlighter-rouge\">browser.isIE()</code>. The second which contains a set of permissions, email, etc., is used, among other things, to determine which panels the user can access.</p>\n  </li>\n  <li>\n    <p>The injected object is always up-to-date.</p>\n\n    <p>We use Backbone to periodically refresh our models with the state from the server. Our injector allows us to create the instance once and use it where we need it.</p>\n  </li>\n</ol>\n\n<h2 id=\"implementation\">Implementation</h2>\n\n<p>I made a simple <a href=\"https://github.com/GermainBergeron/dose\">project</a> on GitHub that provides the Injector and decorator. Feel free to contribute!</p>\n\n<p>It’s also available on npm: <code class=\"highlighter-rouge\">npm install dose</code>.</p>\n\n<p>It uses a small registry that stores values in a map. There’s a lot to improve in there, but it met my requirements.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"kr\">class</span> <span class=\"nx\">Injector</span> <span class=\"p\">{</span>\n\n    <span class=\"kr\">private</span> <span class=\"kr\">static</span> <span class=\"nx\">registry</span><span class=\"err\">:</span> <span class=\"p\">{[</span><span class=\"nx\">key</span><span class=\"err\">:</span> <span class=\"nx\">string</span><span class=\"p\">]</span><span class=\"err\">:</span> <span class=\"nx\">any</span><span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"p\">{};</span>\n\n    <span class=\"kr\">static</span> <span class=\"nx\">getRegistered</span><span class=\"p\">(</span><span class=\"nx\">key</span><span class=\"err\">:</span> <span class=\"nx\">string</span><span class=\"p\">)</span><span class=\"err\">:</span> <span class=\"nx\">any</span> <span class=\"p\">{</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">registered</span> <span class=\"o\">=</span> <span class=\"nx\">Injector</span><span class=\"p\">.</span><span class=\"nx\">registry</span><span class=\"p\">[</span><span class=\"nx\">key</span><span class=\"p\">];</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">registered</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"nx\">registered</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n            <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nb\">Error</span><span class=\"p\">(</span><span class=\"err\">`</span><span class=\"na\">Error</span><span class=\"p\">:</span> <span class=\"nx\">$</span><span class=\"p\">{</span><span class=\"nx\">key</span><span class=\"p\">}</span> <span class=\"nx\">was</span> <span class=\"nx\">not</span> <span class=\"nx\">registered</span><span class=\"p\">.</span><span class=\"err\">`</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kr\">static</span> <span class=\"nx\">register</span><span class=\"p\">(</span><span class=\"na\">key</span><span class=\"p\">:</span> <span class=\"nx\">string</span><span class=\"p\">,</span> <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"nx\">any</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">registered</span> <span class=\"o\">=</span> <span class=\"nx\">Injector</span><span class=\"p\">.</span><span class=\"nx\">registry</span><span class=\"p\">[</span><span class=\"nx\">key</span><span class=\"p\">];</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">registered</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nb\">Error</span><span class=\"p\">(</span><span class=\"err\">`</span><span class=\"na\">Error</span><span class=\"p\">:</span> <span class=\"nx\">$</span><span class=\"p\">{</span><span class=\"nx\">key</span><span class=\"p\">}</span> <span class=\"nx\">is</span> <span class=\"nx\">already</span> <span class=\"nx\">registered</span><span class=\"p\">.</span><span class=\"err\">`</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n        <span class=\"nx\">Injector</span><span class=\"p\">.</span><span class=\"nx\">registry</span><span class=\"p\">[</span><span class=\"nx\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">value</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>The Injector can now be used like this:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"cm\">/* FileA.ts */</span>\n<span class=\"kr\">import</span> <span class=\"nx\">User</span> <span class=\"nx\">from</span> <span class=\"s1\">'User'</span><span class=\"p\">;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">Injector</span> <span class=\"nx\">from</span> <span class=\"s1\">'Injector'</span><span class=\"p\">;</span>\n\n<span class=\"cm\">/* Register the User */</span>\n<span class=\"kd\">let</span> <span class=\"nx\">instance</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">User</span><span class=\"p\">(</span><span class=\"s1\">'John'</span><span class=\"p\">,</span> <span class=\"s1\">'Smith'</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">);</span>\n<span class=\"nx\">Injector</span><span class=\"p\">.</span><span class=\"nx\">register</span><span class=\"p\">(</span><span class=\"s1\">'user'</span><span class=\"p\">,</span> <span class=\"nx\">instance</span><span class=\"p\">);</span>\n\n<span class=\"cm\">/* Register Application Settings */</span>\n<span class=\"kd\">let</span> <span class=\"nx\">settings</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"na\">DEBUG</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">};</span>\n<span class=\"nx\">Injector</span><span class=\"p\">.</span><span class=\"nx\">register</span><span class=\"p\">(</span><span class=\"s1\">'settings'</span><span class=\"p\">,</span> <span class=\"nx\">settings</span><span class=\"p\">);</span></code></pre></figure>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"cm\">/* FileB.ts */</span> \n<span class=\"kr\">import</span> <span class=\"nx\">Injector</span> <span class=\"nx\">from</span> <span class=\"s1\">'Injector'</span><span class=\"p\">;</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">test</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">user</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"nx\">User</span><span class=\"o\">&gt;</span><span class=\"nx\">Injector</span><span class=\"p\">.</span><span class=\"nx\">getRegistered</span><span class=\"p\">(</span><span class=\"s1\">'user'</span><span class=\"p\">);</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">user</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"nx\">test</span><span class=\"p\">();</span></code></pre></figure>\n\n<p>It works and it’s far from magic. We must cast the registered value in <code class=\"highlighter-rouge\">User</code> because <code class=\"highlighter-rouge\">getRegistered</code> returns an object of type <code class=\"highlighter-rouge\">any</code>.</p>\n\n<h3 id=\"enters-the-decorator\">Enters the decorator</h3>\n<p>First, let’s look at the simpler injector:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"kd\">function</span> <span class=\"nx\">injectProperty</span><span class=\"p\">(...</span><span class=\"nx\">keys</span><span class=\"err\">:</span> <span class=\"nx\">string</span><span class=\"p\">[])</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"nx\">target</span><span class=\"err\">:</span> <span class=\"nx\">any</span><span class=\"p\">,</span> <span class=\"nx\">property</span><span class=\"err\">:</span> <span class=\"nx\">string</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"nx\">target</span><span class=\"p\">[</span><span class=\"nx\">property</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">Injector</span><span class=\"p\">.</span><span class=\"nx\">getRegistered</span><span class=\"p\">(</span><span class=\"nx\">keys</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]);</span>\n    <span class=\"p\">};</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>In this code, <code class=\"highlighter-rouge\">target</code> is the object instance on which we want to inject and <code class=\"highlighter-rouge\">key</code> is the property. Let’s see the usage:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"kr\">class</span> <span class=\"nx\">UserConsumer</span> <span class=\"p\">{</span>\n    <span class=\"err\">@</span><span class=\"nx\">inject</span><span class=\"p\">(</span><span class=\"s1\">'user'</span><span class=\"p\">)</span>\n    <span class=\"kr\">private</span> <span class=\"nx\">user</span><span class=\"err\">:</span> <span class=\"nx\">User</span><span class=\"p\">;</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>target =&gt; UserConsumer</p>\n\n<p>property =&gt; user</p>\n\n<p>keys[0] =&gt; ‘user’</p>\n\n<p>The <code class=\"highlighter-rouge\">injectorMethod</code> does about the same but accept 1…N keys instead of one.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"kr\">class</span> <span class=\"nx\">UserConsumer</span> <span class=\"p\">{</span>\n    <span class=\"err\">@</span><span class=\"nx\">injectorMethod</span> <span class=\"p\">(</span><span class=\"s1\">'user'</span><span class=\"p\">,</span> <span class=\"s1\">'settings'</span><span class=\"p\">)</span>\n    <span class=\"nx\">getUserAge</span><span class=\"p\">(</span><span class=\"nx\">offset</span><span class=\"err\">:</span> <span class=\"nx\">number</span><span class=\"p\">,</span> <span class=\"nx\">user</span><span class=\"p\">?:</span> <span class=\"nx\">User</span><span class=\"p\">,</span> <span class=\"nx\">settings</span><span class=\"p\">?:</span> <span class=\"nx\">any</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">settings</span><span class=\"p\">.</span><span class=\"nx\">DEBUG</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'Getting user age'</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">return</span> <span class=\"nx\">offset</span> <span class=\"o\">+</span> <span class=\"nx\">user</span><span class=\"p\">.</span><span class=\"nx\">age</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<blockquote>\n  <p>Note that it adds parameters to the methods. I have yet to make it work directly in the method parameters</p>\n</blockquote>\n\n<p>Nice! But we can do better. We don’t want to have a decorator for the method and another for the property. Let’s wrap them with a small function that detects the type, so we can use <code class=\"highlighter-rouge\">@inject('key')</code> on both methods and parameters</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"kr\">export</span> <span class=\"kd\">function</span> <span class=\"nx\">inject</span><span class=\"p\">(...</span><span class=\"nx\">keys</span><span class=\"err\">:</span> <span class=\"nx\">string</span><span class=\"p\">[])</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"p\">(...</span><span class=\"nx\">args</span><span class=\"err\">:</span> <span class=\"nx\">any</span><span class=\"p\">[])</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">params</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n        <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"nx\">i</span><span class=\"o\">&lt;</span><span class=\"nx\">args</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">){</span>\n            <span class=\"nx\">args</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">]</span> <span class=\"p\">?</span> <span class=\"nx\">params</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">args</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">])</span> <span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">switch</span> <span class=\"p\">(</span><span class=\"nx\">params</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">case</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"nx\">injectProperty</span><span class=\"p\">(</span><span class=\"nx\">keys</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]).</span><span class=\"nx\">apply</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"nx\">args</span><span class=\"p\">);</span>\n            <span class=\"k\">case</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"nx\">injectMethod</span><span class=\"p\">(...</span><span class=\"nx\">keys</span><span class=\"p\">).</span><span class=\"nx\">apply</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"nx\">args</span><span class=\"p\">);</span>\n            <span class=\"nl\">default</span><span class=\"p\">:</span>\n                <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nb\">Error</span><span class=\"p\">(</span><span class=\"s2\">\"Decorators are not valid here!\"</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">};</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>Here’s the complete UserConsumer code. A small demo project is available on <a href=\"https://github.com/GermainBergeron/injector\">GitHub</a>.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"kr\">import</span> <span class=\"p\">{</span><span class=\"nx\">inject</span><span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s1\">'../node_modules/dose/dist/Dose'</span><span class=\"p\">;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">User</span> <span class=\"nx\">from</span> <span class=\"s1\">'./User'</span><span class=\"p\">;</span>\n<span class=\"kr\">import</span> <span class=\"nx\">InjectableKeys</span> <span class=\"nx\">from</span> <span class=\"s1\">'./InjectableKeys'</span><span class=\"p\">;</span>\n\n<span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"kr\">class</span> <span class=\"nx\">UserConsumer</span> <span class=\"p\">{</span>\n\n    <span class=\"err\">@</span><span class=\"nx\">inject</span><span class=\"p\">(</span><span class=\"nx\">InjectableKeys</span><span class=\"p\">.</span><span class=\"nx\">User</span><span class=\"p\">)</span>\n    <span class=\"kr\">private</span> <span class=\"nx\">user</span><span class=\"err\">:</span> <span class=\"nx\">User</span><span class=\"p\">;</span>\n\n    <span class=\"err\">@</span><span class=\"nx\">inject</span><span class=\"p\">(</span><span class=\"nx\">InjectableKeys</span><span class=\"p\">.</span><span class=\"nx\">Settings</span><span class=\"p\">)</span>\n    <span class=\"kr\">private</span> <span class=\"nx\">settings</span><span class=\"err\">:</span> <span class=\"p\">{</span><span class=\"nl\">DEBUG</span><span class=\"p\">:</span> <span class=\"kr\">boolean</span><span class=\"p\">};</span>\n\n    <span class=\"err\">@</span><span class=\"nx\">inject</span><span class=\"p\">(</span><span class=\"nx\">InjectableKeys</span><span class=\"p\">.</span><span class=\"nx\">User</span><span class=\"p\">,</span> <span class=\"nx\">InjectableKeys</span><span class=\"p\">.</span><span class=\"nx\">Settings</span><span class=\"p\">)</span>\n    <span class=\"nx\">getUserAge</span><span class=\"p\">(</span><span class=\"nx\">user</span><span class=\"p\">?:</span> <span class=\"nx\">User</span><span class=\"p\">,</span> <span class=\"nx\">settings</span><span class=\"p\">?:</span> <span class=\"p\">{</span><span class=\"na\">DEBUG</span><span class=\"p\">:</span> <span class=\"kr\">boolean</span><span class=\"p\">})</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">settings</span><span class=\"p\">.</span><span class=\"nx\">DEBUG</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'Getting user age'</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">return</span> <span class=\"nx\">user</span><span class=\"p\">.</span><span class=\"nx\">age</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nx\">getUserName</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">settings</span><span class=\"p\">);</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">settings</span><span class=\"p\">.</span><span class=\"nx\">DEBUG</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'Getting user name'</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">user</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>The official Typescript <a href=\"https://github.com/Microsoft/TypeScript-Handbook/blob/master/pages/Decorators.md\">decorator page</a> has a lot more information on what is possible with the decorators.</p>\n\n<h3 id=\"try-it\">Try it</h3>\n<p>Create a npm projet that depends on dose &amp; Typescript &gt;= 1.5. Then you can run <code class=\"highlighter-rouge\">npm install</code> to download the dependencies.</p>\n\n<p>Import the injector &amp; the inject decorator and you are all set!</p>\n\n<p>Be sure to pass the <code class=\"highlighter-rouge\">–experimentalDecorators</code> flag to your typescript compiler</p>\n\n<p>That’s it!</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "18",
                "id": "2216",
                "key": "original_post_id"
            },
            {
                "value": "18",
                "id": "2225",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2215",
                "key": "restapi_import_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2224",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2214",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "my_blog",
                "id": "2223",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "a43dd2a2dbd2baf7366702657c6ffe3b",
                "id": "2213",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "a43dd2a2dbd2baf7366702657c6ffe3b",
                "id": "2222",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/02/04/typescript-injection-decorator/",
                "id": "2211",
                "key": "rss_pi_source_url"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/02/04/typescript-injection-decorator/",
                "id": "2221",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2016/02/04/typescript-dependency-injection-and-decorators/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2016-02-04T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "typescript-dependency-injection-and-decorators",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-02-04T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1731",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1731/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1731/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1731/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2016/01/22/template-ish-method-pattern-using-java-8/",
        "title": "Template-ish method pattern using java 8",
        "short_URL": "http://wp.me/p7VTrW-rJ",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "5224c43f455310fac92a334fbd3e2bd2",
        "ID": 1719,
        "content": "<p>In the Usage Analytics service, there is a layer that validates if a user is allowed to perform the requested action. This should not be a surprise for anybody as all applications have some kind of security or permission check somewhere. Since the UA service is built in a layer architecture, that’s the job of the permission layer. The code is pretty boilerplate and very similar for all the different calls. It follows this logic :</p>\n\n<ul>\n  <li>Extract user identity and account from token</li>\n  <li>Check if the user has the required permissions\n    <ul>\n      <li>If he does, call the service layer</li>\n      <li>If he doesn’t, throw an exception</li>\n    </ul>\n  </li>\n</ul>\n\n<!-- more -->\n\n<p>This rang a bell in my head. Surely, there’s a design pattern that could help make this code more straightforward and with less duplication. The pattern that seemed the best fit was the <a href=\"https://en.wikipedia.org/wiki/Template_method_pattern\">template method pattern</a>. It is a well known design pattern that can sometimes have a pretty big drawback : with many different implementations come many classes (and it can sometimes be a pain to maintain that many classes). I decided to use some of the goodies that came with Java 8 to solve this problem.</p>\n\n<p>Here is what it looks like :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">UserServiceWithToken</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">UserService</span> <span class=\"n\">userService</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">TokenCacheWrapper</span> <span class=\"n\">tokenCacheWrapper</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">TokenService</span> <span class=\"n\">tokenService</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">PermissionsService</span> <span class=\"n\">permissionService</span><span class=\"o\">;</span>\n\n    <span class=\"nd\">@Inject</span>\n    <span class=\"kd\">public</span> <span class=\"nf\">UserServiceWithToken</span><span class=\"o\">(</span><span class=\"n\">UserService</span> <span class=\"n\">userService</span><span class=\"o\">,</span>\n                                <span class=\"n\">TokenCacheWrapper</span> <span class=\"n\">tokenCacheWrapper</span><span class=\"o\">,</span>\n                                <span class=\"n\">TokenService</span> <span class=\"n\">tokenService</span><span class=\"o\">,</span>\n                                <span class=\"n\">PermissionsService</span> <span class=\"n\">permissionService</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">userService</span> <span class=\"o\">=</span> <span class=\"n\">userService</span><span class=\"o\">;</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">tokenCacheWrapper</span> <span class=\"o\">=</span> <span class=\"n\">tokenCacheWrapper</span><span class=\"o\">;</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">tokenService</span> <span class=\"o\">=</span> <span class=\"n\">tokenService</span><span class=\"o\">;</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">permissionService</span> <span class=\"o\">=</span> <span class=\"n\">permissionService</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n\n    <span class=\"kd\">public</span> <span class=\"n\">Set</span><span class=\"o\">&lt;</span><span class=\"n\">Report</span><span class=\"o\">&gt;</span> <span class=\"nf\">getReportsByUser</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">token</span><span class=\"o\">,</span>\n                                        <span class=\"n\">String</span> <span class=\"n\">userId</span><span class=\"o\">,</span>\n                                        <span class=\"n\">Optional</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">org</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">UsageAnalyticsException</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"nf\">executeIfAuthorized</span><span class=\"o\">(</span><span class=\"n\">org</span><span class=\"o\">,</span>\n                                   <span class=\"n\">tokenCacheWrapper</span><span class=\"o\">.</span><span class=\"na\">getTokenInfo</span><span class=\"o\">(</span><span class=\"n\">token</span><span class=\"o\">),</span>\n                                   <span class=\"n\">account</span> <span class=\"o\">-&gt;</span> <span class=\"n\">userService</span><span class=\"o\">.</span><span class=\"na\">getReportsByUser</span><span class=\"o\">(</span><span class=\"n\">account</span><span class=\"o\">,</span> <span class=\"n\">userId</span><span class=\"o\">),</span>\n                                   <span class=\"n\">Permissions</span><span class=\"o\">.</span><span class=\"na\">VIEW_REPORTS</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setAllowedReportsOnUser</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">token</span><span class=\"o\">,</span>\n                                        <span class=\"n\">String</span> <span class=\"n\">id</span><span class=\"o\">,</span>\n                                        <span class=\"n\">Set</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">reports</span><span class=\"o\">,</span>\n                                        <span class=\"n\">Optional</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">org</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">UsageAnalyticsException</span>\n    <span class=\"o\">{</span>\n        <span class=\"n\">executeIfAuthorized</span><span class=\"o\">(</span><span class=\"n\">org</span><span class=\"o\">,</span>\n                            <span class=\"n\">tokenCacheWrapper</span><span class=\"o\">.</span><span class=\"na\">getTokenInfo</span><span class=\"o\">(</span><span class=\"n\">token</span><span class=\"o\">),</span>\n                            <span class=\"n\">Functions</span><span class=\"o\">.</span><span class=\"na\">consumerToFunction</span><span class=\"o\">(</span><span class=\"n\">account</span> <span class=\"o\">-&gt;</span> <span class=\"n\">userService</span><span class=\"o\">.</span><span class=\"na\">setReportsOnUser</span><span class=\"o\">(</span><span class=\"n\">account</span><span class=\"o\">,</span>\n                                                                                                 <span class=\"n\">id</span><span class=\"o\">,</span>\n                                                                                                 <span class=\"n\">reports</span><span class=\"o\">)),</span>\n                            <span class=\"n\">Permissions</span><span class=\"o\">.</span><span class=\"na\">EDIT_REPORTS</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n\n    <span class=\"kd\">private</span> <span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span> <span class=\"n\">T</span> <span class=\"nf\">executeIfAuthorized</span><span class=\"o\">(</span><span class=\"n\">Optional</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">org</span><span class=\"o\">,</span>\n                                      <span class=\"n\">TokenInfo</span> <span class=\"n\">tokenInfo</span><span class=\"o\">,</span>\n                                      <span class=\"n\">FunctionE1</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">,</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"n\">UsageAnalyticsException</span><span class=\"o\">&gt;</span> <span class=\"n\">executer</span><span class=\"o\">,</span>\n                                      <span class=\"n\">Permission</span><span class=\"o\">...</span> <span class=\"n\">permissions</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">UsageAnalyticsException</span>\n    <span class=\"o\">{</span>\n        <span class=\"n\">String</span> <span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">tokenService</span><span class=\"o\">.</span><span class=\"na\">extractAccount</span><span class=\"o\">(</span><span class=\"n\">tokenInfo</span><span class=\"o\">,</span> <span class=\"n\">org</span><span class=\"o\">);</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"n\">Permission</span> <span class=\"n\">permission</span> <span class=\"o\">:</span> <span class=\"n\">permissions</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">permissionService</span><span class=\"o\">.</span><span class=\"na\">throwIfDoesNotHavePermission</span><span class=\"o\">(</span><span class=\"n\">tokenInfo</span><span class=\"o\">,</span> <span class=\"n\">account</span><span class=\"o\">,</span> <span class=\"n\">permission</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">executer</span><span class=\"o\">.</span><span class=\"na\">apply</span><span class=\"o\">(</span><span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">orElse</span><span class=\"o\">(</span><span class=\"n\">account</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>And here is the little <em>consumerToFunction</em> trick I used to only have one <em>executeIfAuthorized</em> method :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\">    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span> <span class=\"n\">Function</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"n\">Void</span><span class=\"o\">&gt;</span> <span class=\"nf\">consumerToFunction</span><span class=\"o\">(</span><span class=\"n\">Consumer</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span> <span class=\"n\">consumer</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">-&gt;</span> <span class=\"o\">{</span>\n            <span class=\"n\">consumer</span><span class=\"o\">.</span><span class=\"na\">accept</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">);</span>\n            <span class=\"k\">return</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n        <span class=\"o\">};</span>\n    <span class=\"o\">}</span></code></pre></figure>\n\n<p>I could have used AOP (<a href=\"https://en.wikipedia.org/wiki/Aspect-oriented_programming\">Aspect Oriented Programming</a>) to implement a similar solution, similar in the way that it would have achieved the same goals :cleaner code and less code duplication. I chose the template method pattern because I think AOP was overkill for what I was trying to do, like killing a fly with a rocket launcher. Although AOP has its advantages, it would have required more refactoring and the introduction of a new AOP framework. Also, the team is not used to work with AOP. Those familiar with the template method design pattern will recognize that the code above is not exactly an implementation of this pattern, but all in all, I like the result. The implementation is concise, easy to read and adding a new method in the permission layer is very easy. As a bonus, it does not affect the testability of the code as it is fairly easy to mock and unit test.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "20",
                "id": "1879",
                "key": "original_post_id"
            },
            {
                "value": "18",
                "id": "2234",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1878",
                "key": "restapi_import_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2233",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1877",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "my_blog",
                "id": "2232",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "37d8f49b37c2beaaeefbf081b656e220",
                "id": "1876",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "37d8f49b37c2beaaeefbf081b656e220",
                "id": "2231",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/01/22/template-ish-method-pattern-java8/",
                "id": "1875",
                "key": "rss_pi_source_url"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/01/22/template-ish-method-pattern-java8/",
                "id": "2230",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2016/01/22/template-ish-method-pattern-using-java-8/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2016-01-22T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "template-ish-method-pattern-using-java-8",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-01-22T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1719",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1719/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1719/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1719/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2016/01/13/blitz-the-story-behind-this-years-challenge/",
        "title": "Blitz - The story behind this year’s challenge",
        "short_URL": "http://wp.me/p7VTrW-m",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "09dadefb9810f8f5717374369faa5041",
        "ID": 22,
        "content": "<p>This year was the sixth edition of Coveo Blitz, our classic programming contest for students. The original purpose of the event is to find great, passionate developers and show them how fun, passionate, and driven our team is. We had the idea to step out of our comfort zone this year and focus on what we’ve learned in the last editions.</p>\n\n<!-- more -->\n\n<h2 id=\"the-brainstorm\">The brainstorm</h2>\n\n<p>We’ve wanted to do a challenge involving artificial intelligence for a long time. With a smaller team working on Blitz this year, we had to leverage existing projects to make it on time. We already knew <a href=\"https://scalatron.github.io/\">Scalatron</a>, <a href=\"http://www.berlin-ai.com/\">Berlin AI</a>, but our search allowed us to find a bunch of interesting projects, including <a href=\"http://vindinium.org/\">Vindinium</a>, which turned out to be most compelling one. It covered most of our requirements: it was <a href=\"https://github.com/ornicar/vindinium\">open source</a>, customizable, <a href=\"http://vindinium.org/starters\">worked with most programming languages</a> and had many available starter kits.</p>\n\n<p><img src=\"https//scalatron.github.io/images/blitz2016/finals.jpg\" alt=\"image\" /></p>\n\n<h2 id=\"changes-to-vindinium\">Changes to Vindinium</h2>\n\n<p>Vindinium out of the box was a great skeleton for our contest. However, it was missing some features in order to be Blitz ready. First, the way bots usually start Vindinium matches is by joining a queue. As soon as 4 bots are ready, the match starts. This was not an acceptable solution for us, as we needed to have a tournament bracket and we didn’t want participants to join a match that they weren’t supposed to. In order to do that, we added API calls to list, create, join, delete, and start games. We also added an administrator API key that was required to invoke these calls so meddling students wouldn’t create games. This allowed us to create games, send the game id to the appropriate teams, let them join, and start the game at our leisure. We even added a Slack integration to our UI that would automatically send an invite with the game id to teams whenever a game they were expected to join was created.</p>\n\n<p>Another thing we wanted to do was to prevent open source Vindinium bots from working. This ensured that lazy students wouldn’t simply copy a Github project, and  thus dominate all other teams. Consequently, we modified most constants such as the cost of visiting a tavern, the life provided by a tavern, and the damage done by hero’s hits. We also added spikes, a new type of tile. Spikes can be passed through just like air but they deal damage to your hero.</p>\n\n<p>These changes allowed us to easily manage the Vindinium server (through our custom UI) and created a fun and diverse environment for the participants. Spikes added a surprisingly nice complexity to the game and led to some interesting pathfinding strategies.</p>\n\n<p>We also learned a lot while coding the challenge, this year we tackled with Scala, Akka, MongoDB, AWS, NodeJS, React, and TypeScript.</p>\n\n<p><img src=\"https//scalatron.github.io/images/blitz2016/tv.png\" alt=\"image\" /></p>\n\n<h2 id=\"the-contenders\">The contenders</h2>\n\n<p>This year we made a roll call to our amazing colleagues to see if they were interested in also participating to Blitz. Needless to say, it took about 10 minutes to build two complete teams. We made sure the Coveo teams didn’t know about the challenge. They needed to be good, they represent Coveo! Luckily for us, the two Coveo teams finished first and second. Congrats to Brute Force It (Alexandre, Frédéric, Vincent, Pierre-Alexandre) and WOW BLITZ AWSOME (Mathieu, Charles, Denis, Jean-Philippe).</p>\n\n<p><img src=\"https//scalatron.github.io/images/blitz2016/coveoteams.png\" alt=\"image\" /></p>\n\n<h2 id=\"the-winners\">The winners</h2>\n\n<p>Since the first and second places were taken by the Coveo teams (which couldn’t win the prizes), team <em>Comeo</em> (François Chantal, Olivier Précourt, and Samuel Thériault-Hall) got first prize and each member won a GoPro. Team <em>int elligence;</em> (Guillaume Chevalier, Nicolas Tremblay, Raphaël Gaudreault, and Jean-Benoît Harvey) members each got a Best Buy gift card for its second position. Kudos to those two teams!</p>\n\n<p><img src=\"https//scalatron.github.io/images/blitz2016/winners.png\" alt=\"image\" /></p>\n\n<h2 id=\"wrap-up\">Wrap up</h2>\n\n<p>We finished the day by having each team explaining the algorithms used to solve the challenge, grabbed a cold beer and a slice of pizza, and discussed with students. We’ve listed some solutions on the <a href=\"https://github.com/coveoblitz2016\">Coveo Blitz 2016 GitHub account</a>. Send us your solution if yours isn’t listed! Also, be sure to check out the <a href=\"https://www.reddit.com/r/vindinium\">Vindinium subreddit</a> for great AI solutions.</p>\n\n<p>We hope you’ve enjoyed your day as much as we did and hope to see you next year for another awesome challenge. Be sure to take a look at the <a href=\"https://youtu.be/OfA94Ds6BWU\">video</a>, the <a href=\"https://goo.gl/photos/qMLEorRdrejnjpx79\">photo album</a> by <a href=\"https://twitter.com/habanhero\">Nick Pelletier</a>, and read more about <a href=\"https://search.coveo.com/#q=blitz&amp;sort=relevancy&amp;f:sourceFacet=[Web%20-%20TechBlog]&amp;f:languageFacet=[English]&amp;f:platformFacet:not=[Coveo%20Platform%206.5]\">past challenges</a>.</p>\n\n\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "22",
                "id": "1891",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1890",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1889",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "d9f40368a75cacdb8017a5e53fab6076",
                "id": "1888",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/01/13/the-story-behind-blitz-2016/",
                "id": "1887",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2016/01/13/blitz-the-story-behind-this-years-challenge/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2016-01-13T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "blitz-the-story-behind-this-years-challenge",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-01-13T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/22",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/22/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/22/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/22/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2016/01/01/opening-a-sitecore-dialog-from-a-bookmarklet/",
        "revisions": [
            1749
        ],
        "title": "Opening a Sitecore Dialog from a Bookmarklet",
        "short_URL": "http://wp.me/p7VTrW-rK",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {
            "Sitecore": {
                "description": "",
                "post_count": 2,
                "ID": 2412844,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:sitecore",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:sitecore/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "sitecore",
                "name": "Sitecore"
            }
        },
        "global_ID": "433ff54143fa0d0c50c2032114cc694d",
        "ID": 1720,
        "content": "When developing dialogs, wizards and applications in Sitecore, a developer would have to open them many times per day. When the action to open them requires more than one click, a lot of time will be lost.\n\nWouldn’t it be nice if one could open a dialog from the browser console command line or a bookmark?\n\n<!-- more -->\n\nWith a bit of developer tools inspection, it is easy to find that Sitecore uses JavaScript to open the dialogs.\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"nx\">onclick</span><span class=\"o\">=</span><span class=\"s2\">\"javascript:return scForm.postEvent(this, event, 'AnEventName')\"</span></code></pre>\n</figure>The event name can be any Sitecore command like <code class=\"highlighter-rouge\">indexing:runmanager</code> to open the Sitecore Indexing Manager. The code also uses <code class=\"highlighter-rouge\">this</code> and the user event to feed the <code class=\"highlighter-rouge\">scForm.postEvent</code> function. In a bookmarklet, no user event will be available so it needs to be faked by a <code class=\"highlighter-rouge\"><span class=\"p\">{</span> <span class=\"err\">type:</span> <span class=\"err\">'click'</span> <span class=\"p\">}</span></code> object.\n\nPut together, this code can be set as a browser bookmark to send a command to Sitecore in most of the cases:\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"nx\">javascript</span><span class=\"err\">:</span><span class=\"nx\">scForm</span><span class=\"p\">.</span><span class=\"nx\">postEvent</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"s1\">'click'</span> <span class=\"p\">},</span> <span class=\"s1\">'YourEventName'</span><span class=\"p\">)</span></code></pre>\n</figure>The only exception is the Sitecore 8 control panel. The <code class=\"highlighter-rouge\">postEvent</code> function reloads the page when called in a SPEAK page. Instead, the <code class=\"highlighter-rouge\">speakPostEvent</code> function can be used but it has different parameters. Its user event needs to have a <code class=\"highlighter-rouge\">preventDefault</code> function defined to avoid the page to reload.\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"nx\">javascript</span><span class=\"err\">:</span><span class=\"nx\">scForm</span><span class=\"p\">.</span><span class=\"nx\">speakPostEvent</span><span class=\"p\">(</span><span class=\"nx\">scForm</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"s1\">'click'</span><span class=\"p\">,</span> <span class=\"na\">preventDefault</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(){}</span> <span class=\"p\">},</span> <span class=\"s1\">'YourEventName'</span><span class=\"p\">)</span></code></pre>\n</figure>With feature detection, a universal bookmarklet code can be crafted.\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"nx\">javascript</span><span class=\"err\">:</span><span class=\"kd\">var</span> <span class=\"nx\">eventName</span> <span class=\"o\">=</span> <span class=\"s1\">'YourEventName'</span><span class=\"p\">;</span> <span class=\"kd\">var</span> <span class=\"nx\">userEvent</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"s1\">'click'</span><span class=\"p\">,</span> <span class=\"na\">preventDefault</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(){}</span> <span class=\"p\">};</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">scForm</span><span class=\"p\">.</span><span class=\"nx\">speakPostEvent</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"nx\">scForm</span><span class=\"p\">.</span><span class=\"nx\">speakPostEvent</span><span class=\"p\">(</span><span class=\"nx\">scForm</span><span class=\"p\">,</span> <span class=\"nx\">userEvent</span><span class=\"p\">,</span> <span class=\"nx\">eventName</span><span class=\"p\">);</span> <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span> <span class=\"nx\">scForm</span><span class=\"p\">.</span><span class=\"nx\">postEvent</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"nx\">userEvent</span><span class=\"p\">,</span> <span class=\"nx\">eventName</span><span class=\"p\">);</span> <span class=\"p\">}</span></code></pre>\n</figure>This code uses undocumented Sitecore APIs that might change in the future.\n\n<img src=\"https//chrome.google.com/images/20160101/CreateSitecoreDialogBookmarklet.gif\" alt=\"image\" />\n\nThis code can even be used in the excellent <a href=\"https://chrome.google.com/webstore/detail/sitecore-developer-tool/cmbppbejihcnbngefandoljljdppnlda\">Sitecore Developer Tool</a> Google Chrome extension to open dialogs from any Sitecore administration page.\n\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "23",
                "id": "1901",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1900",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1899",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "2bf7023271c88ccd08e8659d0870964d",
                "id": "1898",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2016/01/01/opening-a-sitecore-dialog-from-a-bookmarklet/",
                "id": "1897",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Sitecore": {
                    "description": "",
                    "parent": 0,
                    "post_count": 2,
                    "ID": 2412844,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sitecore",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sitecore/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "sitecore",
                    "name": "Sitecore"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "Sitecore": {
                    "description": "",
                    "post_count": 2,
                    "ID": 2412844,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:sitecore",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:sitecore/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "sitecore",
                    "name": "Sitecore"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2016/01/01/opening-a-sitecore-dialog-from-a-bookmarklet/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2016-01-01T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "opening-a-sitecore-dialog-from-a-bookmarklet",
        "categories": {
            "Sitecore": {
                "description": "",
                "parent": 0,
                "post_count": 2,
                "ID": 2412844,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sitecore",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sitecore/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "sitecore",
                "name": "Sitecore"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T21:23:47+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1720",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1720/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1720/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1720/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/11/21/using-react-jsx-with-typescript/",
        "revisions": [
            1750
        ],
        "title": "Using React JSX with TypeScript",
        "short_URL": "http://wp.me/p7VTrW-o",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {
            "React": {
                "description": "",
                "post_count": 1,
                "ID": 96530,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:react",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:react/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "react",
                "name": "React"
            },
            "TypeScript": {
                "description": "",
                "post_count": 3,
                "ID": 25138290,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typescript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typescript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "typescript",
                "name": "TypeScript"
            },
            "code": {
                "description": "",
                "post_count": 3,
                "ID": 656,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:code",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:code/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "code",
                "name": "code"
            },
            "javascript": {
                "description": "",
                "post_count": 7,
                "ID": 457,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "javascript",
                "name": "javascript"
            }
        },
        "global_ID": "ded83edbe1c5d765bb212535e7f1338f",
        "ID": 24,
        "content": "In the last months, we <a href=\"http://source.coveo.com/2015/08/21/dreamforce-session-explorer/\">experienced with React</a> and we enjoyed it a lot. As you may know, all Coveo’s web applications are built using TypeScript, so with the release of <a href=\"https://github.com/Microsoft/TypeScript/wiki/What's-new-in-TypeScript#typescript-16\">TypeScript 1.6 announcing support for React JSX</a> syntax, we were stoked!\n\n<!-- more -->\n\nIn this article, I’ll introduce you on how to start a new project using TypeScript, JSX and React and show you some tools we use to simplify our development.\n<blockquote>This article was updated on June 6, 2016 to use <code class=\"highlighter-rouge\">typings</code> instead of <code class=\"highlighter-rouge\">tsd</code> since it is now deprecated in favor of typings.</blockquote>\n<h2 id=\"initial-setup-with-npm\">Initial setup with npm</h2>\nFirst we’ll setup our project with <code class=\"highlighter-rouge\">npm init</code>. For this project we need node, typescript, typings, and react. Let’s install them:\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"nx\">npm</span> <span class=\"nx\">install</span> <span class=\"nx\">typescript</span> <span class=\"o\">-</span><span class=\"nx\">g</span>\n<span class=\"nx\">npm</span> <span class=\"nx\">install</span> <span class=\"nx\">typings</span> <span class=\"o\">-</span><span class=\"nx\">g</span>\n\n<span class=\"nx\">npm</span> <span class=\"nx\">install</span> <span class=\"nx\">react</span> <span class=\"o\">--</span><span class=\"nx\">save</span></code></pre>\n</figure>Second, let’s make sure we have TypeScript compiler 1.6 or later:\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"nx\">tsc</span> <span class=\"o\">--</span><span class=\"nx\">version</span></code></pre>\n</figure>You should see an output similar to:\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"nx\">message</span> <span class=\"nx\">TS6029</span><span class=\"err\">:</span> <span class=\"nx\">Version</span> <span class=\"mf\">1.6</span><span class=\"p\">.</span><span class=\"mi\">2</span></code></pre>\n</figure>\n<h2 id=\"typescript-definitions-with-typings\">TypeScript definitions with typings</h2>\nWe’re almost ready to start coding, but we’ll need the React definitions. We already installed <a href=\"https://github.com/typings/typings\">typings</a> which is a package manager to search and install TypeScript definition files directly from the <a href=\"https://github.com/typings/typings#sources\">community driven repositories</a>. Most definitions are from DefinitelyTyped. <a href=\"https://github.com/coveo/DefinitelyTyped\">DefinitelyTyped is a great project and we try to contribute</a> as much as we can. It will allow us to download the latest definitions for React and other libraries. Like we did with npm, we need to initialize a “typings” project by running :\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"nx\">typings</span> <span class=\"nx\">init</span></code></pre>\n</figure>This will create a <code class=\"highlighter-rouge\">typings.json</code> file (similar to a <code class=\"highlighter-rouge\">package.json</code> but refering to our TypeScript definitions), a <code class=\"highlighter-rouge\">typings/</code> folder to store the definitions and a <code class=\"highlighter-rouge\">index.d.ts</code> referencing all our downloaded definitions.\n\nWe can now install the needed definitions:\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"nx\">typings</span> <span class=\"nx\">install</span> <span class=\"nx\">dt</span><span class=\"o\">~</span><span class=\"nx\">react</span> <span class=\"o\">--</span><span class=\"nx\">global</span> <span class=\"o\">--</span><span class=\"nx\">save</span>\n<span class=\"nx\">typings</span> <span class=\"nx\">install</span> <span class=\"nx\">dt</span><span class=\"o\">~</span><span class=\"nx\">react</span><span class=\"o\">-</span><span class=\"nx\">dom</span> <span class=\"o\">--</span><span class=\"nx\">global</span> <span class=\"o\">--</span><span class=\"nx\">save</span>\n<span class=\"nx\">typings</span> <span class=\"nx\">install</span> <span class=\"nx\">dt</span><span class=\"o\">~</span><span class=\"nx\">react</span><span class=\"o\">-</span><span class=\"nx\">addons</span><span class=\"o\">-</span><span class=\"nx\">create</span><span class=\"o\">-</span><span class=\"nx\">fragment</span> <span class=\"o\">--</span><span class=\"nx\">global</span> <span class=\"o\">--</span><span class=\"nx\">save</span>\n<span class=\"nx\">typings</span> <span class=\"nx\">install</span> <span class=\"nx\">dt</span><span class=\"o\">~</span><span class=\"nx\">react</span><span class=\"o\">-</span><span class=\"nx\">addons</span><span class=\"o\">-</span><span class=\"nx\">css</span><span class=\"o\">-</span><span class=\"nx\">transition</span><span class=\"o\">-</span><span class=\"nx\">group</span> <span class=\"o\">--</span><span class=\"nx\">global</span> <span class=\"o\">--</span><span class=\"nx\">save</span>\n<span class=\"nx\">typings</span> <span class=\"nx\">install</span> <span class=\"nx\">dt</span><span class=\"o\">~</span><span class=\"nx\">react</span><span class=\"o\">-</span><span class=\"nx\">addons</span><span class=\"o\">-</span><span class=\"nx\">linked</span><span class=\"o\">-</span><span class=\"nx\">state</span><span class=\"o\">-</span><span class=\"nx\">mixin</span> <span class=\"o\">--</span><span class=\"nx\">global</span> <span class=\"o\">--</span><span class=\"nx\">save</span>\n<span class=\"nx\">typings</span> <span class=\"nx\">install</span> <span class=\"nx\">dt</span><span class=\"o\">~</span><span class=\"nx\">react</span><span class=\"o\">-</span><span class=\"nx\">addons</span><span class=\"o\">-</span><span class=\"nx\">perf</span> <span class=\"o\">--</span><span class=\"nx\">global</span> <span class=\"o\">--</span><span class=\"nx\">save</span>\n<span class=\"nx\">typings</span> <span class=\"nx\">install</span> <span class=\"nx\">dt</span><span class=\"o\">~</span><span class=\"nx\">react</span><span class=\"o\">-</span><span class=\"nx\">addons</span><span class=\"o\">-</span><span class=\"nx\">pure</span><span class=\"o\">-</span><span class=\"nx\">render</span><span class=\"o\">-</span><span class=\"nx\">mixin</span> <span class=\"o\">--</span><span class=\"nx\">global</span> <span class=\"o\">--</span><span class=\"nx\">save</span>\n<span class=\"nx\">typings</span> <span class=\"nx\">install</span> <span class=\"nx\">dt</span><span class=\"o\">~</span><span class=\"nx\">react</span><span class=\"o\">-</span><span class=\"nx\">addons</span><span class=\"o\">-</span><span class=\"nx\">test</span><span class=\"o\">-</span><span class=\"nx\">utils</span> <span class=\"o\">--</span><span class=\"nx\">global</span> <span class=\"o\">--</span><span class=\"nx\">save</span>\n<span class=\"nx\">typings</span> <span class=\"nx\">install</span> <span class=\"nx\">dt</span><span class=\"o\">~</span><span class=\"nx\">react</span><span class=\"o\">-</span><span class=\"nx\">addons</span><span class=\"o\">-</span><span class=\"nx\">transition</span><span class=\"o\">-</span><span class=\"nx\">group</span> <span class=\"o\">--</span><span class=\"nx\">global</span> <span class=\"o\">--</span><span class=\"nx\">save</span>\n<span class=\"nx\">typings</span> <span class=\"nx\">install</span> <span class=\"nx\">dt</span><span class=\"o\">~</span><span class=\"nx\">react</span><span class=\"o\">-</span><span class=\"nx\">addons</span><span class=\"o\">-</span><span class=\"nx\">update</span> <span class=\"o\">--</span><span class=\"nx\">global</span> <span class=\"o\">--</span><span class=\"nx\">save</span>\n<span class=\"nx\">typings</span> <span class=\"nx\">install</span> <span class=\"nx\">dt</span><span class=\"o\">~</span><span class=\"nx\">react</span><span class=\"o\">-</span><span class=\"nx\">global</span> <span class=\"o\">--</span><span class=\"nx\">global</span> <span class=\"o\">--</span><span class=\"nx\">save</span></code></pre>\n</figure>This downloads the definitions to our <code class=\"highlighter-rouge\">typings</code> folder, saves the commit hash to the <code class=\"highlighter-rouge\">typings.json</code> and updates the <code class=\"highlighter-rouge\">typings/index.d.ts</code>.\n\nOur <code class=\"highlighter-rouge\">typings.json</code> should contain something like :\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"p\">{</span>\n  <span class=\"s2\">\"dependencies\"</span><span class=\"err\">:</span> <span class=\"p\">{},</span>\n  <span class=\"s2\">\"globalDependencies\"</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"react\"</span><span class=\"err\">:</span> <span class=\"s2\">\"registry:dt/react#0.14.0+20160602151522\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"react-addons-create-fragment\"</span><span class=\"err\">:</span> <span class=\"s2\">\"registry:dt/react-addons-create-fragment#0.14.0+20160316155526\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"react-addons-css-transition-group\"</span><span class=\"err\">:</span> <span class=\"s2\">\"registry:dt/react-addons-css-transition-group#0.14.0+20160316155526\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"react-addons-linked-state-mixin\"</span><span class=\"err\">:</span> <span class=\"s2\">\"registry:dt/react-addons-linked-state-mixin#0.14.0+20160316155526\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"react-addons-perf\"</span><span class=\"err\">:</span> <span class=\"s2\">\"registry:dt/react-addons-perf#0.14.0+20160316155526\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"react-addons-pure-render-mixin\"</span><span class=\"err\">:</span> <span class=\"s2\">\"registry:dt/react-addons-pure-render-mixin#0.14.0+20160316155526\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"react-addons-test-utils\"</span><span class=\"err\">:</span> <span class=\"s2\">\"registry:dt/react-addons-test-utils#0.14.0+20160427035638\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"react-addons-transition-group\"</span><span class=\"err\">:</span> <span class=\"s2\">\"registry:dt/react-addons-transition-group#0.14.0+20160417134118\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"react-addons-update\"</span><span class=\"err\">:</span> <span class=\"s2\">\"registry:dt/react-addons-update#0.14.0+20160316155526\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"react-dom\"</span><span class=\"err\">:</span> <span class=\"s2\">\"registry:dt/react-dom#0.14.0+20160412154040\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"react-global\"</span><span class=\"err\">:</span> <span class=\"s2\">\"registry:dt/react-global#0.14.0+20160316155526\"</span>\n    <span class=\"c1\">//.....</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre>\n</figure>And the <code class=\"highlighter-rouge\">typings/index.d.ts</code> should contain:\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"c1\">/// &lt;reference path=\"globals/react-addons-create-fragment/index.d.ts\" /&gt;</span>\n<span class=\"c1\">/// &lt;reference path=\"globals/react-addons-css-transition-group/index.d.ts\" /&gt;</span>\n<span class=\"c1\">/// &lt;reference path=\"globals/react-addons-linked-state-mixin/index.d.ts\" /&gt;</span>\n<span class=\"c1\">/// &lt;reference path=\"globals/react-addons-perf/index.d.ts\" /&gt;</span>\n<span class=\"c1\">/// &lt;reference path=\"globals/react-addons-pure-render-mixin/index.d.ts\" /&gt;</span>\n<span class=\"c1\">/// &lt;reference path=\"globals/react-addons-test-utils/index.d.ts\" /&gt;</span>\n<span class=\"c1\">/// &lt;reference path=\"globals/react-addons-transition-group/index.d.ts\" /&gt;</span>\n<span class=\"c1\">/// &lt;reference path=\"globals/react-addons-update/index.d.ts\" /&gt;</span>\n<span class=\"c1\">/// &lt;reference path=\"globals/react-dom/index.d.ts\" /&gt;</span>\n<span class=\"c1\">/// &lt;reference path=\"globals/react-global/index.d.ts\" /&gt;</span>\n<span class=\"c1\">/// &lt;reference path=\"globals/react/index.d.ts\" /&gt;</span></code></pre>\n</figure>\n<h2 id=\"lets-code\">Let’s code</h2>\nCreate a file named <code class=\"highlighter-rouge\">HelloWorld.tsx</code>. Notice the <code class=\"highlighter-rouge\">.tsx</code> extension, this is needed for TypeScript to enable JSX syntax support.\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"c1\">/// &lt;reference path=\"./typings/index.d.ts\" /&gt;</span>\n\n<span class=\"kr\">class</span> <span class=\"nx\">HelloWorld</span> <span class=\"kr\">extends</span> <span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">Component</span><span class=\"o\">&lt;</span><span class=\"nx\">any</span><span class=\"p\">,</span> <span class=\"nx\">any</span><span class=\"o\">&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">render</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span><span class=\"nx\">Hello</span> <span class=\"nx\">world</span><span class=\"o\">!&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span>  <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre>\n</figure>We first reference to our TypeScript definitions that we setup in the previous step. We then <code class=\"highlighter-rouge\">import</code> React module using the ES6 module import syntax and then, we declare our first component using react!\n<h2 id=\"compiling-to-javascript\">Compiling to JavaScript</h2>\nTypeScript 1.6 has a new flag to enable JSX support, we need to enable it. Compile <code class=\"highlighter-rouge\">HelloWorld.tsx</code> to JS by running:\n<code class=\"highlighter-rouge\">\ntsc --jsx react --module commonjs HelloWorld.tsx\n</code>\n\nThis will produce <code class=\"highlighter-rouge\">HelloWorld.js</code>\n\nBut, you might not want to remember all those flags, let’s save our compiler configuration to a <code class=\"highlighter-rouge\">tsconfig.json</code>. The <code class=\"highlighter-rouge\">tsconfig.json</code> file specifies the root files and the compiler options required to compile the project. For more details refer to the <a href=\"https://github.com/Microsoft/typescript/wiki/tsconfig.json\">official documentation</a>.\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"p\">{</span>\n  <span class=\"s2\">\"compilerOptions\"</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"jsx\"</span><span class=\"err\">:</span> <span class=\"s2\">\"react\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"module\"</span><span class=\"err\">:</span> <span class=\"s2\">\"commonjs\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"noImplicitAny\"</span><span class=\"err\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"removeComments\"</span><span class=\"err\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"preserveConstEnums\"</span><span class=\"err\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"outDir\"</span><span class=\"err\">:</span> <span class=\"s2\">\"dist\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"sourceMap\"</span><span class=\"err\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"target\"</span><span class=\"err\">:</span> <span class=\"s2\">\"ES5\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"s2\">\"files\"</span><span class=\"err\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"./typings/index.d.ts\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"HelloWorld.tsx\"</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span></code></pre>\n</figure>We can now run <code class=\"highlighter-rouge\">tsc</code> in our project folder to produce the same result. Notice that we include the <code class=\"highlighter-rouge\">typings/index.d.ts</code> file, so we won’t need to reference it in all our files.\n<h2 id=\"finishing-touches\">Finishing touches</h2>\nLet’s explore a little deeper on how to render our <code class=\"highlighter-rouge\">HelloWorld</code> component and pass typed <code class=\"highlighter-rouge\">props</code>.\n\nLet’s improve our HelloWorld component by adding <code class=\"highlighter-rouge\">firstname</code> and <code class=\"highlighter-rouge\">lastname</code> props and typing them with an <code class=\"highlighter-rouge\">interface</code>. Then, let’s render it! This will allow us to be notified at compile time if a <code class=\"highlighter-rouge\">prop</code> is missing or is the wrong type!\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"kr\">class</span> <span class=\"nx\">HelloWorldProps</span> <span class=\"p\">{</span>\n  <span class=\"kr\">public</span> <span class=\"nx\">firstname</span><span class=\"err\">:</span> <span class=\"nx\">string</span><span class=\"p\">;</span>\n  <span class=\"kr\">public</span> <span class=\"nx\">lastname</span><span class=\"err\">:</span> <span class=\"nx\">string</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kr\">class</span> <span class=\"nx\">HelloWorld</span> <span class=\"kr\">extends</span> <span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">Component</span><span class=\"o\">&lt;</span><span class=\"nx\">HelloWorldProps</span><span class=\"p\">,</span> <span class=\"nx\">any</span><span class=\"o\">&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">render</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span>\n      <span class=\"nx\">Hello</span> <span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">firstname</span><span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">lastname</span><span class=\"p\">}</span><span class=\"o\">!</span>\n    <span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span>  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">ReactDOM</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"nx\">HelloWorld</span>\n    <span class=\"nx\">firstname</span><span class=\"o\">=</span><span class=\"s2\">\"John\"</span>\n    <span class=\"nx\">lastname</span><span class=\"o\">=</span><span class=\"s2\">\"Smith\"</span><span class=\"o\">/&gt;</span><span class=\"p\">,</span>\n  <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s1\">'app'</span><span class=\"p\">));</span></code></pre>\n</figure>Compile once again with <code class=\"highlighter-rouge\">tsc</code>. Then let’s finish by importing everything in an <code class=\"highlighter-rouge\">index.html</code> file:\n\n<figure class=\"highlight\">\n<pre><code class=\"language-html\"><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;html&gt;</span>\n  <span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"utf-8\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;title&gt;</span>React TypeScript Demo<span class=\"nt\">&lt;/title&gt;</span>\n  <span class=\"nt\">&lt;/head&gt;</span>\n  <span class=\"nt\">&lt;body&gt;</span>\n    </code></pre>\n<div><span class=\"na\">id=</span><span class=\"s\">\"app\"</span><span class=\"nt\">&gt;</span></div>\n&nbsp;\n<pre><code class=\"language-html\">\n\n    <span class=\"nt\"><span class=\"na\">src=</span><span class=\"s\">\"https://cdnjs.cloudflare.com/ajax/libs/react/0.14.3/react.js\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\"><span class=\"na\">src=</span><span class=\"s\">\"https://cdnjs.cloudflare.com/ajax/libs/react/0.14.3/react-dom.js\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\"><span class=\"na\">src=</span><span class=\"s\">\"HelloWorld.js\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span></span></span></span></code></pre>\n</figure>Open <code class=\"highlighter-rouge\">index.html</code> in your browser and you should see\n<code class=\"highlighter-rouge\">\nHello John Smith!\n</code>\n\nThat’s it! You’ve created your first TypeScript React project. Hope you enjoy developing with it as much as we do!\n<blockquote>Note that i’ve intentionally left <a href=\"http://webpack.github.io/docs/\">webpack</a> out of this tutorial to keep it short but as your project grows to more than one file, a module loader will be necessary.</blockquote>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "24",
                "id": "1911",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1910",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1909",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "02885ee00a6ed5ad58b23e3ecc04ab75",
                "id": "1908",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/11/21/using-react-jsx-with-typescript/",
                "id": "1907",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "TypeScript": {
                    "description": "",
                    "parent": 0,
                    "post_count": 2,
                    "ID": 25138290,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:typescript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:typescript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "typescript",
                    "name": "TypeScript"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "React": {
                    "description": "",
                    "post_count": 1,
                    "ID": 96530,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:react",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:react/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "react",
                    "name": "React"
                },
                "TypeScript": {
                    "description": "",
                    "post_count": 3,
                    "ID": 25138290,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typescript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typescript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "typescript",
                    "name": "TypeScript"
                },
                "code": {
                    "description": "",
                    "post_count": 3,
                    "ID": 656,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:code",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:code/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "code",
                    "name": "code"
                },
                "javascript": {
                    "description": "",
                    "post_count": 7,
                    "ID": 457,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "javascript",
                    "name": "javascript"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/11/21/using-react-jsx-with-typescript/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-11-21T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "using-react-jsx-with-typescript",
        "categories": {
            "TypeScript": {
                "description": "",
                "parent": 0,
                "post_count": 2,
                "ID": 25138290,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:typescript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:typescript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "typescript",
                "name": "TypeScript"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T21:24:37+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/24",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/24/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/24/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/24/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/10/08/coveo-javascript-ui-for-newcomers/",
        "revisions": [
            1751
        ],
        "title": "Coveo JavaScript UI for Newcomers",
        "short_URL": "http://wp.me/p7VTrW-p",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {
            "Programming": {
                "description": "",
                "post_count": 6,
                "ID": 196,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "programming",
                "name": "Programming"
            },
            "javascript": {
                "description": "",
                "post_count": 7,
                "ID": 457,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "javascript",
                "name": "javascript"
            },
            "jsui": {
                "description": "",
                "post_count": 3,
                "ID": 69235323,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jsui",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jsui/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "jsui",
                "name": "jsui"
            }
        },
        "global_ID": "004121f328a73663ccf2e6c82621444b",
        "ID": 25,
        "content": "The new Coveo JS UI has been available for a while now. How about getting off to the right start? Well you’re at the right place, here is a tutorial on how to configure and use the new Coveo JS UI.\n\n<!-- more -->\n<h2 id=\"step--1-installing-the-coveo-search-api\">Step # 1: Installing the Coveo Search API</h2>\nThe Coveo Platform 7 comes with the Coveo Search API, a web service offering a REST interface that is used by other Coveo products such as the Coveo JavaScript Search interfaces to send query and receive search results from a Coveo unified index.\nThe Coveo Search API REST endpoint can also be used by custom applications (see <a href=\"https://developers.coveo.com/display/public/SearchREST/REST+Search+API+Home\">REST Search API Home</a>).\n\n<img src=\"https//developers.coveo.com/images/JSUI101/CoveoRestBasicDiagram.png\" alt=\"Coveo Rest Basic Diagram\" />\n\nAs shown in the following diagram, the Coveo Search API acts as is a bridge between the front-end search interfaces or applications and a Coveo Enterprise Search (CES) instance maintaining a unified index on the back-end.\nYou can install the Coveo Search API on a server of your choice such as on the Coveo Master server (where Coveo Enterprise Search is installed), on a front-end server (where the Coveo JavaScript Search search is served from), or any other server.\nOnce installed, the Coveo Search API runs as a Windows service.\n\nWhen your deployment includes one or more Coveo JavaScript Search interfaces, you must install and configure a Coveo Search API.\n\nFollow the instructions described <a href=\"https://onlinehelp.coveo.com/en/ces/7.0/administrator/installing_the_coveo_search_api.htm\">here</a> in order to install the Coveo Search API. Then you’ll be asked to <a href=\"https://onlinehelp.coveo.com/en/ces/7.0/administrator/customizing_and_starting_the_coveo_search_api.htm\">customize and start the Coveo Search API</a>.\n\nHere is an example of a working “config.yml” file:\n\n<img src=\"https//developers.coveo.com/images/JSUI101/ConfigYMLExample.png\" alt=\"Config YML Example\" />\n\nOnce you started the “Coveo Search API” service, you can validate that the service is accessible from various computers:\n<div class=\"highlighter-rouge\">\n<pre class=\"highlight\"><code>a.\tUsing a browser, access the URL in the following format:\n\n\"http://[REST_API_SERVER]:[port]/rest/search\"\n![Rest URL Example](/images/JSUI101/RestURLExample.png)\n\nb.\tValidate that the REST API JSON response appears in the browser\n![Rest API JSON](/images/JSUI101/RestAPIJSON.png)\n</code></pre>\n</div>\n<h2 id=\"step--2-creating-the-js-ui-search-page\">Step # 2: Creating the JS UI search page</h2>\nNow that your Coveo Search API is well configured and up and running, you can now create your Coveo search interface in JavaScript.\n\n+Using a browser, access the URL in the following format: “http://[REST_API_SERVER]:[port]”\n+\n+<img src=\"https//developers.coveo.com/images/JSUI101/CoveoJSLandingPage.png\" alt=\"Coveo JS Landing Page\" />\n+\n+Click on “CLICK HERE TO START”\n+\n+<img src=\"https//developers.coveo.com/images/JSUI101/CoveoJSAuthentication.png\" alt=\"Coveo JS Authentication\" />\n+\n+Type your username and password, then click on connect, you’ll get the message below:\n+\n+<img src=\"https//developers.coveo.com/images/JSUI101/CoveoJSLoading.png\" alt=\"Coveo JS Loading\" />\n+\n+On the “CREATE A SEARCH PAGE” window, you can click on “CREATE PAGE” if you just want to only use the “All Content” search interface, or you can click on “MORE TABS” in order to add more search interfaces.\n+\n+<img src=\"https//developers.coveo.com/images/JSUI101/CreateASearchPage.png\" alt=\"Create A Search Page\" />\n+\n+By clicking on “MORE TABS”, you’ll see the out of the box search interfaces available\n\n+<img src=\"https//developers.coveo.com/images/JSUI101/AvailableSearchInterfaces.png\" alt=\"Available Search Interfaces\" />\n\n+Click on the ones that you want to add into your search page. As an example, let’s click on “People”, “Email” and “SharePoint”\n\n+<img src=\"https//developers.coveo.com/images/JSUI101/SelectedInterfaces.png\" alt=\"Selected Interfaces\" />\n\n+Click on “CREATE PAGE”, you’ll get the message below:\n\n+<img src=\"https//developers.coveo.com/images/JSUI101/Creating.png\" alt=\"Creating\" />\n\n+Here is your Coveo JavaScript search page:\n\n+<img src=\"https//developers.coveo.com/images/JSUI101/SearchPageFinal.png\" alt=\"Search Page Final\" />\n\n+You are good to go! But do not stop there, there is so much more to do with it! <a href=\"https://developers.coveo.com/display/public/JsSearchV1/JavaScript+Search+Framework+V1+Home\">Start here</a>\n\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "25",
                "id": "1921",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1920",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1919",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "2e4ad796337a8aa7f706688941b24f1d",
                "id": "1918",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/10/08/Coveo-JavaScript-UI-for-Newcomers/",
                "id": "1917",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "javascript": {
                    "description": "",
                    "parent": 0,
                    "post_count": 5,
                    "ID": 457,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "javascript",
                    "name": "javascript"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "Programming": {
                    "description": "",
                    "post_count": 6,
                    "ID": 196,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "programming",
                    "name": "Programming"
                },
                "javascript": {
                    "description": "",
                    "post_count": 7,
                    "ID": 457,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "javascript",
                    "name": "javascript"
                },
                "jsui": {
                    "description": "",
                    "post_count": 3,
                    "ID": 69235323,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jsui",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jsui/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "jsui",
                    "name": "jsui"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/10/08/coveo-javascript-ui-for-newcomers/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-10-08T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "coveo-javascript-ui-for-newcomers",
        "categories": {
            "javascript": {
                "description": "",
                "parent": 0,
                "post_count": 5,
                "ID": 457,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "javascript",
                "name": "javascript"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T21:25:14+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/25",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/25/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/25/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/25/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/08/21/dreamforce-session-explorer-the-story-behind-the-app/",
        "title": "Dreamforce Session Explorer - The story behind the app",
        "short_URL": "http://wp.me/p7VTrW-q",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "e075e557144a1b15510f9934a186b590",
        "ID": 26,
        "content": "<p>As some of you guys may know, Dreamforce is one of the biggest event in the enterprise software industry. For the <a href=\"https://twitter.com/search?q=%23DF15\">#DF15</a> edition, we wanted to do a little something different than what we had done previously.</p>\n\n<!-- more -->\n\n<p>We wanted to create something by combining marketing and R&amp;D efforts. There were a few simple rules to follow:</p>\n\n<ul>\n  <li>Be able to create something in about 1.5 months or less.</li>\n  <li>Do not replicate/copy Salesforce’s Dreamforce app - complement it</li>\n  <li>Try some new technology or frameworks</li>\n  <li>Showcase Coveo’s capabilities but be distant enough of Coveo for Salesforce</li>\n  <li>Be awesome</li>\n  <li>Have fun</li>\n</ul>\n\n<p>The project was also intended to be a huge hackathon on evenings and weekends… it ended up being a lot more.</p>\n\n<h2 id=\"the-design\">The Design</h2>\n\n<p>Our timeframe was really restricted! We had to think of how to build something awesome really quickly. Numerous ideas were thrown on the table of what the app could be : should we leverage the Dreamforce agenda? Be more social-oriented? Make a party app?  At some point, we even thought about creating a real-time social media aggregator on top of Dreamforce… Let’s say the discussions were flowing!</p>\n\n<p>Leveraging attendees’ own custom agenda (through their Salesforce credentials) would have been really cool, but it would have implied authentication to Salesforce which we just didn’t have time to build. We also explored the Dreamforce website to see what was available at that point. We then decided to do what Coveo has the capability to do: create relationships between data you wouldn’t even think exist. By leveraging Dreamforce’s sessions, themes and speakers, we could associate them with external related content such as Twitter, LinkedIn, SlideShare etc. The idea was born!</p>\n\n<p>Quickly, our power UX team came with an original idea : everything would be hexagonal-oriented. (Nothing to make a developer’s life easy…)  We had to make a lot of iterations on mockups to have something that would satisfy everyone. You can see that from the first iteration from the actual result… it changed a bit.</p>\n\n<p><img src=\"https//twitter.com/images/20150821/dreamforce-iterations-dashboard-01.png\" alt=\"image\" />\n<img src=\"https//twitter.com/images/20150821/dreamforce-iterations-fiche-02.png\" alt=\"image\" />\n<img src=\"https//twitter.com/images/20150821/dreamforce-iterations-fiche-04.png\" alt=\"image\" />\n<img src=\"https//twitter.com/images/20150821/actualapp.png\" alt=\"image\" /></p>\n\n<h2 id=\"techno-techno-techno\">Techno techno techno</h2>\n\n<p>Lots of questions to ask here : Is it client-side only or do we want a back-end as well? Which language? Should it be a native app for mobiles? Which framework?</p>\n\n<p>At Coveo, we have our own Javascript UI Framework (JS UI to make it short) that enables people to easily create custom search pages. Problem is, it comes with a whole lot of functionalities that we did not need in our app, the app concept is really different from what we usually do. Quickly enough, we stripped out what we call the Search Endpoint (module who’s responsibility is to build and execute queries on the Coveo Cloud platform) from the JS UI to make our app as light as possible. Obviously, we were not going to write everything in pure JavaScript without any external help… so came the important time to choose a JS framework to build on top of it. We explored a few things here and there (and also invoked the possibility to do it in TypeScript just like our actual Coveo frameworks)… and decided to use the most trending, buzzwordy, “à la mode” javascript framework of the week… React.</p>\n\n<p>React comes with a really different architecture traditional developers are not used to. We also added the classic tools to make the development easier such as gulp and webpack… and quickly added react-router in the project to manage our URLs. Some parts of the app were well suited for React, such as session details (including related/external content)… but others such as the complete honeycomb view were more… let’s say tricky.</p>\n\n<p>We tried to respect the React architecture and split into as many components as possible, respecting the fact that we did this as a hackathon. For instance, in the Hexagon Details page, you can find components for :</p>\n\n<ul>\n  <li>The application container</li>\n  <li>Hexagonal header</li>\n  <li>Session/Keynote excerpts</li>\n  <li>Result list and result list items</li>\n  <li>A variety of templates for each different kind of content</li>\n</ul>\n\n<p>It would have been really fun to do it in TypeScript instead of JavaScript, but with our early experiences, it felt like the React/Typescript integration was not mature enough to build something without doing some hacks on Typescript itself (this <a href=\"https://github.com/Microsoft/TypeScript/issues/3203\">github issue</a> covers most of it).</p>\n\n<h2 id=\"connectors\">Connectors!</h2>\n\n<p>When you need search, you obviously need one/some/a thousand connectors behind to feed the index some data. When we started, we had a plan for the following sources :</p>\n\n<ul>\n  <li>Dreamforce website</li>\n  <li>Chatter</li>\n  <li>Twitter</li>\n  <li>LinkedIn</li>\n  <li>SlideShare</li>\n  <li>YouTube</li>\n</ul>\n\n<p>The Dreamforce website was entirely crawled using web scraping. We are simply getting the pages and extracting the information we want from the HTML. We were lucky enough that the Dreamforce website was available early (and that the html structure did not change). We’ve been able to quickly adjust to the data, then enrich it with location and dates of the sessions when they were published at the beginning of August.</p>\n\n<p>For the remaining sources… it was like tossing a coin and hoping it to fall on the good side. YouTube was essentially a freebie since we have a productized connector for it. The same thing applies for the Twitter crawling. For SlideShare, we had to develop a new connector, which is quite simple but powerful. We simply have to specify which accounts we want to crawl. Then… LinkedIn and Salesforce Chatter gave us some problems. The API restrictions on LinkedIn did not allow us to store data… while Chatter did not give interesting results. Sooo, as every software project, we had to adjust and then decided to drop LinkedIn and add Facebook groups in the loop (which is a custom connector, again). We then, finally, added Instagram since everybody enjoys seeing pictures of food and beaches while being at Dreamforce. The Instagram crawling is kinda unique since it uses the location of Dreamforce to crawl every post that is made from a nearby location.</p>\n\n<h2 id=\"hexagons\">Hexagons</h2>\n\n<p>Thankfully, building an infinite horizontal scrolling view made only of hexagons was a piece of cake… <strong>NOT</strong>. Ohh, and that infinite horizontal view needs to be awesomely fast on mobile. There were a few challenges and a few iterations were needed before we got to something smooth enough and acceptable.</p>\n\n<p>The biggest challenge with the scrolling timeline was that we couldn’t preload all the hexagons because it would have generated too much DOM and would have been as responsive as an airplane multimedia system. To overcome that, we had to dynamically inject and remove the hexagon as the user scrolls to keep the DOM as small as possible while keeping a virtual space representing the hexagon to-be-injected space.</p>\n\n<p>This led to some magnificent pieces of code like this:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"kd\">var</span> <span class=\"nx\">smallWindow</span> <span class=\"o\">=</span> <span class=\"mi\">630</span><span class=\"p\">;</span>\n<span class=\"kd\">var</span> <span class=\"nx\">so</span><span class=\"o\">******</span><span class=\"nx\">SmallWindow</span> <span class=\"o\">=</span> <span class=\"mi\">550</span><span class=\"p\">;</span>\n<span class=\"kd\">var</span> <span class=\"nx\">hexagonSize</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">ceil</span><span class=\"p\">(</span><span class=\"mi\">120</span> <span class=\"o\">*</span> <span class=\"mf\">1.08</span><span class=\"p\">),</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">ceil</span><span class=\"p\">(</span><span class=\"mi\">140</span> <span class=\"o\">*</span> <span class=\"mf\">1.16</span><span class=\"p\">),</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">ceil</span><span class=\"p\">(</span><span class=\"mi\">170</span> <span class=\"o\">*</span> <span class=\"mf\">1.08</span><span class=\"p\">)];</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">nbEvents</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">events</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">first</span> <span class=\"p\">?</span> <span class=\"mi\">1</span> <span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">events</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&gt;</span> <span class=\"mi\">10</span> <span class=\"p\">?</span> <span class=\"p\">(</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">ceil</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">events</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">/</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span> <span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">width</span> <span class=\"o\">=</span> <span class=\"nx\">hexagonSize</span><span class=\"p\">[</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">hexaSize</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">ceil</span><span class=\"p\">(</span><span class=\"nx\">nbEvents</span> <span class=\"o\">/</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"nx\">nbEvents</span> <span class=\"o\">%</span> <span class=\"mi\">3</span> <span class=\"o\">!=</span> <span class=\"mi\">1</span> <span class=\"p\">?</span> <span class=\"mf\">0.5</span> <span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">));</span></code></pre></figure>\n\n<p>Basically, this code is responsible for measuring the size of the hexagons. We needed to round the number up since we haven’t mastered the pixel split yet.</p>\n\n<h2 id=\"everything-is-mobile-friendly\">Everything is mobile-friendly</h2>\n\n<p>At some point, we decided that it would be cool to have something on the App/Play Stores. Reproducing the app for iOS and Android was just unrealistic, so we decided to go with a Webview approach. We had some experience with Phonegap but we weren’t convinced that it was the way to go since it comes with a lot of feature that we didn’t need in the end. We decided to create our own simple webview apps instead.</p>\n\n<p><strong>iOS</strong></p>\n\n<p>Dreamforce was all about trying new technologies so we decided to implement the iOS app in swift. We implemented a <code class=\"highlighter-rouge\">UIWebView</code> and added some logic to open external links outside the app. The code is pretty simple and is available <a href=\"https://gist.github.com/wfortin/bf7fd2c1798429f0a8fa\">here</a>.</p>\n\n<p><strong>Android</strong></p>\n\n<p>Android app has a little more code because we wanted to support the integrated back button of Android devices. It means that some WebView options need to be enabled like JavaScript and LocalStorage. The code is also available <a href=\"https://gist.github.com/wfortin/7caf9e5c4eca5497407a\">here</a>.</p>\n\n<p>As you can see, the iOS and Android specific code is really small and this technique allowed us to have a single codebase apart of these two snippets. It also enables us to update the app easily without having to submit the app through the App Store review process that can take a couple of days.</p>\n\n<h2 id=\"what-we-learnedwhat-can-be-reusable\">What we learned/What can be reusable</h2>\n\n<p>Overall, we really enjoyed our experience. We developed an expertise in React and really liked it, and would probably like to reuse it on a new project or even maybe in the next generation of our JS UI framework or our cloud administration interface, who knows? We also developed a bunch of new connectors that, with a bit more work and features, could be integrated into the Coveo offering.</p>\n\n<p>It was a really intense project, which ended in a really nice app we’re proud of. It’s obviously not perfect and we dropped some features along the way (such as implementing the desktop mockups, adding some facets etc.), but we’re proud of the result and really hope the Dreamforce crowd will enjoy it. It also offers us an app template that we could maybe reuse for some other events!</p>\n\n<p>Don’t forget to go <a href=\"http://df15.coveo.com/app\">download the app</a>, and huge thanks for everyone that contributed in the app!</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "26",
                "id": "1931",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1930",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1929",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "958080d7f98eb853ae930ec8e516dc2e",
                "id": "1928",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/08/21/dreamforce-session-explorer/",
                "id": "1927",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/08/21/dreamforce-session-explorer-the-story-behind-the-app/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-08-21T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "dreamforce-session-explorer-the-story-behind-the-app",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2015-08-21T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/26",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/26/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/26/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/26/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/08/18/troubleshooting-memory-issues-with-cesservice7/",
        "title": "Troubleshooting memory issues with CESService7",
        "short_URL": "http://wp.me/p7VTrW-r",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "32e60597e60d345c43df86bc13aaf36b",
        "ID": 27,
        "content": "<p>Sometimes CES Service has memory issues and developping a way to fix memory issues with it was way needed.</p>\n\n<p>By default, CES Service 7 should not use more than 50% of the RAM. This way, CES won’t monopolize all the available resources. However, sometimes the CES service is going to take more than 50% of the total RAM. The best way to find out why the service has this behavior is to create dump files.</p>\n\n<!-- more -->\n\n<p>There is an easy way to do that with Windows Server 2003, using User Mode Process Dumper 8.1, but this software doesn’t work on more recent versions of the Windows, that is Windows server 2008 and Windows server 2012.</p>\n\n<p>So, basically, my goal was to find a way to replicate what User Mode Process Dumper is doing on the newer versions of Windows Server: Create an automatic process to monitor the CES service memory usage, and then create multiple dump files when the RAM used by CES service is spiking over 50%.  To avoid multiple problems, I also added the option to automatically close CES service when this situation happens</p>\n\n<h3 id=\"procdump\">ProcDump</h3>\n\n<p><a href=\"https://technet.microsoft.com/en-ca/sysinternals/dd996900.aspx\" rel=\"some text\"><img src=\"https//technet.microsoft.com/images/2015-08-18-managing-memory-issues/ProcDumpLogo.PNG\" alt=\"image\" /></a></p>\n\n<p><a href=\"https://technet.microsoft.com/en-ca/sysinternals/dd996900.aspx\">ProcDump</a> is a free software who allows you to create dump files directly from the command line.</p>\n\n<p>Let’s take this example</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>c:procdump.exe -c 80 -s 5 -n 3 CESService7.exe c:procdumps\n</code></pre>\n</div>\n\n<p>ProcDump is going to create multiple dump files, three in this case (<code class=\"highlighter-rouge\">-n 3</code>), with 5 seconds intervals (<code class=\"highlighter-rouge\">-s 5</code>) when the program (<code class=\"highlighter-rouge\">CESService7.exe</code>) is using more than 80% of CPU (<code class=\"highlighter-rouge\">-c 80</code>). The dump files will be created in the folder prodcumps (<code class=\"highlighter-rouge\">c:procdumps</code>).</p>\n\n<p>Unfortunately, there is no options to kill the program after creating the dump files. This can be a problem, because the server can become very slow and experience performance issues. Using Windows monitoring tool on the RAM we can automatically start a script that will start ProcDump and terminate the program in fault (CES Service).</p>\n\n<h3 id=\"performance-monitor-and-task-scheduler\">Performance Monitor and Task Scheduler</h3>\n\n<p>First, the Performance monitor, <code class=\"highlighter-rouge\">perfmon.exe</code> is built-in Windows 8. It will allows you to monitor the memory usage of a software. We need to create a monitor that will trigger an action when more than 50% of memory is used by CES service. To set this properly we will set the limit at n/2 + 500 MB. <code class=\"highlighter-rouge\">n</code> represent the amount of RAM available. If we have 16GB of RAM, the limit will be 8.5gb. The 500 MB buffer is optional, but it will allow CES service to continue running if there is a minor glitch in the memory usage. For more accurate results, you could decrease this value to 50 MB depending on your final purpose.</p>\n\n<p>We then need to trigger an event when CESService uses more than 8.5 GB of RAM out of 16GB. Using the task scheduler we can trigger this alarm.</p>\n\n<h3 id=\"task-scheduler\">Task Scheduler</h3>\n\n<p>The task Scheduler can be found under the administrative tools. It is used with Performance Monitor in order to trigger actions depending on settings we previously created. In our case, we need to create an alarm that will open a .bat file. This script can be found <a href=\"https://github.com/Coveo/samples/blob/master/batch-file/ScriptDumpFiles.bat\">here</a> .</p>\n\n<p>This script is going to run as an administrator and execute ProcDump if you choose to run the alarm with the highest privileges. After the dump files are created, CES Service will be forced to quit.</p>\n\n<p>In pseudo code, it would look like this:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-bat\">Performance monitor running in background\nIf memory used by CES service spikes over limit:\n  Trigger the alert created in Task Scheduler\nIf triggered:\n  RUN ScripDumpFiles.bat\n  Create Dump Files for CESCrawlers.exe, CESConverters.EXE, CesService.exe\nForce to quit CESService</code></pre></figure>\n\n<h3 id=\"mail-alert\">Mail Alert</h3>\n\n<p>You can also configure an email alert when this happens by adding this line in the file:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-bat\">bat CALL blat -to user@example.com -server smtp.example.com -f sender@example.com -subject \"subject\" -body \"body\"</code></pre></figure>\n\n<p>It is also possible to send an e-mail directly from the task scheduler, but apparently there is an unfixed bug with Windows 8 that won’t allow an e-mail to be sent.</p>\n\n<p><a href=\"http://answers.microsoft.com/en-us/windows/forum/windows_8-desktop/error-message-the-following-error-was-reported/a1e0fd7e-61c3-41aa-85ed-935ba22cf135\" rel=\"Microsoft Error\"><img src=\"https//technet.microsoft.com/images/2015-08-18-managing-memory-issues/alertWindows.PNG\" alt=\"image\" /></a></p>\n\n<h3 id=\"managing-cpu-usage\">Managing CPU usage</h3>\n\n<p>From the task manager, it is possible to restrain the CPU usage for a program. We can choose which processors are allowed to run a program. If there are, let’s say, 8 CPUs available, we could allow processors 1 to 5 to be used by a program. The program will only use 5/8 of the resources available.</p>\n\n<p><img src=\"https//technet.microsoft.com/images/2015-08-18-managing-memory-issues/CPULimitation.PNG\" alt=\"image\" /></p>\n\n<h3 id=\"conclusion\">Conclusion</h3>\n\n<p>Hope this will help people having a better experience at fixing memory issues. If you’re the absolute geek, you can even monitor every program running on your computer!</p>\n\n<p>ps. <a href=\"https://developers.coveo.com/display/SupportKB/TroubleShooting+memory+issues+with+CESService7\">This article on developers.coveo.com</a> explains the procedure in a more detailed way.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "27",
                "id": "1941",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1940",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1939",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "1f6a45a30623511a15b85116d6fd2668",
                "id": "1938",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/08/18/managing-memory-issues/",
                "id": "1937",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/08/18/troubleshooting-memory-issues-with-cesservice7/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-08-18T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "troubleshooting-memory-issues-with-cesservice7",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2015-08-18T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/27",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/27/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/27/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/27/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/08/11/more-hackathons-at-coveo/",
        "title": "More Hackathons at Coveo",
        "short_URL": "http://wp.me/p7VTrW-s",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "f1c4ba2ef5f48357129aa38851dc0409",
        "ID": 28,
        "content": "<blockquote>\n  <p>We should really try this new technology…</p>\n</blockquote>\n\n<blockquote>\n  <p>It would be really cool if we could integrate these two components…</p>\n</blockquote>\n\n<blockquote>\n  <p>I’ve got a new idea on how we could solve this problem…</p>\n</blockquote>\n\n<blockquote>\n  <p><strong>… but I don’t have time to do it.</strong></p>\n</blockquote>\n\n<p>How often do you hear this sort of statement? At Coveo, we hear it every week. Not because we’re overworked, not because we do not take the time to do things correctly. We hear this simply because we have a lot of ideas.</p>\n\n<!-- more -->\n\n<p>We’re pretty enthusiastic when it comes to creating software. Sadly, due to the nature of software development and the rate at which new technologies are released, we do not always have the time to play with everything we’d like to.</p>\n\n<h2 id=\"so-we-introduced-hackathons\">So we introduced Hackathons</h2>\n\n<p>In order to force people to free their schedule and give their ideas a try, we’ve <a href=\"http://source.coveo.com/2014/11/11/hackathon/\">started doing Hackathons at Coveo</a>. Everyone is free from their usual schedule for one afternoon followed by one full day during which everyone can work on … whatever, really!</p>\n\n<p>There are only two rules:</p>\n\n<ol>\n  <li>You are not allowed to work on something that you’d normally be working during a standard work week.</li>\n  <li>You must have a demo at the end of the Hackathon. No exceptions.</li>\n</ol>\n\n<p>So we’ve been doing this for the better part of 2015 now and the event is still a huge success! We try to host a Hackathon once every 3 months and we’re currently working on our 4th edition.</p>\n\n<h2 id=\"some-sample-projects-made-during-hackathons\">Some sample projects made during Hackathons</h2>\n\n<ul>\n  <li>Creating a <a href=\"https://github.com/Coveo/JsAdminMobile\">mobile-friendly version of our cloud administration application</a>.</li>\n  <li>Integrating a world map component into our search results with geolocation.</li>\n  <li>Using Spark and usage analytics data to influence the index using machine learning.</li>\n  <li>A web service where Coveo connectors can be easily configured online and tested.</li>\n  <li>A smart search box with advanced syntax suggestions and highlights.</li>\n  <li><a href=\"https://github.com/wfortin/SlackLine\">SlackLine</a>, a web-based Slack client that can be easily integrated within web apps for self service.</li>\n</ul>\n\n<h2 id=\"outcome\">Outcome</h2>\n\n<p>As you can see from this (very small!) sample, the scope of our Hackathon projects is very broad. A lot of these projects were eventually merged into the product as very real features. Some even gave birth to completely new products!<br />\nAnother positive side effect is that this creates an environment where people that wouldn’t normally work together can collaborate on something cool that they care about.</p>\n\n<p>Hackathons are here at Coveo and they’re here to stay. Everyone loves the event, from the developers to the management team. Here’s hoping that they keep getting bigger.</p>\n\n<p>Who knows, maybe one day we’ll have a Hack Week!</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "28",
                "id": "1951",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1950",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1949",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "e8aad373e0590ecab769e56c906ffc8d",
                "id": "1948",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/08/11/more-hackathons/",
                "id": "1947",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/08/11/more-hackathons-at-coveo/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-08-11T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "more-hackathons-at-coveo",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2015-08-11T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/28",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/28/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/28/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/28/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/07/06/dynamodb-client-side-encryption/",
        "title": "DynamoDB Client Side Encryption",
        "short_URL": "http://wp.me/p7VTrW-t",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "8006ca12a208c649ebd69ff2b99cc039",
        "ID": 29,
        "content": "<p>Since the June 20th 2015 release, it is possible to share custom reports with specified users. Before this release, the API calls for managing the custom reports were in the Coveo Cloud Platform API. This was mainly because the Usage Analytics service had no database other than <a href=\"http://aws.amazon.com/redshift/\">AWS Redshift</a> and we decided that report configurations did not belong in an analytics optimized database. We opted for the Cloud Platform database which is more configuration oriented.</p>\n\n<p>As the Analytics service grows, the need for its own configuration storage began to be felt, so we decided to move the custom reports API to the UA Service and store the configuration in a new database. After an investigation, we decided to use <a href=\"http://aws.amazon.com/dynamodb/\">AWS DynamoDB</a>. Considering that this data can potentially be sensible customer information, it needs to be encrypted.</p>\n\n<!-- more -->\n\n<p>Since server side encryption is not available for DynamoDB, we had no choice but to use client-side encryption. We used a <a href=\"https://github.com/awslabs/aws-dynamodb-encryption-java\">neat little library from aws-labs</a> for this. It essentially takes care of signing and encrypting the data and is very simple to use.</p>\n\n<p>Here is what the setup looks like. Note that we use <a href=\"http://aws.amazon.com/kms/\">AWS KMS</a> to manage the encryption key, <a href=\"https://github.com/google/guice\">Guice</a> for dependency injection and <a href=\"https://github.com/Netflix/archaius\">Archaius</a> for configuration management :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">DynamoDB</span> <span class=\"kd\">extends</span> <span class=\"n\">AbstractModule</span>\n<span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">configure</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Provides</span>\n    <span class=\"nd\">@Singleton</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"n\">AmazonDynamoDBClient</span> <span class=\"nf\">amazonDynamoDBClient</span><span class=\"o\">(</span><span class=\"n\">AWSCredentialsProvider</span> <span class=\"n\">credentialsProvider</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nf\">AmazonDynamoDBClient</span><span class=\"o\">(</span><span class=\"n\">credentialsProvider</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Provides</span>\n    <span class=\"nd\">@Singleton</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"n\">DynamoDBMapper</span> <span class=\"nf\">dynamoDBMapper</span><span class=\"o\">(</span><span class=\"n\">AmazonDynamoDBClient</span> <span class=\"n\">amazonDynamoDBClient</span><span class=\"o\">,</span>\n                                                <span class=\"n\">EncryptionMaterialsProvider</span> <span class=\"n\">encryptionMaterialProvider</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nf\">DynamoDBMapper</span><span class=\"o\">(</span><span class=\"n\">amazonDynamoDBClient</span><span class=\"o\">,</span>\n                                  <span class=\"n\">DynamoDBMapperConfig</span><span class=\"o\">.</span><span class=\"na\">DEFAULT</span><span class=\"o\">,</span>\n                                  <span class=\"k\">new</span> <span class=\"nf\">AttributeEncryptor</span><span class=\"o\">(</span><span class=\"n\">encryptionMaterialProvider</span><span class=\"o\">));</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Provides</span>\n    <span class=\"nd\">@Singleton</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"n\">AWSKMS</span> <span class=\"nf\">awsKms</span><span class=\"o\">(</span><span class=\"n\">AWSCredentialsProvider</span> <span class=\"n\">credentialsProvider</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nf\">AWSKMSClient</span><span class=\"o\">(</span><span class=\"n\">credentialsProvider</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Provides</span>\n    <span class=\"nd\">@Singleton</span>\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"n\">EncryptionMaterialsProvider</span> <span class=\"nf\">kmsEncryptionMaterialProvider</span><span class=\"o\">(</span><span class=\"n\">AWSKMS</span> <span class=\"n\">awsKms</span><span class=\"o\">,</span>\n                                                                            <span class=\"n\">DynamoDBConfigProvider</span> <span class=\"n\">dynamoConfigProvider</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nf\">DirectKmsMaterialProvider</span><span class=\"o\">(</span><span class=\"n\">awsKms</span><span class=\"o\">,</span> <span class=\"n\">dynamoConfigurationProvider</span><span class=\"o\">.</span><span class=\"na\">getDynamoDBKmsKeyId</span><span class=\"o\">().</span><span class=\"na\">getValue</span><span class=\"o\">());</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>It’s pretty simple to setup right?</p>\n\n<p>Next, here is an example of an object that we save in dynamo and that is encrypted :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"nd\">@DynamoDBTable</span><span class=\"o\">(</span><span class=\"n\">tableName</span> <span class=\"o\">=</span> <span class=\"s\">\"UsageAnalytics-Reports\"</span><span class=\"o\">)</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Report</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">id</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">displayName</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">account</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">ReportType</span> <span class=\"n\">type</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">configuration</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">boolean</span> <span class=\"n\">isPublic</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Set</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">filterIds</span> <span class=\"o\">=</span> <span class=\"n\">Sets</span><span class=\"o\">.</span><span class=\"na\">newHashSet</span><span class=\"o\">();</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">Report</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@DynamoDBHashKey</span>\n    <span class=\"nd\">@DynamoDBAutoGeneratedKey</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getId</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">id</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setId</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">id</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">id</span> <span class=\"o\">=</span> <span class=\"n\">id</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@DynamoDBAttribute</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getDisplayName</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">displayName</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setDisplayName</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">displayName</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">displayName</span> <span class=\"o\">=</span> <span class=\"n\">displayName</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@DynamoDBAttribute</span>\n    <span class=\"nd\">@DoNotEncrypt</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getAccount</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">account</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setAccount</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">account</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">account</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@DynamoDBMarshalling</span><span class=\"o\">(</span><span class=\"n\">marshallerClass</span> <span class=\"o\">=</span> <span class=\"n\">ReportTypeConverter</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n    <span class=\"nd\">@DoNotEncrypt</span>\n    <span class=\"kd\">public</span> <span class=\"n\">ReportType</span> <span class=\"nf\">getType</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">type</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setType</span><span class=\"o\">(</span><span class=\"n\">ReportType</span> <span class=\"n\">type</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">type</span> <span class=\"o\">=</span> <span class=\"n\">type</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@DynamoDBAttribute</span>\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getConfiguration</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">configuration</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setConfiguration</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">configuration</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">configuration</span> <span class=\"o\">=</span> <span class=\"n\">configuration</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@DynamoDBAttribute</span>\n    <span class=\"nd\">@DoNotTouch</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">isPublic</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">isPublic</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setPublic</span><span class=\"o\">(</span><span class=\"kt\">boolean</span> <span class=\"n\">isPublic</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">isPublic</span> <span class=\"o\">=</span> <span class=\"n\">isPublic</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@DynamoDBAttribute</span>\n    <span class=\"kd\">public</span> <span class=\"n\">Set</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">&gt;</span> <span class=\"nf\">getFilterIds</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">filterIds</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setFilterIds</span><span class=\"o\">(</span><span class=\"n\">Set</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">filterIds</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">filterIds</span> <span class=\"o\">=</span> <span class=\"n\">filterIds</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>Also pretty simple. All the job is done with the annotations from the DynamoDB data modeling lib. <code class=\"highlighter-rouge\">@DynamoDBAttribute</code> indicates which field is persisted in the database. By default, all the attributes that are annotated with <code class=\"highlighter-rouge\">@DynamoDBAttribute</code> will be encrypted. As you can see, some attributes can be not encrypted (I’ll explain why we need this a little bit later).\nThey are annotated with either the <code class=\"highlighter-rouge\">@DoNotEncrypt</code> or the <code class=\"highlighter-rouge\">@DoNotTouch</code> annotations. The attributes with <code class=\"highlighter-rouge\">@DoNotEncrypt</code> will be signed, but not encrypted and the ones with <code class=\"highlighter-rouge\">@DoNotTouch</code> will be neither signed nor encrypted. If you are not familiar with the concept of signing and encrypting, I recommend you to take a look at this <a href=\"http://stackoverflow.com/a/454069/1546324\">stackoverflow answer</a>.</p>\n\n<p>That’s pretty much it. From now on, saving an object with the <code class=\"highlighter-rouge\">DynamoDBMapper</code> will encrypt the data before persisting it in DynamoDB.</p>\n\n<p><img src=\"http//aws.amazon.com/images/20150706/dynamo_enc.png\" alt=\"image\" /></p>\n\n<h3 id=\"tips-limitations-and-traps-to-avoid\">Tips, limitations and traps to avoid</h3>\n\n<ul>\n  <li>Using a setup like the one shown in this blog post will require an unlimited key strength. This is configured in the jvm. Here is a stackoverflow answer explaining <a href=\"http://stackoverflow.com/questions/6481627/java-security-illegal-key-size-or-default-parameters\">how to do it</a>.</li>\n  <li>Remember when I said wanted some data to not be encrypted? Here’s why: scan operations do not work on encrypted fields. This means it’s only possible to fetch by ID or by a scan operation on a <em>non encrypted</em> field. For us, it is acceptable that some fields are not encrypted. They do not contain sensible information and allow us to perform smarter retrieval of the data.</li>\n  <li>It is possible to back up and restore your encrypted data, as long as the encryption metadada is backed up and restored along with it. For big dynamoDB tables, you can use <a href=\"http://aws.amazon.com/datapipeline/\">AWS Data Pipeline</a>. Since our tables are relatively small and data pipeline can be expensive (it uses AWS EMR and must spawn ec2 instances), we use <a href=\"https://github.com/bchew/dynamodump\">this script</a> in a cron job.</li>\n  <li>I haven’t tried it yet, but according to AWS support, KMS key rotation is supported by the <code class=\"highlighter-rouge\">aws-dynamodb-encryption</code> lib.</li>\n</ul>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "29",
                "id": "1961",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1960",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1959",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "cd2816368d4ac680016e8a33a6150319",
                "id": "1958",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/07/06/dynamodb-encryption/",
                "id": "1957",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/07/06/dynamodb-client-side-encryption/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-07-06T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "dynamodb-client-side-encryption",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2015-07-06T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/29",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/29/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/29/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/29/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/04/26/sandboxing-javascript-execution-in-java/",
        "revisions": [
            1752
        ],
        "title": "Sandboxing JavaScript Execution in Java",
        "short_URL": "http://wp.me/p7VTrW-u",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {
            "Programming": {
                "description": "",
                "post_count": 6,
                "ID": 196,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "programming",
                "name": "Programming"
            },
            "javascript": {
                "description": "",
                "post_count": 7,
                "ID": 457,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "javascript",
                "name": "javascript"
            },
            "java": {
                "description": "",
                "post_count": 2,
                "ID": 1017,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:java",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:java/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "java",
                "name": "java"
            }
        },
        "global_ID": "f058f3ff717b370aae0015ea6736d793",
        "ID": 30,
        "content": "The <a href=\"https://developers.coveo.com/display/SearchREST/Managing+the+Query+Execution+Pipeline\">Query Pipeline</a> on a Coveo index can be extended using JavaScript code running on the server. This has many benefits, but allowing arbitrary code to run in a server process opens the possibility for an admin to bring the server down in many creative ways. To protect against this we added functionality to the JS interpreter we’re using (<a href=\"https://github.com/dynjs/dynjs\">DynJS</a>) to prevent Bad Things from happening.\n\n<!-- more -->\n\nThere are three ways external code running in a process can cause harm:\n<ul>\n\t<li>Using APIs to damage the server process or underlying server</li>\n\t<li>Using an excessive amount of CPU</li>\n\t<li>Allocating an excessive amount of memory</li>\n</ul>\n<h2 id=\"blocking-access-to-apis\">Blocking Access to APIs</h2>\nAt the core, JavaScript doesn’t provide any API that might be used for nefarious purposes. For example, there is no way to access the filesystem, or perform network requests. Still, JS interpreters in the Java world typically allow JS code to access any Java class present in the class path, and DynJS is no exception.\n\nFor example, JS code can use a Java object like this:\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"kd\">var</span> <span class=\"nx\">foo</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">java</span><span class=\"p\">.</span><span class=\"nx\">util</span><span class=\"p\">.</span><span class=\"nx\">ArrayList</span><span class=\"p\">();</span></code></pre>\n</figure>What we did is add a configuration option for DynJS to prevent it from exposing any Java package or object except the ones standard in JavaScript, plus any API that is explicitly exposed by the hosting application (which we assume are “safe”).\n\nThis shows how to set the option when creating a <code class=\"highlighter-rouge\">DynJS</code> runtime object:\n\n<figure class=\"highlight\">\n<pre><code class=\"language-java\"><span class=\"n\">Config</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Config</span><span class=\"o\">(</span><span class=\"n\">getClass</span><span class=\"o\">.</span><span class=\"na\">getClassLoader</span><span class=\"o\">());</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setSandbox</span><span class=\"o\">(</span><span class=\"kc\">true</span><span class=\"o\">);</span>\n<span class=\"n\">DynJS</span> <span class=\"n\">dynJs</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">DynJS</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">);</span></code></pre>\n</figure>Pretty simple, right? It was simple to implement too. Here’s how it works:\n\n<figure class=\"highlight\">\n<pre><code class=\"language-java\"><span class=\"k\">if</span> <span class=\"o\">(!</span><span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"na\">getConfig</span><span class=\"o\">().</span><span class=\"na\">isSandbox</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n    <span class=\"n\">defineGlobalProperty</span><span class=\"o\">(</span><span class=\"s\">\"Packages\"</span><span class=\"o\">,</span> <span class=\"k\">new</span> <span class=\"n\">JavaPackage</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">,</span> <span class=\"kc\">null</span><span class=\"o\">),</span> <span class=\"kc\">true</span> <span class=\"o\">);</span>\n    <span class=\"n\">defineGlobalProperty</span><span class=\"o\">(</span><span class=\"s\">\"java\"</span><span class=\"o\">,</span>     <span class=\"k\">new</span> <span class=\"n\">JavaPackage</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">,</span> <span class=\"s\">\"java\"</span><span class=\"o\">),</span> <span class=\"kc\">true</span><span class=\"o\">);</span>\n    <span class=\"n\">defineGlobalProperty</span><span class=\"o\">(</span><span class=\"s\">\"javax\"</span><span class=\"o\">,</span>    <span class=\"k\">new</span> <span class=\"n\">JavaPackage</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">,</span> <span class=\"s\">\"javax\"</span><span class=\"o\">),</span> <span class=\"kc\">true</span><span class=\"o\">);</span>\n    <span class=\"n\">defineGlobalProperty</span><span class=\"o\">(</span><span class=\"s\">\"org\"</span><span class=\"o\">,</span>      <span class=\"k\">new</span> <span class=\"n\">JavaPackage</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">,</span> <span class=\"s\">\"org\"</span><span class=\"o\">),</span> <span class=\"kc\">true</span><span class=\"o\">);</span>\n    <span class=\"n\">defineGlobalProperty</span><span class=\"o\">(</span><span class=\"s\">\"com\"</span><span class=\"o\">,</span>      <span class=\"k\">new</span> <span class=\"n\">JavaPackage</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">,</span> <span class=\"s\">\"com\"</span><span class=\"o\">),</span> <span class=\"kc\">true</span><span class=\"o\">);</span>\n    <span class=\"n\">defineGlobalProperty</span><span class=\"o\">(</span><span class=\"s\">\"io\"</span><span class=\"o\">,</span>       <span class=\"k\">new</span> <span class=\"n\">JavaPackage</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">,</span> <span class=\"s\">\"io\"</span><span class=\"o\">),</span> <span class=\"kc\">true</span><span class=\"o\">);</span>\n\n    <span class=\"n\">defineGlobalProperty</span><span class=\"o\">(</span><span class=\"s\">\"System\"</span><span class=\"o\">,</span>   <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">,</span> <span class=\"kc\">true</span><span class=\"o\">);</span>\n<span class=\"o\">}</span></code></pre>\n</figure>We simply prevent any public symbol from being registered that would allow code to “escape” the sandbox. Without those, it can only reference stock JavaScript APIs.\n<h2 id=\"restricting-cpu-and-memory-usage\">Restricting CPU and Memory Usage</h2>\nCalling JavaScript code from a server process is done in a blocking manner, which means that the call only returns when the code has finished executing. If that code decides to loop forever… well it helps with the heating bill, I guess.\n\nTo address that we need a way to stop script execution if it takes too long. But even that is not enough: the JS code might sometimes block on long-running network calls, for example, so strictly checking the time taken might block legitimate operations. What we want is a way to monitor the actual CPU time used.\n\nTurns out this is pretty easy to do. The <code class=\"highlighter-rouge\">ThreadMXBean</code> object exposed by the JVM provides methods to check the total amount of CPU time used by a thread. By reading the value just before script execution starts and then periodically checking the value during execution, it’s possible to detect when the script code has exceeded a pre-determined CPU quota. When this happens, an exception is thrown to inform the caller of the situation.\n\nSo, how do we arrange to periodically check the CPU quota? We need to have this check performed at some place where the JavaScript interpreter must pass no matter what kind of infinite loop it’s in. In this case I’ve chosen to do that in the <code class=\"highlighter-rouge\">interpret</code> method of <code class=\"highlighter-rouge\">BlockStatement</code>, which is essentially when any scope like a loop or condition or function body is entered. There we call <code class=\"highlighter-rouge\">checkResourceUsage</code> from <code class=\"highlighter-rouge\">ExecutionContext</code>, which will relay the call if resource quotas are being enforced.\n\nHere is how we check that the CPU quota hasn’t been exceeded:\n\n<figure class=\"highlight\">\n<pre><code class=\"language-java\"><span class=\"kd\">private</span> <span class=\"kt\">void</span> <span class=\"nf\">checkCpuTime</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"kt\">long</span> <span class=\"n\">current</span> <span class=\"o\">=</span> <span class=\"n\">readCpuTime</span><span class=\"o\">(</span><span class=\"n\">threadId</span><span class=\"o\">);</span>\n    <span class=\"kt\">long</span> <span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"n\">current</span> <span class=\"o\">-</span> <span class=\"n\">lastCpuTime</span><span class=\"o\">;</span>\n    <span class=\"n\">lastCpuTime</span> <span class=\"o\">=</span> <span class=\"n\">current</span><span class=\"o\">;</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">cpuTime</span><span class=\"o\">.</span><span class=\"na\">addAndGet</span><span class=\"o\">(-</span><span class=\"n\">delta</span><span class=\"o\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nf\">ExceededResourcesException</span><span class=\"o\">(</span><span class=\"s\">\"CPU usage has exceeded the allowed quota\"</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre>\n</figure>A similar technique is used to monitor heap allocations. The same <code class=\"highlighter-rouge\">ThreadMXBean</code> object also exposes metrics about how many bytes were allocated by the current thread (including memory that is no longer referenced, but’s that OK). By checking this metric in the exact same way as for CPU, we can detect whenever the thread has exceeded the allowed memory quota and put an end to its processing.\n\nNOTE: The call reporting memory allocation for a thread is not available on all JVMs, but works well enough on Hotspot and I expect others are implementing it as well. Trying to use memory quota on a JVM without the proper support would result in an <code class=\"highlighter-rouge\">UnsupportedOperationException</code>.\n\nTo run JS code with quota checks, you need to run the code using the <code class=\"highlighter-rouge\">ExecutionContext</code> returned by <code class=\"highlighter-rouge\">createResourceQuotaExecutionObject</code> on an existing <code class=\"highlighter-rouge\">ExecutionContext</code>. It is possible to invoke several blocks of code using the same quotas. The total consumed resources by all script executions will be used to check the quotas.\n\n<figure class=\"highlight\">\n<pre><code class=\"language-java\"><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"na\">createResourceQuotaExecutionObject</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">ResourceQuota</span><span class=\"o\">(</span><span class=\"n\">cpuQuota</span><span class=\"o\">,</span> <span class=\"n\">memoryQuota</span><span class=\"o\">));</span></code></pre>\n</figure>\n<h2 id=\"what-about-nashorn\">What about Nashorn?</h2>\n<a href=\"http://openjdk.java.net/projects/nashorn/\">Nashorn</a> is the new JS interpreter bundled with Java 8. It has good performance and is certainly more robust, but I still haven’t figured out a way to implement proper CPU and memory quotas in that engine, mainly because I haven’t yet found a place where I can regularly check if quotas have been exceeded (I haven’t tried very hard though). I might write a new post when/if I succeed in that endeavour.\n<h2 id=\"trying-it-out\">Trying it out</h2>\nThe changes we’ve made to DynJS are available <a href=\"https://github.com/Coveo/dynjs/tree/resource-quotas\">publicly on GitHub</a>. We also submitted a <a href=\"https://github.com/dynjs/dynjs/pull/154\">pull request</a> but it hasn’t been merged yet.\n<h2 id=\"update---february-2016\">Update - February 2016</h2>\nAs of now, DynJS is no longer being maintained, and no official version has ever been released with the changes described in this post (in fact the PR is still opened).\n\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "30",
                "id": "1971",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1970",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1969",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "ab040014aefaa365ae73fc797c590762",
                "id": "1968",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/04/26/sandboxing-javascript-execution-in-java/",
                "id": "1967",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "javascript": {
                    "description": "",
                    "parent": 0,
                    "post_count": 5,
                    "ID": 457,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "javascript",
                    "name": "javascript"
                },
                "java": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 1017,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:java",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:java/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "java",
                    "name": "java"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "Programming": {
                    "description": "",
                    "post_count": 6,
                    "ID": 196,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "programming",
                    "name": "Programming"
                },
                "javascript": {
                    "description": "",
                    "post_count": 7,
                    "ID": 457,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "javascript",
                    "name": "javascript"
                },
                "java": {
                    "description": "",
                    "post_count": 2,
                    "ID": 1017,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:java",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:java/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "java",
                    "name": "java"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/04/26/sandboxing-javascript-execution-in-java/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-04-26T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "sandboxing-javascript-execution-in-java",
        "categories": {
            "javascript": {
                "description": "",
                "parent": 0,
                "post_count": 5,
                "ID": 457,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:javascript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "javascript",
                "name": "javascript"
            },
            "java": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 1017,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:java",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:java/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "java",
                "name": "java"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T21:26:02+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/30",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/30/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/30/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/30/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/04/19/creating-a-new-js-ui-component-in-typescript/",
        "revisions": [
            1753
        ],
        "title": "Creating a new JS UI component in TypeScript",
        "short_URL": "http://wp.me/p7VTrW-v",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {
            "TypeScript": {
                "description": "",
                "post_count": 3,
                "ID": 25138290,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typescript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typescript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "typescript",
                "name": "TypeScript"
            },
            "Programming": {
                "description": "",
                "post_count": 6,
                "ID": 196,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "programming",
                "name": "Programming"
            },
            "javascript": {
                "description": "",
                "post_count": 7,
                "ID": 457,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "javascript",
                "name": "javascript"
            },
            "jsui": {
                "description": "",
                "post_count": 3,
                "ID": 69235323,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jsui",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jsui/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "jsui",
                "name": "jsui"
            }
        },
        "global_ID": "4833d9ac02ca1ce7f664324bf631f911",
        "ID": 31,
        "content": "Behind the scenes, the Coveo JS UI framework is built entirely in TypeScript. Obviously, it’s intended to be customized in JavaScript, but you may want to go further and create your own component in TypeScript. Be aware that this uses the internal JS UI APIs, so it can eventually break when updating. Purpose of the post is to give a glimpse of how the components are built internally.\n\n<!-- more -->\n\n<em>Huge disclaimer : I am definitely not a TypeScript expert, and I am not working in the JS UI team. It is possible that my code is not optimized. This is more to give a basic guideline :D</em>\n\n<em>Huge disclaimer #2 : This article also implies that the reader has basic notions of TypeScript and the Coveo JS UI.</em>\n\nIf you have ever downloaded the Coveo JS UI framework, you may have noticed that there’s a folder named <strong>lib</strong> in there. This folder contains the TypeScript definitions files we will need.\n<h2 id=\"a-component-what-are-we-even-talking-about\">A component? What are we even talking about?</h2>\nThe JS UI is basically made of <strong>components</strong>, which are the different parts you can simply drop in your page. It goes from the facets, sorts, result lists to more advanced stuff such as the folding or analytics. On an architectural point of view, it is important to understand that a component should have a <strong>single responsability</strong> and should (at least try to) not impact others.\n<h2 id=\"so-what-do-we-want-to-build\">So, what do we want to build?</h2>\nMy use case was fairly simple : I wanted to create a component I called the <em>ToggleResultList</em>. This component would be a simple button allowing you to have different result lists in the same page (probably with a different style) and toggle between them. The main goal is to have something I can drop in my markup like this :\n\n<figure class=\"highlight\">\n<pre><code class=\"language-html\"><span class=\"nt\">&lt;span</span> <span class=\"na\">class=</span><span class=\"s\">\"CoveoToggleResultList\"</span> <span class=\"na\">data-result-list=</span><span class=\"s\">\"#MainResultList\"</span><span class=\"na\">data-icon=</span><span class=\"s\">\"default-result-list\"</span><span class=\"nt\">&gt;&lt;/span&gt;</span></code></pre>\n</figure>Where the <em>MainResultList</em> is the ID of the HTML element containing the result list. Something like :\n\n<figure class=\"highlight\">\n<div><span class=\"na\">class=</span><span class=\"s\">\"CoveoResultList\"</span> <span class=\"na\">data-wait-animation=</span><span class=\"s\">\"fade\"</span> <span class=\"na\">id=</span><span class=\"s\">\"MainResultList\"</span> <span class=\"na\">data-result-container-selector=</span><span class=\"s\">\"#ResultsContainer\"</span><span class=\"nt\">&gt;</span> ...</div>\n</figure><em>For details on the options on the Result List, you can refer to the <a href=\"https://developers.coveo.com/display/public/JsSearch/ResultList+Component\">Developers documentation</a> on the component.</em>\n<h2 id=\"the-typescript-frame\">The TypeScript frame</h2>\nSo, let’s start by building the most basic component we can.\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"c1\">/// &lt;reference path=\"../lib/CoveoJsSearch.d.ts\" /&gt;</span>\n\n<span class=\"nx\">module</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Test</span> <span class=\"p\">{</span>\n    <span class=\"kr\">export</span> <span class=\"kr\">class</span> <span class=\"nx\">ToggleResultList</span> <span class=\"kr\">extends</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">Component</span> <span class=\"p\">{</span>\n        <span class=\"kr\">static</span> <span class=\"nx\">ID</span> <span class=\"o\">=</span> <span class=\"s1\">'ToggleResultList'</span><span class=\"p\">;</span>\n\n        <span class=\"nx\">constructor</span><span class=\"p\">(</span><span class=\"kr\">public</span> <span class=\"nx\">element</span><span class=\"err\">:</span> <span class=\"nx\">HTMLElement</span><span class=\"p\">,</span>\n                    <span class=\"kr\">public</span> <span class=\"nx\">options</span><span class=\"p\">?:</span> <span class=\"nx\">any</span><span class=\"p\">,</span>\n                    <span class=\"nx\">bindings</span><span class=\"p\">?</span> <span class=\"p\">:</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">ComponentBindings</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"kr\">super</span><span class=\"p\">(</span><span class=\"nx\">element</span><span class=\"p\">,</span> <span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">ID</span><span class=\"p\">,</span> <span class=\"nx\">bindings</span><span class=\"p\">);</span>\n\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">CoveoJQuery</span><span class=\"p\">.</span><span class=\"nx\">registerAutoCreateComponent</span><span class=\"p\">(</span><span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Test</span><span class=\"p\">.</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">);</span></code></pre>\n</figure>Let’s take a small breath, look out the window, and then focus on what we just wrote. For now, it doesn’t do a single thing, but the frame is there. We start by referencing the Coveo Js Search definition file, which will allow us to compile the whole thing. Then, we create our own class that extends <em>Coveo.Ui.Component</em>, which is the base class for any JS UI component. We then need an <strong>ID</strong>. This will get interpreted as <strong>CoveoToggleResultList</strong> in the markup, allowing anyone to drop this element in their page.\n\nThe constructor takes 3 parameters : the actual HTML element, any options that could be set on the component (we will come back to this further) and the current bindings (such as which search interface we are in). Don’t forget to call the basic constructor!\n\nFinally, we use the framework to register the component. This line is really important, as it will indicate the JSUI to consider your block of code as an authentic component. From now on, you could compile your TypeScript code and integrate it in your page, right after CoveoJsSearch.min.js.\n\n<em>Be sure to check out Will’s <a href=\"http://source.coveo.com/2014/11/04/optimizing-web-app-build-process/\">excellent blog post</a> on how to create a successful build process.</em>\n<h2 id=\"adding-some-functionality\">Adding some functionality</h2>\nWe have a component, it’s kinda cool! But it would been even cooler if it actually did something… Let’s add some stuff.\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"c1\">/// &lt;reference path=\"../lib/CoveoJsSearch.d.ts\" /&gt;</span>\n\n<span class=\"nx\">module</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Test</span> <span class=\"p\">{</span>\n    <span class=\"kr\">export</span> <span class=\"kr\">interface</span> <span class=\"nx\">ToggleR1esultListOptions</span> <span class=\"p\">{</span>\n        <span class=\"nl\">resultList</span><span class=\"p\">:</span> <span class=\"nx\">HTMLElement</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kr\">export</span> <span class=\"kr\">class</span> <span class=\"nx\">ToggleResultList</span> <span class=\"kr\">extends</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">Component</span> <span class=\"p\">{</span>\n        <span class=\"kr\">private</span> <span class=\"kr\">static</span> <span class=\"nx\">coveoResultListClass</span> <span class=\"o\">=</span> <span class=\"s1\">'.CoveoResultList'</span><span class=\"p\">;</span>\n        <span class=\"kr\">private</span> <span class=\"kr\">static</span> <span class=\"nx\">disabledClass</span> <span class=\"o\">=</span> <span class=\"s1\">'coveo-disabled'</span><span class=\"p\">;</span>\n\n        <span class=\"kr\">static</span> <span class=\"nx\">ID</span> <span class=\"o\">=</span> <span class=\"s1\">'ToggleResultList'</span><span class=\"p\">;</span>\n        <span class=\"kr\">static</span> <span class=\"nx\">options</span><span class=\"err\">:</span> <span class=\"nx\">ToggleResultListOptions</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"na\">resultList</span><span class=\"p\">:</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">ComponentOptions</span><span class=\"p\">.</span><span class=\"nx\">buildSelectorOption</span><span class=\"p\">({</span> <span class=\"na\">defaultFunction</span><span class=\"p\">:</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">coveoResultListClass</span><span class=\"p\">).</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">})</span>\n        <span class=\"p\">};</span>\n\n        <span class=\"nx\">constructor</span><span class=\"p\">(</span><span class=\"kr\">public</span> <span class=\"nx\">element</span><span class=\"err\">:</span> <span class=\"nx\">HTMLElement</span><span class=\"p\">,</span>\n                    <span class=\"kr\">public</span> <span class=\"nx\">options</span><span class=\"p\">?:</span> <span class=\"nx\">any</span><span class=\"p\">,</span>\n                    <span class=\"nx\">bindings</span><span class=\"p\">?</span> <span class=\"p\">:</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">ComponentBindings</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"kr\">super</span><span class=\"p\">(</span><span class=\"nx\">element</span><span class=\"p\">,</span> <span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">ID</span><span class=\"p\">,</span> <span class=\"nx\">bindings</span><span class=\"p\">);</span>\n\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span> <span class=\"o\">=</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">ComponentOptions</span><span class=\"p\">.</span><span class=\"nx\">initComponentOptions</span><span class=\"p\">(</span><span class=\"nx\">element</span><span class=\"p\">,</span> <span class=\"nx\">ToggleResultList</span><span class=\"p\">,</span> <span class=\"nx\">options</span><span class=\"p\">);</span>\n\n            <span class=\"nx\">Assert</span><span class=\"p\">.</span><span class=\"nx\">exists</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">resultList</span><span class=\"p\">);</span>\n\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">bind</span><span class=\"p\">.</span><span class=\"nx\">onRoot</span><span class=\"p\">(</span><span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Events</span><span class=\"p\">.</span><span class=\"nx\">QueryEvents</span><span class=\"p\">.</span><span class=\"nx\">querySuccess</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"err\">:</span> <span class=\"nx\">JQueryEventObject</span><span class=\"p\">,</span> <span class=\"nx\">args</span><span class=\"err\">:</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Events</span><span class=\"p\">.</span><span class=\"nx\">QuerySuccessEventArgs</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleQuerySuccess</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">,</span> <span class=\"nx\">args</span><span class=\"p\">));</span>\n            <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">element</span><span class=\"p\">).</span><span class=\"nx\">click</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleClick</span><span class=\"p\">());</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"kr\">private</span> <span class=\"nx\">getClassName</span><span class=\"p\">()</span><span class=\"err\">:</span> <span class=\"nx\">string</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"s1\">'.'</span> <span class=\"o\">+</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">Component</span><span class=\"p\">.</span><span class=\"nx\">computeCssClassNameForType</span><span class=\"p\">(</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">ID</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"kr\">private</span> <span class=\"nx\">handleQuerySuccess</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"err\">:</span> <span class=\"nx\">JQueryEventObject</span><span class=\"p\">,</span> <span class=\"nx\">data</span><span class=\"err\">:</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Events</span><span class=\"p\">.</span><span class=\"nx\">QuerySuccessEventArgs</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">resultList</span><span class=\"p\">).</span><span class=\"nx\">coveo</span><span class=\"p\">().</span><span class=\"nx\">disabled</span> <span class=\"o\">&amp;&amp;</span>\n                <span class=\"o\">!</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">resultList</span><span class=\"p\">).</span><span class=\"nx\">is</span><span class=\"p\">(</span><span class=\"s1\">':visible'</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n                <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">resultList</span><span class=\"p\">).</span><span class=\"nx\">show</span><span class=\"p\">();</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"kr\">private</span> <span class=\"nx\">handleClick</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n            <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">getClassName</span><span class=\"p\">()).</span><span class=\"nx\">addClass</span><span class=\"p\">(</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">disabledClass</span><span class=\"p\">);</span>\n            <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">element</span><span class=\"p\">).</span><span class=\"nx\">removeClass</span><span class=\"p\">(</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">disabledClass</span><span class=\"p\">);</span>\n            <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">coveoResultListClass</span><span class=\"p\">).</span><span class=\"nx\">coveo</span><span class=\"p\">(</span><span class=\"s1\">'disable'</span><span class=\"p\">);</span>\n            <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">coveoResultListClass</span><span class=\"p\">).</span><span class=\"nx\">hide</span><span class=\"p\">();</span>\n            <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">resultList</span><span class=\"p\">).</span><span class=\"nx\">coveo</span><span class=\"p\">(</span><span class=\"s1\">'enable'</span><span class=\"p\">);</span>\n            <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">getBindings</span><span class=\"p\">().</span><span class=\"nx\">root</span><span class=\"p\">).</span><span class=\"nx\">coveo</span><span class=\"p\">(</span><span class=\"s1\">'executeQuery'</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">CoveoJQuery</span><span class=\"p\">.</span><span class=\"nx\">registerAutoCreateComponent</span><span class=\"p\">(</span><span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Test</span><span class=\"p\">.</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">);</span></code></pre>\n</figure>As you can see, we added some options in there. Those options are interpreted as <em>data attributes</em> in the markup. We will then be able to associate the component to a specific result list. You may wonder why we created a static options class…\n<ol>\n\t<li>It’s how the JS UI components are built.</li>\n\t<li>It makes them compatible with the interface editor, which would allow anyone to simply drag and drop your component in a new or existing search page. (that’s for the <em>interface</em> part)</li>\n</ol>\nIn our options for now, we simply added a <em>ResultList</em>, which is a selector option (meaning it points to another HTML element). There’s a huge variety of options you can have, simply use the autocomplete feature in your favorite IDE to see them :D What is really important is in the constructor, we need to <strong>initialize</strong> the options, this will make the link with the component.\n\nWe then bound our component to two events : the regular <em>jQuery</em> click event and the JS UI’s query success event. <em>You can refer again to the <a href=\"https://developers.coveo.com/display/public/JsSearch/Events\">Developers documentation</a> to learn more about these events.</em> The <strong>click</strong> event is responsible to disabling the other result lists and then to trigger a query on the one that should be shown.\n==&gt; <strong>It is important to actually disable and not just hide other result lists, since in the case the events would stay bound on them, so it would mess with your search page state</strong>.\n\nYou may also wonder why we show the result list in the <em>querySuccess</em> event instead of the <em>click</em> one… simple : we need to make sure the query has enough time to be executed. If we were to show it right away, it would “flick” a few milli-seconds and not be enjoyable for the user.\n<h2 id=\"adding-mooaaaarrrr-options\">Adding mooaaaarrrr options</h2>\nSo, we have a component working, isn’t this nice? If you’re really building something that other developers might use, you may want to add even more options to your component to make it really awesome.\n\n<figure class=\"highlight\">\n<pre><code class=\"language-javascript\"><span class=\"c1\">/// &lt;reference path=\"../lib/CoveoJsSearch.d.ts\" /&gt;</span>\n\n<span class=\"nx\">module</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Test</span> <span class=\"p\">{</span>\n    <span class=\"kr\">export</span> <span class=\"kr\">interface</span> <span class=\"nx\">ToggleResultListOptions</span> <span class=\"p\">{</span>\n        <span class=\"nx\">defaultResultList</span><span class=\"p\">?:</span> <span class=\"kr\">boolean</span><span class=\"p\">;</span>\n        <span class=\"nx\">icon</span><span class=\"p\">?:</span> <span class=\"nx\">string</span><span class=\"p\">;</span>\n        <span class=\"nx\">numberOfResults</span><span class=\"p\">?:</span> <span class=\"nx\">number</span><span class=\"p\">;</span>\n        <span class=\"nl\">resultList</span><span class=\"p\">:</span> <span class=\"nx\">HTMLElement</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kr\">export</span> <span class=\"kr\">class</span> <span class=\"nx\">ToggleResultList</span> <span class=\"kr\">extends</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">Component</span> <span class=\"p\">{</span>\n        <span class=\"kr\">private</span> <span class=\"kr\">static</span> <span class=\"nx\">coveoResultListClass</span> <span class=\"o\">=</span> <span class=\"s1\">'.CoveoResultList'</span><span class=\"p\">;</span>\n        <span class=\"kr\">private</span> <span class=\"kr\">static</span> <span class=\"nx\">disabledClass</span> <span class=\"o\">=</span> <span class=\"s1\">'coveo-disabled'</span><span class=\"p\">;</span>\n\n        <span class=\"kr\">static</span> <span class=\"nx\">ID</span> <span class=\"o\">=</span> <span class=\"s1\">'ToggleResultList'</span><span class=\"p\">;</span>\n        <span class=\"kr\">static</span> <span class=\"nx\">options</span><span class=\"err\">:</span> <span class=\"nx\">ToggleResultListOptions</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"na\">defaultResultList</span><span class=\"p\">:</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">ComponentOptions</span><span class=\"p\">.</span><span class=\"nx\">buildBooleanOption</span><span class=\"p\">({</span> <span class=\"na\">defaultValue</span><span class=\"p\">:</span> <span class=\"kc\">false</span> <span class=\"p\">}),</span>\n            <span class=\"na\">icon</span><span class=\"p\">:</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">ComponentOptions</span><span class=\"p\">.</span><span class=\"nx\">buildIconOption</span><span class=\"p\">(),</span>\n            <span class=\"na\">numberOfResults</span><span class=\"p\">:</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">ComponentOptions</span><span class=\"p\">.</span><span class=\"nx\">buildNumberOption</span><span class=\"p\">({</span> <span class=\"na\">defaultValue</span><span class=\"p\">:</span> <span class=\"mi\">10</span> <span class=\"p\">}),</span>\n            <span class=\"na\">resultList</span><span class=\"p\">:</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">ComponentOptions</span><span class=\"p\">.</span><span class=\"nx\">buildSelectorOption</span><span class=\"p\">({</span> <span class=\"na\">defaultFunction</span><span class=\"p\">:</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">coveoResultListClass</span><span class=\"p\">).</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">})</span>\n        <span class=\"p\">};</span>\n\n        <span class=\"kr\">private</span> <span class=\"nx\">iconTemplate</span> <span class=\"o\">=</span> <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">template</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;span class='coveo-icon &lt;%=icon%&gt;'&gt;&lt;/span&gt;\"</span><span class=\"p\">);</span>\n\n        <span class=\"nx\">constructor</span><span class=\"p\">(</span><span class=\"kr\">public</span> <span class=\"nx\">element</span><span class=\"err\">:</span> <span class=\"nx\">HTMLElement</span><span class=\"p\">,</span>\n                    <span class=\"kr\">public</span> <span class=\"nx\">options</span><span class=\"p\">?:</span> <span class=\"nx\">any</span><span class=\"p\">,</span>\n                    <span class=\"nx\">bindings</span><span class=\"p\">?</span> <span class=\"p\">:</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">ComponentBindings</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"kr\">super</span><span class=\"p\">(</span><span class=\"nx\">element</span><span class=\"p\">,</span> <span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">ID</span><span class=\"p\">,</span> <span class=\"nx\">bindings</span><span class=\"p\">);</span>\n\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span> <span class=\"o\">=</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">ComponentOptions</span><span class=\"p\">.</span><span class=\"nx\">initComponentOptions</span><span class=\"p\">(</span><span class=\"nx\">element</span><span class=\"p\">,</span> <span class=\"nx\">ToggleResultList</span><span class=\"p\">,</span> <span class=\"nx\">options</span><span class=\"p\">);</span>\n\n            <span class=\"nx\">Assert</span><span class=\"p\">.</span><span class=\"nx\">exists</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">resultList</span><span class=\"p\">);</span>\n\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">defaultResultList</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">resultList</span><span class=\"p\">).</span><span class=\"nx\">coveo</span><span class=\"p\">(</span><span class=\"s1\">'disable'</span><span class=\"p\">);</span>\n                <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">resultList</span><span class=\"p\">).</span><span class=\"nx\">hide</span><span class=\"p\">();</span>\n                <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">element</span><span class=\"p\">).</span><span class=\"nx\">addClass</span><span class=\"p\">(</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">disabledClass</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">bind</span><span class=\"p\">.</span><span class=\"nx\">onRoot</span><span class=\"p\">(</span><span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Events</span><span class=\"p\">.</span><span class=\"nx\">QueryEvents</span><span class=\"p\">.</span><span class=\"nx\">buildingQuery</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"err\">:</span> <span class=\"nx\">JQueryEventObject</span><span class=\"p\">,</span> <span class=\"nx\">args</span><span class=\"err\">:</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Events</span><span class=\"p\">.</span><span class=\"nx\">BuildingQueryEventArgs</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleBuildingQuery</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">,</span> <span class=\"nx\">args</span><span class=\"p\">));</span>\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">bind</span><span class=\"p\">.</span><span class=\"nx\">onRoot</span><span class=\"p\">(</span><span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Events</span><span class=\"p\">.</span><span class=\"nx\">QueryEvents</span><span class=\"p\">.</span><span class=\"nx\">querySuccess</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"err\">:</span> <span class=\"nx\">JQueryEventObject</span><span class=\"p\">,</span> <span class=\"nx\">args</span><span class=\"err\">:</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Events</span><span class=\"p\">.</span><span class=\"nx\">QuerySuccessEventArgs</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleQuerySuccess</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">,</span> <span class=\"nx\">args</span><span class=\"p\">));</span>\n            <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">element</span><span class=\"p\">).</span><span class=\"nx\">click</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleClick</span><span class=\"p\">());</span>\n\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"kr\">private</span> <span class=\"nx\">getClassName</span><span class=\"p\">()</span><span class=\"err\">:</span> <span class=\"nx\">string</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"s1\">'.'</span> <span class=\"o\">+</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">Component</span><span class=\"p\">.</span><span class=\"nx\">computeCssClassNameForType</span><span class=\"p\">(</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">ID</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"kr\">private</span> <span class=\"nx\">handleBuildingQuery</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"err\">:</span> <span class=\"nx\">JQueryEventObject</span><span class=\"p\">,</span> <span class=\"nx\">data</span><span class=\"err\">:</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Events</span><span class=\"p\">.</span><span class=\"nx\">BuildingQueryEventArgs</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">resultList</span><span class=\"p\">).</span><span class=\"nx\">coveo</span><span class=\"p\">().</span><span class=\"nx\">disabled</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">queryBuilder</span><span class=\"p\">.</span><span class=\"nx\">numberOfResults</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">numberOfResults</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"kr\">private</span> <span class=\"nx\">handleQuerySuccess</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"err\">:</span> <span class=\"nx\">JQueryEventObject</span><span class=\"p\">,</span> <span class=\"nx\">data</span><span class=\"err\">:</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Events</span><span class=\"p\">.</span><span class=\"nx\">QuerySuccessEventArgs</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">resultList</span><span class=\"p\">).</span><span class=\"nx\">coveo</span><span class=\"p\">().</span><span class=\"nx\">disabled</span> <span class=\"o\">&amp;&amp;</span>\n                <span class=\"o\">!</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">resultList</span><span class=\"p\">).</span><span class=\"nx\">is</span><span class=\"p\">(</span><span class=\"s1\">':visible'</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n                <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">resultList</span><span class=\"p\">).</span><span class=\"nx\">show</span><span class=\"p\">();</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"kr\">private</span> <span class=\"nx\">handleClick</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n            <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">getClassName</span><span class=\"p\">()).</span><span class=\"nx\">addClass</span><span class=\"p\">(</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">disabledClass</span><span class=\"p\">);</span>\n            <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">element</span><span class=\"p\">).</span><span class=\"nx\">removeClass</span><span class=\"p\">(</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">disabledClass</span><span class=\"p\">);</span>\n            <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">coveoResultListClass</span><span class=\"p\">).</span><span class=\"nx\">coveo</span><span class=\"p\">(</span><span class=\"s1\">'disable'</span><span class=\"p\">);</span>\n            <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">.</span><span class=\"nx\">coveoResultListClass</span><span class=\"p\">).</span><span class=\"nx\">hide</span><span class=\"p\">();</span>\n            <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">resultList</span><span class=\"p\">).</span><span class=\"nx\">coveo</span><span class=\"p\">(</span><span class=\"s1\">'enable'</span><span class=\"p\">);</span>\n            <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">getBindings</span><span class=\"p\">().</span><span class=\"nx\">root</span><span class=\"p\">).</span><span class=\"nx\">coveo</span><span class=\"p\">(</span><span class=\"s1\">'executeQuery'</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"kr\">private</span> <span class=\"nx\">render</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n            <span class=\"kd\">var</span> <span class=\"nx\">icon</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">options</span><span class=\"p\">.</span><span class=\"nx\">icon</span><span class=\"p\">;</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">icon</span> <span class=\"o\">!=</span> <span class=\"s2\">\"\"</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">element</span><span class=\"p\">).</span><span class=\"nx\">prepend</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">iconTemplate</span><span class=\"p\">({</span><span class=\"na\">icon</span><span class=\"p\">:</span> <span class=\"nx\">icon</span><span class=\"p\">}));</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Ui</span><span class=\"p\">.</span><span class=\"nx\">CoveoJQuery</span><span class=\"p\">.</span><span class=\"nx\">registerAutoCreateComponent</span><span class=\"p\">(</span><span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Test</span><span class=\"p\">.</span><span class=\"nx\">ToggleResultList</span><span class=\"p\">);</span></code></pre>\n</figure>You may notice there’s now 3 more options of different types.\n<ol>\n\t<li>You can specify if the component is targetting the “default” result list. This means this will be the one shown by default, and the other will be hidden at the beginning (in the previous example, you would have to do it manually).</li>\n\t<li>You can specify the number of results of the result list. Normally, you would specify it on the whole Search Interface, but you may want to display a different number according to which result list is shown. We’re hooking on the <em>buildingQuery</em> event to change the number of results according to the options.</li>\n\t<li>You can specify an icon! Using an UnderscoreJS template, this is a simple commodity to render nicely an icon for your component.</li>\n</ol>\n<h2 id=\"wrap-it-up\">Wrap it up!</h2>\nNow, my real use case was to give the user the possibility to toggle between a “regular” view and a “tabular” view. My markup looks like this, where the TableResultList and MainResultList are two different elements containing the two different result lists templates :\n\n<figure class=\"highlight\">\n<div><span class=\"na\">class=</span><span class=\"s\">\"coveo-toggle-result-list-section\"</span><span class=\"nt\">&gt;</span> <span class=\"nt\"> <span class=\"na\">class=</span><span class=\"s\">\"CoveoToggleResultList\"</span> <span class=\"na\">data-result-list=</span><span class=\"s\">\"#TableResultList\"</span> <span class=\"na\">data-number-of-results=</span><span class=\"s\">\"50\"</span> <span class=\"na\">data-icon=</span><span class=\"s\">\"table-result-list\"</span><span class=\"nt\">&gt;</span> <span class=\"nt\"> <span class=\"na\">class=</span><span class=\"s\">\"CoveoToggleResultList\"</span> <span class=\"na\">data-result-list=</span><span class=\"s\">\"#MainResultList\"</span> <span class=\"na\">data-default-result-list=</span><span class=\"s\">\"true\"</span> <span class=\"na\">data-icon=</span><span class=\"s\">\"default-result-list\"</span><span class=\"nt\">&gt;</span> </span></span></div>\n</figure><em>If you wonder, it is located just under the search box in a typical JS UI search page</em>.\n\nAnd the visual result looks just like this:\n\n<img src=\"https//developers.coveo.com/images/20150419/toggleresultlist1.jpg\" alt=\"image\" />\n<img src=\"https//developers.coveo.com/images/20150419/toggleresultlist2.jpg\" alt=\"image\" />\n\nThanks a lot for reading! :D\n\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "31",
                "id": "1981",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1980",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1979",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "4e156f0fb8d850568f9f0949df855b80",
                "id": "1978",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/04/19/creating-js-ui-component-typescript/",
                "id": "1977",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "TypeScript": {
                    "description": "",
                    "parent": 0,
                    "post_count": 2,
                    "ID": 25138290,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:typescript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:typescript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "typescript",
                    "name": "TypeScript"
                },
                "JS UI": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 325663090,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:js-ui",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:js-ui/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "js-ui",
                    "name": "JS UI"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "TypeScript": {
                    "description": "",
                    "post_count": 3,
                    "ID": 25138290,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typescript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:typescript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "typescript",
                    "name": "TypeScript"
                },
                "Programming": {
                    "description": "",
                    "post_count": 6,
                    "ID": 196,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:programming/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "programming",
                    "name": "Programming"
                },
                "javascript": {
                    "description": "",
                    "post_count": 7,
                    "ID": 457,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:javascript/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "javascript",
                    "name": "javascript"
                },
                "jsui": {
                    "description": "",
                    "post_count": 3,
                    "ID": 69235323,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jsui",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jsui/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "jsui",
                    "name": "jsui"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/04/19/creating-a-new-js-ui-component-in-typescript/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-04-19T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "creating-a-new-js-ui-component-in-typescript",
        "categories": {
            "TypeScript": {
                "description": "",
                "parent": 0,
                "post_count": 2,
                "ID": 25138290,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:typescript",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:typescript/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "typescript",
                "name": "TypeScript"
            },
            "JS UI": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 325663090,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:js-ui",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:js-ui/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "js-ui",
                "name": "JS UI"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T21:27:03+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/31",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/31/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/31/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/31/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/04/09/coveo-support-behind-the-scenes/",
        "title": "Coveo Support Behind the Scenes",
        "short_URL": "http://wp.me/p7VTrW-w",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "45725e89a37e49b80c6d3dc28d58aefc",
        "ID": 32,
        "content": "<p>Hello everyone, my name is Eric Savoie and I am a product specialist here at Coveo since July 2014. I was the second product specialist hired to specialize in supporting our Coveo for Salesforce product.\nThrough the months, I have come to realize that support in the cloud is very different from “conventional” support here at Coveo. For this post, I originally wanted to focus on the main differences between what we call Platform support and Cloud support but I realized that many out there would not be able to relate to those differences without an introduction to the product specialist’s reality.\nSo here is an overview of how the communication between support and the client looks like at Coveo.</p>\n\n<!-- more -->\n\n<p>It might help some of you understand what happens between the different interactions we have through a case opened in the community.\nBefore we start, I would like to mention that the support department at Coveo is not a call center. The reason for this is because we are selling our solution to enterprises (B2B) and not to individuals, which means that the end user will almost never contact us directly.\nIndividual problems will be assessed by their system administrator (typically the IT department). When the system administrator is in need of support, he contacts us so we can bring in our expertise. Now, let’s start by the beginning shall we?</p>\n\n<p>When a system administrator (referred to as client for the rest of this post) has a problem he cannot troubleshoot using our <a href=\"http://onlinehelp.coveo.com/en/ces/7.0/\">documentation</a>, his best option is to open a case through our <a href=\"https://coveocommunity.force.com/customers/login\">community</a>.\nI feel you may already have some questions, let’s answer them right now:</p>\n\n<h4 id=\"why-should-i-open-a-case-instead-of-calling-directly\">Why should I open a case instead of calling directly?</h4>\n\n<p>Because Coveo is a very complex software platform, a product specialist will rarely be able to troubleshoot an issue on the spot. Most of the time, he will need to search through the documentation or consult an expert on a specific part of the software.\nAlso, he will most likely need lots of additional information that cannot be easily transmitted over the phone. A case allows us to track the progress on an issue more efficiently and to use it as documentation for future problems.\nThis is why all our efforts are concentrated on managing the community as efficiently as possible. When a client opens a case in the community, a first response will most of the time be given the same day.\nAlso, when opening a case through the customer portal, a client will be suggested knowledge base articles as he types in the title of the case. This is made possible by using our own product and querying the index as the client types.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/20150331/caseCreationSearch.png\" alt=\"Case Creation Search\" /></p>\n\n<h4 id=\"when-is-it-a-good-idea-to-use-the-phone-then\">When is it a good idea to use the phone then?</h4>\n\n<p>The phone is very useful in the case of an emergency, especially when we are outside of business hours, which are between 6:00 and 18:00 EST. When calling over the phone off-hours, the client has to leave a voicemail.\nA best practice would be to open a case prior to calling support and to mention the case number in the voicemail. That way, the product specialist can immediately have access to the necessary information and start his investigation right away.\nIt’s also easier to track the history of the issue through a case. When a voicemail is left, a member of the support team is immediately notified, will listen to it and contact the client as soon as possible.\nAgain, if a case is open, a meeting invitation can be sent through it and contact with the client can be established sooner.</p>\n\n<p>In case of an emergency, a client should always call our department after creating a case. That way, he can raise the flag on the particular issue that demands our immediate attention. Otherwise, the case will be treated according to the priority we assign it.\nAssigning priority to a case can only be done using the information contained within the case. This is why the more information we have in the description, the better we will be able to respond appropriately.</p>\n\n<h2 id=\"submitting-the-right-information\">Submitting the right information</h2>\n\n<p>Right off the bat, here is some information that any product specialist likes to see when he is assigned a new case.</p>\n\n<p><strong>Subject:</strong> A subject should mention what the issue is about without getting into details. For example: “[NameOfTheError] when performing [ThisSpecificAction]” would be a very good subject for a new case, given the brackets are adequately replaced.</p>\n\n<p><strong>Description:</strong> A description is best based on the actual facts about what is happening at what moment rather than on anyone’s interpretation of the problem. Basically, we should have enough details in here to be able to reproduce the issue on our end.\nAs many expressions may vary from one person to another, a screenshot is often the best way to let the product specialist know where the error occurs and what it looks like. It’s better to take all the screen and bring the attention of the reader to specific parts using basic drawing tools than to take a screenshot that is too specific and cuts away the context.</p>\n\n<p><strong>Back-End version and build number:</strong> Since many issues are corrected in each of our bi-monthly builds, it’s very likely that a client may be experiencing an issue that has been corrected in later builds.\nOf course, the best advice I could give any Coveo user would be to always update to the latest version. However, when we are dealing with an old build, we know it might be a good idea to see if the issue was assessed in recent builds.\nKnowing this information from the start can prevent a distracted product specialist from repeating an investigation that was previously made, or prevent an experienced one from having to ask the build number in his very first reply.</p>\n\n<p><strong>System level:</strong> If the issue is occurring on a test server, it will not be assigned the same priority as the one occurring on a production server. The sooner we know on what kind of server it’s occurring the sooner we can set our priorities straight and prevent any bad surprises for everyone.</p>\n\n<p><strong>Product:</strong> In the case creation page, there is a field called “Product”. This field should be filled with the product from which the issue is stemming. This information will determine to which team the case will go and will greatly affect the way we manage it. It will also allow a faster dispatch of the case to the right product specialist.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/20150331/caseProductInfo.png\" alt=\"Case Product Information\" /></p>\n\n<h2 id=\"new-case-in-the-console\">New case in the console</h2>\n\n<p>Upon receiving a case, we dispatch it to the appropriate team within the support department. There is one team for each line of business: Coveo Enterprise Search, Coveo for Sitecore and Coveo for Salesforce/Cloud.</p>\n\n<p>Some pieces of information are asked on a regular basis. The config.txt file, located in the “CES7/config” folder contains all the information about the configurations made in the Coveo Administration Tool.\nWe must often verify this in order to determine if the issue could stem from the way Coveo is configured. The logs are also a valuable piece of information for us, they are located in the “CES7Log” folder.\nThey contain all the information about what operations were performed by the service (System logs), what was modified in the index (Index logs) and what was queried (Queries logs). This is why in most cases a product specialist will ask you to send certain types of logs and your configuration very early on.\nWhen we can’t figure out the cause of the issue with the Coveo logs, there may have been something caught by the Windows logs. These logs can be found in the “Event Viewer”.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/20150331/whatsupdoc.jpg\" alt=\"&quot;What's up doc?&quot;\" /></p>\n\n<p>To end on a lighter note, we could easily use the analogy that we are “Coveo doctors”.</p>\n\n<p>Just like a doctor will evaluate symptoms in the body and associate it with a disease or infection, we must associate the symptoms in the software with a bug or misconfiguration.</p>\n\n<p>Just like a doctor may only have to prescribe a certain pill, our solution may only be to check a certain box or add a parameter. However, you want to use the right pill so, you have to be sure you found the right problem or you might end up creating another one in the end.</p>\n\n<p>Just like a doctor may have to enter his patient into a long treatment, we may have to change a lot of settings, fix some bugs in the software and monitor the progression of the issue. And just like with a doctor, clients prefer solving their own problem without having to go to us.</p>\n\n<p>This is something every support department should understand. The client very much prefers not having to resort to calling for your aid. Not because he doesn’t trust or is dissatisfied with the service but because he simply prefers solving his problems himself.\nThis is why we are working on giving our customers the right tools for the right job when they need them. Using our awesome search application, we are able to query our documentation while the client types in his problem, which gives him a chance to find the right information before having to contact us.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "32",
                "id": "1991",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1990",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1989",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "15ef14318de15fb8e334c0a52e398a0c",
                "id": "1988",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/04/09/coveoSupportBehindTheScenes/",
                "id": "1987",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/04/09/coveo-support-behind-the-scenes/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-04-09T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "coveo-support-behind-the-scenes",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2015-04-09T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/32",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/32/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/32/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/32/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/03/25/browser-strangelove/",
        "title": "Browser strangelove",
        "short_URL": "http://wp.me/p7VTrW-x",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "0b7b81b9ff9723040f78fad40f695dd3",
        "ID": 33,
        "content": "<p><img src=\"http//onlinehelp.coveo.com/images/20150325/1.jpg\" alt=\"Post main image. Image source : Wikipedia.org\" /></p>\n\n<p>Not too long ago, a customer opened a case about the troubles he had loading an Office file from a search results page. The file was on his workstation. From his browser, he clicked on the open link to access the local file, only to get an error message.\nCurious about this issue, I ran a few tests on a virtual machine with indexed local files, just like the customer did on his side before opening the case.</p>\n\n<!-- more -->\n\n<p>Test one</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>Typing File:///C:/test/test.jpg on the address bar of IE11.\n</code></pre>\n</div>\n\n<p>Test two</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>&lt;img src=File:///C:testtest.jpg /&gt; in an html file loaded locally on the machine.\n</code></pre>\n</div>\n\n<p>Test three</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>&lt;img src=File:///C:testtest.jpg /&gt; in an html file hosted on a distant server.\n</code></pre>\n</div>\n\n<p>Test four</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>&lt;img src=File:///C:testtest.jpg /&gt; in an html file on a network shared folder.\n</code></pre>\n</div>\n\n<p>While the two first tests successfully displayed the image, the last two didn’t show anything, it was like the line was not even in the html file.\nBy opening the browser’s console, I saw, for both failed attempts, an error message saying “Not allowed to load local resource”.\nInteresting fact, the console was the only place where I could see any indication that there was even an attempt to load the local JPEG image. The web page did not show the classic “file unavailable” icon, there was no dialog box, and no mention on the browser’s status bar, like you could expect to see when a pop-up page is blocked.\nUnlike for pop-up pages, the browser won’t allow access to local files, it will just ignore the instruction.</p>\n\n<p>But why?</p>\n\n<p>I had to call a developer to find out more about this…</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/20150325/2.jpg\" alt=\"A photo of me, calling a developer. Image source : Wikipedia.org\" /></p>\n\n<p>The developer confirmed that opening a local file from the DIP is performed in a different way. “javascript:window.external.OpenDesktopConnectorUri()” is a javascript call from the Internet Explorer browser embedded in the DIP to a .NET method implemented in the DIP itself. This mechanism is not possible from a standalone browser. This call to the DIP is for working around security restrictions imposed by browsers. Those security restrictions differ from one browser to another (e.g. Chrome vs. IE), and even differ from one version of IE to another, the compatibility view settings, etc.\nI later found out that you could bypass the browser’s security by completely disabling the Internet Explorer Local Machine Zone Lockdown, which is like tearing down a whole wall of your house to get all the groceries inside in one trip, but that’s another story.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/20150325/3.jpg\" alt=\"Slim Pickins riding a falling bomb with his classic IE logo. Image source : Wikipedia.org\" /></p>\n\n<p>Let’s just say that, in the end, if you want to make sure that all your files can be opened through a web browser without sacrificing security, you can host your documents on a cloud based solution.\nFor any content on your local computer, the Desktop Integration Package is still your best bet.</p>\n\n<p><a href=\"http://onlinehelp.coveo.com/en/CES/7.0/User/Desktop_Integration_Package.htm\">Further reading about The desktop integration package.</a></p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "33",
                "id": "2001",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2000",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1999",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "053947efa578070d1bf8dee6467b1d7c",
                "id": "1998",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/03/25/browserVSDIP/",
                "id": "1997",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/03/25/browser-strangelove/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-03-25T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "browser-strangelove",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2015-03-25T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/33",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/33/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/33/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/33/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/03/23/rating-a-search-result-customizing-search-results-ranking-and-ranking-functions/",
        "title": "Rating a Search Result, Customizing Search Results Ranking and Ranking Functions",
        "short_URL": "http://wp.me/p7VTrW-y",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "e6fd07608345e362fd5a367496661033",
        "ID": 34,
        "content": "<h2 id=\"rating-a-search-result\">Rating a Search Result</h2>\n\n<h3 id=\"what-is-the-advantage-of-rating-a-search-result\">What is the advantage of rating a search result</h3>\n\n<p>Rating a search result is useful when you find that its automatic ranking in the current query is not appropriate from your point of view or that of your group. \nThis immediately changes its position in the search results page. You or other members of your group also benefit from this corrected rating the next time the same query is performed.</p>\n\n<p>It’s important that you understand the difference between “Personal appreciation” and “Collaborative rating”</p>\n\n<!-- more -->\n\n<h3 id=\"personal-appreciation\">Personal appreciation</h3>\n\n<p>Personal appreciation is a score that you, as a user, can assign to a document or item to reflect your perception of its relevance to the query. By rating a search result on a 1 to 3 yellow stars scale<img src=\"http//onlinehelp.coveo.com/images/FullYellowStars.png\" alt=\"Full Yellow Stars\" />\nyou can influence the search result ranking. The Coveo Platform uses your personal appreciation to immediately modify the ranking of a search result and to calculate its collaborative rating.</p>\n\n<h3 id=\"collaborative-rating\">Collaborative rating</h3>\n\n<p>The Coveo Platform calculates collaborative rating as an average of the personal appreciations given to each document by users of the same group and uses it as one of the ranking factors. \nBecause this process is performed independently for each user group, it adapts ranking to different types of users.\nCollaborative rating appears as a 1 to 3 gray stars<img src=\"http//onlinehelp.coveo.com/images/Twogreystarsscore.png\" alt=\"Two grey stars score\" />score (two stars by default when nobody has ranked the search result) under each search result.</p>\n\n<p>The screenshot below shows a document with a two stars collaborative rating. Under ranking weights tab, you can see that collaborative rating weight is 412 and the total weight of the document is 6834.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/CollaborativeratingDefault.png\" alt=\"Collaborative rating default\" /></p>\n\n<p>If I decide to give a three yellow stars personal appreciation to the document (just by clicking on the third star), now the collaborative rating weight is 500 and the total weight of the document is now 6922.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/Collaborativerating3yellowstars.png\" alt=\"Collaborative rating 3 yellow stars\" /></p>\n\n<p>So when I perform a “tax” query, this document will be ranked higher on my search result page compared to the search result page of the other user from my group. \nThe reason behind that is that personal appreciation prevails on collaborative rating meaning that, once you rate a search result, its collaborative rating score is no longer taken into account.</p>\n\n<p>Now If I asked to someone from the same group as mine to check the collaborative rating of the same document, it will be higher than what it was before I gave it a personal appreciation.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/Collaborativerating2greystar.png\" alt=\"Collaborative rating 2 grey star\" /></p>\n\n<p>Note: You need to wait until the next update of document rating in order for your rating to take effect.\nIf you go to <code class=\"highlighter-rouge\">CES Admin tool –&gt; Configuration –&gt; Schedules –&gt; System</code>\nCheck the schedule of “Update Document Rating”, by default it’s once a week, but you can change it as you like.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/UpdateDocumentRating.png\" alt=\"Update Document Rating\" /></p>\n\n<h3 id=\"where-should-i-go-to-createmodify-group-for-collaborative-rating\">Where should I go to create/Modify group for Collaborative rating</h3>\n\n<p>You can do it from in the <code class=\"highlighter-rouge\">CES Admin tool –&gt; Index –&gt; Ranking –&gt; Collaborative Rating</code>.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/ModifygroupforCollaborativerating.png\" alt=\"Modify group for Collaborative rating\" /></p>\n\n<h3 id=\"removing-or-modifying-a-personal-appreciation\">Removing or modifying a personal appreciation</h3>\n\n<p>To delete your personal appreciation for a document, right-click on the yellow stars:\nThe document rank is immediately adjusted according to the automatic relevance score in the search results list and the appropriate number of gray stars<img src=\"http//onlinehelp.coveo.com/images/Twogreystarsscore.png\" alt=\"Two grey stars score\" /> appears.</p>\n\n<p>To modify your personal appreciation:\nClick the appropriate yellow star to assign your personal appreciation. \nFor example, if the personal appreciation was three yellow stars<img src=\"http//onlinehelp.coveo.com/images/FullYellowStars.png\" alt=\"Full Yellow Stars\" />,click on the first yellow star and your personal appreciation will be one<img src=\"http//onlinehelp.coveo.com/images/OneYellowStars.png\" alt=\"One Yellow Stars\" />  star instead of three.</p>\n\n<h2 id=\"customizing-search-results-ranking\">Customizing Search Results Ranking</h2>\n\n<p>CES uses 18 ranking factors divided into 6 types to calculate the relevance score of documents. CES natively uses pre-tuned ranking weights that are likely to be satisfying most of the time. \nNevertheless, fine-tuning these factors can sometimes increase accuracy, especially for specific situations. \nClick <a href=\"http://onlinehelp.coveo.com/en/CES/7.0/Administrator/Customizing_Search_Results_Ranking.htm\">here</a> for more information.</p>\n\n<h2 id=\"ranking-functions\">Ranking Functions</h2>\n\n<p>Ranking functions are like <a href=\"https://developers.coveo.com/display/SearchREST/Query+Function\">Query Functions</a>, but the result of the computation is used to influence ranking, just like Query Ranking Expressions. \nThe computation is done in the ranking’s first phase, meaning that all documents will have a chance to receive the ranking runction’s boosts.\nIf NormalizeWeight is enabled, the entire value domain of the function will be taken into account to give a normalized boost ranking from 0 to 600. \nBy enabling ranking information, it is possible to see the actual boost value provided by the functions, for each document.</p>\n\n<p>For more information about ranking functions look at the <a href=\"https://developers.coveo.com/display/SearchREST/Ranking+Function\">Ranking function documentation</a></p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "34",
                "id": "2011",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2010",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2009",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "e82f90a9a1c5e1099734b646c48a1121",
                "id": "2008",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/03/23/Rating-a-Search-Result-Customizing-Search-Results-Ranking-and-Ranking-Functions/",
                "id": "2007",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/03/23/rating-a-search-result-customizing-search-results-ranking-and-ranking-functions/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-03-23T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "rating-a-search-result-customizing-search-results-ranking-and-ranking-functions",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2015-03-23T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/34",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/34/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/34/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/34/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/03/19/the-rise-of-design-in-a-tech-company/",
        "title": "The Rise of Design in a Tech Company",
        "short_URL": "http://wp.me/p7VTrW-z",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "ef5017c0fad68dc3f86cd03caf50325f",
        "ID": 35,
        "content": "<h2 id=\"the-beginning\">The Beginning</h2>\n<p>Coveo was founded in 2005 by a team spun off from Copernic, a search software company, to focus specifically on the enterprise search market. In the past, Coveo had a graphic/web designer but nobody to work with the developers on the product itself. The real interface design journey began in 2011, when they needed help from someone with those skills on a project for a client. Because I had worked with a Coveo employee the year before on a personal business project, he mentioned my name and they called me.</p>\n\n<!-- more -->\n\n<p>People at Coveo love trying new things, but they had never worked with an interface designer. We gave it a try with a contract to redesign Coveo Faceted Navigation. In conjunction with the product managers, we tried a lot of new approaches and designs. They found the value of having someone to do wireframes, mockups, and prototypes. Luckily for me, I was hired full time!</p>\n\n<figure>\n  <img src=\"http//careers.coveo.com/images/20150319/evolutionfacet.png\" />\n  <figcaption>Evolution of the faceted navigation through the years</figcaption>\n</figure>\n\n<h2 id=\"the-growth\">The Growth</h2>\n<p>Over the last three years, the company has grown very fast. Coveo needed to hire new people in every team of the enterprise (<a href=\"http://careers.coveo.com/positions-research#poste\">and we still need more people</a>). They hired <a href=\"http://ca.linkedin.com/in/ebouchard/fr\">Eric Bouchard</a>, a former member of Copernic, as VP of UX and Design to work alongside me. Eric was asked to consolidate the vision of the product and the website. After Eric came onboard, we built a new team to manage the website. We hired a web designer, <a href=\"http://ca.linkedin.com/pub/alexandre-drouin/21/a53/b12\">Alexandre Drouin</a>, that sometimes worked with me.</p>\n\n<p>After some time, it seemed impossible for me to work on every design project for the product. Working with Eric, we began looking for another interface designer. We work a lot with developers, and we needed a geek (I am one myself!) who was interested in knowing how things work behind the interface because simplifying the Coveo product for users is quite a challenge. After meeting a few candidates, we found <a href=\"http://ca.linkedin.com/in/chabert/fr\">Benoit Chabert</a>, who brought with him some skills in motion design. After he joined, we had a little more time to work on some <a href=\"/2014/12/08/making-an-online-community/\">projects initiated by the team</a>.</p>\n\n<figure>\n  <img src=\"http//careers.coveo.com/images/20150319/infographic_2014.png\" />\n  <figcaption>Infographic by Alexandre Drouin</figcaption>\n</figure>\n\n<h2 id=\"the-present\">The Present</h2>\n<p>Time has passed, and we have refined the way our team works with R&amp;D developers, professional services agents, and product managers. We adapt our workflow to best meet these people’s own jobs so we can deliver the best possible design for them. More technically, we have also been refining our tools and trying out various new design software, such as <a href=\"http://bohemiancoding.com/sketch/\">Sketch 3</a>. It is in Coveo’s interest that its employees work with good tools that they enjoy, so we are free to test and try new ones.</p>\n\n<p>As we have accrued more credibility within the company, we have had the freedom to create our own projects and use our own ideas to improve the products in original ways. Interface design at Coveo is a team effort, and everyone has a chance to contribute. As we create designs, we share them openly with the team (mainly R&amp;D), try them and test them. This allows us to iterate on the designs and improve them.</p>\n\n<h2 id=\"the-future\">The Future</h2>\n<p>Over time, the majority of Coveo’s teams and projects have become design-aware. The Professional Services team rapidly took over Benoit’s time and he works with them to integrate the product in clients’ environments. I am fully occupied by the cloud version of our product. In 2015, we want to put more effort into mobility and other cool projects that we need a designer to work on.</p>\n\n<p>Because we still need more people to work with us to make Coveo a better product, we are currently looking for a new member for the UX team. We are also interested in hiring resourceful interns who want to work in interface design. We worked on a project with students from the Multimedia Design master’s degree program at Laval University in the past, and we would love to work on a project like that again.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "35",
                "id": "2021",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2020",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2019",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "c560e33cf199a248a51e588406754b00",
                "id": "2018",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/03/19/the-rise-of-design-in-a-tech-company/",
                "id": "2017",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/03/19/the-rise-of-design-in-a-tech-company/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-03-19T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "the-rise-of-design-in-a-tech-company",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2015-03-19T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/35",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/35/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/35/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/35/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/03/06/react-flux-amp-coveo-undefined/",
        "title": "React + Flux &amp; Coveo !== undefined",
        "short_URL": "http://wp.me/p7VTrW-A",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "bc5b3c6091cf6cb329766853ab6ab8aa",
        "ID": 36,
        "content": "<p>React and Flux are evolving technologies and using them with Coveo was a\nno brainer for me to get started on them. Here is my take on creating a searchable\ndashboard with those technologies.</p>\n\n<p>The code of the demo is available on <a href=\"https://github.com/Coveo/react-flux-coveo-experiments\">Github</a></p>\n\n<!-- more -->\n\n<h2 id=\"another-js-framework-another-day\">Another JS Framework, another Day</h2>\n\n<p>JavaScript is an evolving language and new JavaScript frameworks are born and die everyday (if you are a purist there is always <a href=\"http://vanilla-js.com/\">VanillaJS</a> available for you).</p>\n\n<p>As an experiment, I wanted to build an interface to Coveo’s  search engine around <a href=\"https://facebook.github.io/react/\">React</a> web application framework. While learning <a href=\"https://facebook.github.io/react/\">React</a>, I went all-in and used <a href=\"http://facebook.github.io/flux/\">Flux</a>, a simple web application architecture popularized at the same time as React, which is somewhat different from the traditionnal MVC pattern libraries like <a href=\"http://marionettejs.com/\">Backbone / Marionette</a>.</p>\n\n<p>This project also got me to experiment with other technologies like SVG icons, instead of plain or font icons, and also with the new FlexBox. I also leaned towards ECMAScript 6 for this project and the new features coming in are game-changing (template string, classes, const, arrow function).</p>\n\n<p><em>For more information about ES6 <a href=\"https://babeljs.io/docs/learn-es6/\">look at the new features</a></em></p>\n\n<h2 id=\"the-dashboard\">The dashboard</h2>\n\n<p>So let’s try to build a searchable dashboard from what we can get out of our\nsample documents put together in our<code class=\"highlighter-rouge\">sampledocumentation</code> org.</p>\n\n<p>I used the <a href=\"http://yeoman.io/\">Yeoman</a> generator <a href=\"https://github.com/banderson/generator-flux-react\">generator-flux-react</a> to\nbootstrap a React template application.</p>\n\n<h2 id=\"react\">React</h2>\n\n<p>React is an interesting technology initially developped by Facebook and then released about a year ago into the wild.</p>\n\n<p>It provides a virtual DOM (document object model), a JavaScript representation of the DOM which we can manipulate freely. What React does under the hood is that when a components <code class=\"highlighter-rouge\">render</code> method is called, it perfoms a diff between the previous render Virtual DOM and the new one, and then only modifies the real browser DOM.</p>\n\n<p>React also provides a nice extension to JavaScript called <a href=\"https://facebook.github.io/react/docs/jsx-in-depth.html\">JSX</a> which really eases the use of React. Using <a href=\"https://facebook.github.io/react/docs/jsx-in-depth.html\">JSX</a> is like using html directly into JavaScript.</p>\n\n<p>Here is an example of what JSX can do:</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>var Nav;\n// Input (JSX):\nvar app = &lt;Nav color=\"blue\" /&gt;;\n// Output (JS):\nvar app = React.createElement(Nav, {color:\"blue\"});\n</code></pre>\n</div>\n\n<p>The main elements of React are components which are somewhat like views (in the MVC pattern). They are virtual representations of DOM components with their own <code class=\"highlighter-rouge\">state</code>, <code class=\"highlighter-rouge\">properties</code> (which can also be event handlers) and <code class=\"highlighter-rouge\">lifecycle</code>.</p>\n\n<p>For more information about React, see <a href=\"https://facebook.github.io/react/\">their website</a>. If you want some React help, there is a nice <a href=\"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi\">chrome dev tool addon</a>. Many users have experimented with React and a lot of information is available on the web. I found <a href=\"http://aeflash.com/2015-02/react-tips-and-best-practices.html\">this page</a> which is a nice wrap-up of tips and tricks about React.</p>\n\n<h2 id=\"flux-architecture\">Flux Architecture</h2>\n\n<p>What better way to describe flux than what the projects website tells us?</p>\n\n<blockquote>\n  <p>Flux is the application architecture that Facebook uses for building\nclient-side web applications. It complements React’s composable view\ncomponents by utilizing a unidirectional data flow. It’s more of a pattern\nrather than a formal framework, and you can start using Flux immediately\nwithout a lot of new code.\n<a href=\"http://facebook.github.io/flux\">http://facebook.github.io/flux</a></p>\n</blockquote>\n\n<p>The notable thing about flux is the one-way flow of information, which is quite simpler than the MVC model. Of course. you can still use MVC with React, but I decided to use the whole package to form an opinion about it.</p>\n\n<h3 id=\"the-flux-architecture\">The flux architecture</h3>\n\n<p>The flux architecture is simple and easy to implement.</p>\n\n<p><img src=\"https//github.com/images/fluxdiagram.svg\" alt=\"Flux architecture diagram\" /></p>\n\n<ul>\n  <li>Views: (basically those are react components)\n    <ul>\n      <li>controller-view: The view that handles state</li>\n      <li>Other views: Those are more like components and gets passed parameters by properties</li>\n    </ul>\n  </li>\n  <li>Stores: The ‘M’ in MVC,</li>\n  <li>Dispatcher: An event dispatcher that receives <code class=\"highlighter-rouge\">Actions</code> and passes them to\n  stores</li>\n  <li>Actions/ActionCreators: Actions are the event objects  of Flux, some utility functions\n  called <code class=\"highlighter-rouge\">ActionCreators</code> are built to help the publishing of those events</li>\n</ul>\n\n<p>So it works like this :</p>\n\n<ul>\n  <li>Stores subscribes to dispatcher and listens on certain events</li>\n  <li>Views subscribes to stores and update their state based on the stores state</li>\n  <li>Views/Stores or other things trigger actions and the flow starts,\n<code class=\"highlighter-rouge\">Action -&gt; Dispatcher -&gt; Stores -&gt; View</code></li>\n</ul>\n\n<p><a href=\"http://facebook.github.io/flux/\">The flux documentation</a> is extensive and there are a lot of example\nout there to help you get started with this new architecture of building a web\napplication.</p>\n\n<h2 id=\"the-demo\">The demo</h2>\n\n<p>Here are the most notable things that were built :</p>\n\n<p><em>Stores:</em></p>\n\n<ul>\n  <li>QueryStore : Stores the query and makes the call to the Coveo Search API</li>\n  <li>FacetStore : Stores the different queried facets</li>\n  <li>ResultStore : Stores results returned</li>\n  <li>CategoryStore : Stores results IDs by some category (a field in the result).\n  It is used in the CategoryResultList to display the results from a new\n  perspective.</li>\n</ul>\n\n<p><em>Components/Views</em>:</p>\n\n<ul>\n  <li>App : The main application state, a view-controller in React’s terms. Subscribes\n  to stores and updates the underlying</li>\n  <li>SearchField: A nice expendable searchbox (bypasses the HTML <code class=\"highlighter-rouge\">input</code> element fixed\n  width)</li>\n  <li>Stats : A simple sparkline bargraph that is built from a facet</li>\n  <li>CategoryResultList : A result list that displays results grouped by some field\n  the CategoryStore helps this list.</li>\n</ul>\n\n<p><img src=\"https//github.com/images/reactfluxcoveodemo.jpg\" alt=\"demo screenshot\" /></p>\n\n<p>Hope you’ll like reading/seeing the code that’s out there in that demo!</p>\n\n<p>The code of the demo is available on <a href=\"https://github.com/Coveo/react-flux-coveo-experiments\">Github</a></p>\n\n<p>Writing this article helped me understand React &amp; Flux much more. I had to revisit the documentation, which is really helpful, and this made me see and understand what I had missed or what was still foggy from my previous visits.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "36",
                "id": "2031",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2030",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2029",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "ce410aecc84bec8329ce4f671a6ed6b5",
                "id": "2028",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/03/06/react-flux-and-coveo/",
                "id": "2027",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/03/06/react-flux-amp-coveo-undefined/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-03-06T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "react-flux-amp-coveo-undefined",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2015-03-06T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/36",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/36/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/36/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/36/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/02/10/the-tale-of-a-programming-contest-part-2/",
        "title": "The tale of a programming contest - Part 2",
        "short_URL": "http://wp.me/p7VTrW-B",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "d3181151d8ab5659da13f720df72f705",
        "ID": 37,
        "content": "<h1 id=\"fifth-edition\">Fifth edition</h1>\n\n<p>After months of preparation, the fifth edition of Coveo Blitz was held on January 10th 2015. This year, we held the <a href=\"/2014/12/22/the-tale-of-a-programming-contest\">contest</a> in our offices for the third time. A total of 54 students from 7 universities and colleges participated in the fifth edition of our annual contest. Let me tell you a bit on how it went.</p>\n\n<!-- more -->\n\n<h1 id=\"contest-creation-process\">Contest creation process</h1>\n\n<p>We started working on Coveo Blitz 2015 in late March of 2014. The first step was to find people interested in working on the preparation of the contest among our employees. This was the easy part for Coveo, probably due to the fact that it’s not the first edition and people know what they are getting into.</p>\n\n<p>Then, probably the most important task was to find the challenges the students would have to work on during the contest. This is where I always push to get the challenges more <em>challenging</em>. I admit, I’m the one who always thinks it’s going to be too easy. But boy, was I wrong this year!</p>\n\n<p>After a few meetings of brainstorming on ideas around what we do (search engine, usage analytics, …), we decided to ask the students to provide an analytics engine on top of nearly 1 billion log lines of Apache web server. We wanted the engine to provide small metrics such as count by error code or access by country for a specific date range. But we also added a few more complex metrics such as the average response time, the max response time, and others.</p>\n\n<p>The contest was divided in three different parts:</p>\n\n<ol>\n  <li>\n    <p><strong>GLORIOUS MAPREDUCER:</strong> a MapReduce component that crunches the data</p>\n  </li>\n  <li>\n    <p><strong>AWESOME SERVICE:</strong> a server that reads the crunched data and answers the queries our contest platform will submit</p>\n  </li>\n  <li>\n    <p><strong>MYSTERIOUS USER INTERFACE:</strong> an intuitive user interface that even the boss (that’s me!) can use</p>\n  </li>\n</ol>\n\n<p>A team of ~15 persons was assembled to build all the components, documentation, test data and a bunch of other stuff required for the contest. It took a lot of hours, lunches, dinners, coffees and stubbornness to get it all ready for the day of the contest, and we succeeded.</p>\n\n<p>Every year, we somehow underestimate the cost of modifying our contest platform for the new challenges. This year, adding support for Amazon Elastic MapReduce (EMR) proved to be more complex than we anticipated.</p>\n\n<p><img src=\"/images/20150210/image_0.jpg\" alt=\"\" /></p>\n\n<p>Part of the Coveo team working on preparing the contest in late December</p>\n\n<h1 id=\"d-day\">D-Day</h1>\n\n<p>We can already feel the vibe the Friday before the contest. The team is working on finalizing the latest details, such as setting up the R&amp;D area for the contestants and the ops team, setting up the projectors or simply rewriting the scoring algorithms. After turning off the lights for the night, it’s time for the traditional <a href=\"https://www.google.ca/search?tbm=isch&amp;q=poutine#tbm=isch&amp;q=poutine+-vladimir\">Poutine</a>, just before bed.</p>\n\n<p>The day of the contest starts early for the team (and most likely for the students as well). I got at the office at around 6:10 am and there was already a team of student preparing their gears for the contest - probably a record. But others decide to be late - usually veterans - and find original places to hang their coats:</p>\n\n<p><img src=\"/images/20150210/image_1.png\" alt=\"\" /></p>\n\n<p>We like to think this is one of the best contest for students in the area and we are working hard to keep it that way. One of the things we did this year, with the help of our Amazon account executive who sponsored the event (thanks James), was to provide a $50 credit for Amazon AWS to all participating teams. The idea was to provide as much tools as possible for the teams to be ready for the contest. One month prior the contest we sent an email to all teams with the credit and a text explaining they should use the credit to try out EMR, not mine Bitcoin!</p>\n\n<p>During the presentation of the contest and its multiple challenges, I asked how many people played with EMR and a total of 6 persons raised their hands - ouch! I think the students underestimated the complexity of Coveo Blitz and the fact that being prepared helps. And we underestimated the fact that students are students.</p>\n\n<h1 id=\"when-the-programming-contest-is-too-complex\">When the programming contest is too complex</h1>\n\n<p>The day was divided into 5 evaluation steps, with each of them adding complexity. Remember I said 1 billion log lines, well, we kind of lowered that number because of the time it took to crunch that amount of data. The first evaluation consisted of only 100 log lines and up to 12.5 million log lines for the last evaluation.</p>\n\n<p>After the first two evaluations, not a single team had points! The Coveo team was running around helping the students with the GLORIOUS MAPREDUCER - we even did a quick crash course to help them.</p>\n\n<p>We were still hoping for some teams to make points on the third evaluation as we were monitoring the teams testing their algorithms with the test data provided. But after the third round when no one scored a single point we had to readjust the contest.</p>\n\n<p>We gave the source code of the GLORIOUS MAPREDUCER for the first evaluation round to everyone. We also decided to rerun the first three rounds in place of the fourth one. We finally got a team scoring points on our super Mario Kart dashboard. You can see it <a href=\"https://www.youtube.com/watch?v=PGXPVTMHcGs#t=260\">here</a><a href=\"https://www.youtube.com/watch?v=PGXPVTMHcGs#t=260\">.</a></p>\n\n<p>I admit it, the contest was too complex this year and I am certainly a bit responsible for this.</p>\n\n<h1 id=\"some-tricks-for-next-year\">Some tricks for next year</h1>\n\n<p>I have a few advices for people who wants to participate in Coveo Blitz, or any other contest.</p>\n\n<ol>\n  <li>\n    <p><strong>Be prepared</strong><br />\nEvery year we can see the difference between the teams that spent time to prepare for the contest compared to the ones who did not. The ones who prepared already have the tools they want to used installed on their computer and pretty much know the role of each people in the team. That makes a big difference when you have a limited time to complete the challenges.  You’ll have a lot more fun that way, I’m sure!</p>\n  </li>\n  <li>\n    <p><strong>Know the basics</strong><br />\nEvery year we see students choosing the language they want to use, installing the featured components and reading the how-to. Again, this goes to #1, be prepared. You should know your tools and languages if you want to perform in the contest.</p>\n  </li>\n  <li>\n    <p><strong>Have someone dedicated to the UI</strong><br />\nCoveo Blitz always has a user interface part and every year is the same - most teams do not put the required efforts to have nice user interfaces. It still counts for 25% of the points, at least it was in the last editions of Coveo Blitz.</p>\n  </li>\n  <li>\n    <p><strong>Set small, incremental goals during the day</strong><br />\nThis is crucial to achieving results. You’re a team and you need to sync often, and make sure you’re all working in the same direction.</p>\n  </li>\n</ol>\n\n<p>During the first edition of Coveo Blitz, a team used agile methodology with the help of a cooking timer. Every 30 minutes they would do a scrum. That was really impressive and worked pretty well - highly suggested!</p>\n\n<p><img src=\"/images/20150210/image_2.jpg\" alt=\"\" /></p>\n\n<h1 id=\"wrap-up\">Wrap up</h1>\n\n<p>We learned a lot again this year and we’ll use this added experience to prepare something awesome for Coveo Blitz 2016. We hope to see you there, well prepared! :)</p>\n\n<p>I really liked the T-shirts for this year’s edition, one of the perk for participating at Coveo Blitz!</p>\n\n<p><img src=\"/images/20150210/image_3.jpg\" alt=\"\" /></p>\n\n<p>One last note, the code for Coveo Blitz 2015 solution is available on <a href=\"https://github.com/Coveo/Blitz-2015\">GitHub</a>.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "37",
                "id": "2041",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2040",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2039",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "44eabb8e0d927496437994cee70b7fa9",
                "id": "2038",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/02/10/the-tale-of-a-programming-contest-part2/",
                "id": "2037",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/02/10/the-tale-of-a-programming-contest-part-2/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-02-10T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "the-tale-of-a-programming-contest-part-2",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2015-02-10T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/37",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/37/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/37/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/37/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/01/27/an-award-worthy-office-visit/",
        "title": "An award-worthy office visit!",
        "short_URL": "http://wp.me/p7VTrW-C",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "08ce4e6cfac28d5ea38543a00749048b",
        "ID": 38,
        "content": "<p>##The Why</p>\n\n<p>We lately had <a href=\"http://www.maps360.ca/\">Maps360</a> come to our office in Quebec to take pictures for Google Business View. Why you might ask.</p>\n\n<p>We are a software company. We sell a series of bits ordered in a very specific manner. Our clients buy those well aligned bits and, to some extent, couldn’t care less about our offices.</p>\n\n<p>But we also sell to another audience. Our bits aligner. We are constantly hiring in a competitive industry where there are far more jobs than people to fill them. We are a good place to work, with good conditions, and with a nice office. That last part is something that we thought we could leverage in our recruiting, and Google Business View comes in as the best option to show this off.</p>\n\n<!-- more -->\n\n<p><img src=\"http//www.maps360.ca/images/201501/virtual_visit_0.jpg\" alt=\"\" /></p>\n\n<p>##The How</p>\n\n<p>With the help of Guy Couture from Maps360, we started preparing the whole visit. We quickly settled on using Morphsuits to have a common theme. A few days and 600$ later, we had our order in; almost all colors and a Power Ranger (but that was for the Christmas party; that’s another story).</p>\n\n<p><img src=\"http//www.maps360.ca/images/201501/virtual_visit_1.jpg\" alt=\"\" /></p>\n\n<p>From there we planned as many ideas as we could. There were some things we wanted to showcase. Donuts (a classic here whenever you break the build, leave your machine unlocked or else), our bean bags, our projectors and TVs, our shower, our swordsmanship skills, etc.</p>\n\n<p>And then we got anything we could squeeze in as weirdfunnywut.</p>\n\n<p>We also had our UX people prepare some slides with some of our perks and teams so we could have them on different screens throughout the shooting.</p>\n\n<p><img src=\"http//www.maps360.ca/images/201501/virtual_visit_2.jpg\" alt=\"\" /></p>\n\n<p>We improvised many things on the spot, but the preparation enabled us to have many things at hand; some big teddy bear, epic nerf gun battle, pictures of morphsuiters that couldn’t make it, a distributed-resource locking debate, a twister game, snow saucer to slide in the stairs with, alouette!</p>\n\n<p>And then came the shooting time. We had our morph bunch, and many off camera helpers ensuring that the next shot was ready. If not, this would have taken much much more than the 4 hours it took. But, with great direction from our shooter and the team, after multiple awkward positions (my ribcage still hurts from that twister shot!), realising that the guy doing Movember should not be wearing the white suit, it was a wrap!</p>\n\n<p>##The Outcome</p>\n\n<p>So. Did it pay off?</p>\n\n<p>It’s probably the most fun we had with our clothes on… (hey, those count as clothes, right?). Seriously, we had a blast. So even if we weren’t going to hear a lot afterwards, we can still remember many things that happened “or did not happen” on that evening.</p>\n\n<p><img src=\"http//www.maps360.ca/images/201501/virtual_visit_3.jpg\" alt=\"\" /></p>\n\n<p>But we did hear about it. After it was online, it took less than a week for candidates to start mentioning it. So, kudos to everybody involved.</p>\n\n<p>We certainly hope people will get even more interested to come work with us once they see our great offices - but we’ll know the impact in the coming months.</p>\n\n<p>##The Bonus</p>\n\n<p>What we didn’t expect was to have gained more global visibility. Google gives a few awards each year for their Business View. Guy Couture from Maps360 submitted our visit for the 2014 awards.</p>\n\n<p><strong>We Won! - Most Creative Tour Award of 2014 - North America.</strong></p>\n\n<p>Awesome! We couldn’t have asked for anything more!</p>\n\n<p><img src=\"http//www.maps360.ca/images/201501/virtual_visit_4.jpg\" alt=\"\" /></p>\n\n<p>##It’s a Wrap</p>\n\n<p>I want to say some major thanks. To the awesome team that help prepare, stage and shoot the whole project. It took a large group of people over many hours. It would not have been possible to do it without you guys. And by far and large, the result would not have been this nice if it was not for all the fun we had. Also, to Guy from Maps360 that helped shape this vision from the start, and did a fantastic job of juggling with our multiple ideas to bring the whole thing into a sharp result.</p>\n\n<p><img src=\"http//www.maps360.ca/images/201501/virtual_visit_5.jpg\" alt=\"\" /></p>\n\n<p>Looking back, there is only one shot I think we should have added. A shot where Blond, Blue, Brown, Orange, Pink and White would be around a table debating the meaning of Madonna’s Like A Virgin.</p>\n\n<p>With this being said, <a href=\"http://bit.ly/CoveoHQvisit\">go take a look</a>!</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "38",
                "id": "2051",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2050",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2049",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "3788db3b3bdb3957ab9a77effc1be7cf",
                "id": "2048",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/01/27/an-award-worthy-office-visit/",
                "id": "2047",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/01/27/an-award-worthy-office-visit/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-01-27T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "an-award-worthy-office-visit",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2015-01-27T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/38",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/38/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/38/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/38/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/01/23/guidelines-to-configure-effective-hardware-for-coveo/",
        "title": "Guidelines to configure effective hardware for Coveo",
        "short_URL": "http://wp.me/p7VTrW-D",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "68180ef8a8266f98c1d80d0c7230461d",
        "ID": 39,
        "content": "<p>When configuring your servers, there are some aspects to consider. Depending on your needs, you will need to implement the most beneficial scalability model. We will be highlighting some options that can guide you along.\nThe first aspect to consider is the amount of documents. You see, as the number of documents in your index increases, hosting the index on a single hard disk can often lead to size and performance limitations. In this scenario, consider adding a slice. The slice is in effect, a separate physical storage location for a section of the master index and distributes the index content, hence increasing available space. It’s possible that it can potentially speed indexing once you have passed a certain threshold, so add a slice when it’s needed. A slice can potentially contain up to 40million documents, and since one Coveo server can typically host up to two slices, it would then contain up to 80 million documents evenly distributed between the two. Potential problem averted!</p>\n\n<!-- more -->\n\n<p>Memory and CPU levels, are other factors to keep in mind. To put it simply, the greater number of CPU cores, the better. In what exact situation should I add CPU cores, you might ask? Well, when you find your users entering queries with numerous terms, exact match operators or wildcard characters, high number of documents to convert and if you use the OCR module these operations are CPU dependent. So to give an example of a server with an index size between 5 to 20 million documents:</p>\n\n<p><img src=\"/images/ServerIndexSizeSample.png\" alt=\"Server Index Size Example\" /></p>\n\n<p>Of course, the number of needed cores increase with the size of the index. Primarily, we are including physical memory in the equation, since indexing uses a lot of physical memory to pre-compute mappings. Querying your index also requires a great deal of physical memory for caching. Other examples are facet, string or numerical fields that have to be basically pre-loaded in memory. Simply put, the more memory CES has at its disposal, the faster the data in your index can be queried, your end users cannot query data in an unwritten transaction. The transaction is a unit of data that CES keeps in its memory until it’s written in the index, so if CES has 32GB of RAM available, it can commit larger transactions than if it had only 16GB. \nOften times, the need to ensure that queries and query loads can always be maintained and served will necessitate the addition of Mirrors as part of your infrastructure. This will essentially share the query bearing load and in the event that your main server is unavailable for any reason, you can immediately point the query serving server to the mirror, problem solved! Simply put, if the number of end user queries will potentially slow down your master server, add a mirror! Here’s a quick pic to illustrate how a mirror can help in a network that is well load-balanced:</p>\n\n<p><img src=\"/images/LoadBalancer.png\" alt=\"load Balancer\" /></p>\n\n<p>So you we can see, the master server is supported by two mirror servers already having slices configured. And for a fuller picture, check this out:</p>\n\n<p><img src=\"/images/IndexPipeline.png\" alt=\"Indexing Pipeline\" /></p>\n\n<p>Now, CES is of course designed to function properly as long as its host server meets the minimum hardware requirements. So disk selection is important. The index should be installed on a dedicated hard disk. As an example, if your index documents occupy 1TB in various repositories, with such a mix of content type, the index size could end up at 42% of the original documents size (420 GB). The size of the dedicated index hard disk should at the very least be 500GB. We also recommend at least 1GB of available space to install the CES software on the system hard disk. Low latency on your disk is also important both for indexing and querying speed.</p>\n\n<p>Another aspect that we’d like you to ponder, is the freshness of your index. This is also important to consider, giving that the index pipeline processing time may greatly vary depending on numerous factors such as the index size, the number of new documents to index at a given time, and the available resources on your Coveo Master and Mirror servers. Also, indexing can only go as fast as the crawled repository can feed us the documents. Hence, it’s possible that the bottleneck might not be CES-related.\n Near Real-Time indexing is a newer feature that improves the freshness of your index, thereby making new documents searchable faster. NRTI creates small temporary slices called subslices to receive new, changed, or deleted indexed documents. Because subslices are much smaller in size than a regular slice of a large index, their index pipeline processing is completed much faster, allowing to return queried documents they contain much faster. The feature kicks in by default when reaching a million documents. Look at the below table for recorded improvements:</p>\n\n<p><img src=\"/images/NrtiImprovements.png\" alt=\"NRTI\" /></p>\n\n<p>The table speaks for itself. Use NRTI at your leisure!\nA side note on this: When the Coveo server does not meet the requirements and large sources are rebuilt on top of a normal flow of new documents, the index pipeline processing time may prolong by a few days and enabling the NRTI feature will most likely not help because the server is lacking resources.\nSo normal recommended practices should be applied in other for this feature to be truly effective. This feature has been enabled by default since the CES build 7.0.7022. Since NRTI is an I/O intensive process, to achieve optimal performance, we recommend the addition of one dedicated disk for the NRTI files on each Coveo server that are serving queries and point to that disk, and as always, the dedicated disk specifications depend on the size of your index as we had previously illustrated. \nWith all these in mind, the Coveo support team is currently building a tool that will greatly aid you in determining on a case by case basis, what would be the best infrastructure to implement for CES to flourish. It promises to greatly help simply this potentially difficult task and avoid issues down the line. An upcoming blog will provide details.\nStay tuned!</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "39",
                "id": "2061",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2060",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2059",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "23da6c293798840203b92569bed29ffc",
                "id": "2058",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/01/23/Guidelines-to-configure-effective-hardware-for-Coveo/",
                "id": "2057",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/01/23/guidelines-to-configure-effective-hardware-for-coveo/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-01-23T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "guidelines-to-configure-effective-hardware-for-coveo",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2015-01-23T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/39",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/39/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/39/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/39/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2015/01/15/distributed-resource-locking-using-memcached-part-2/",
        "title": "Distributed resource locking using memcached - part 2",
        "short_URL": "http://wp.me/p7VTrW-E",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "e5773fd3a86a86d6e16ac63f1c3681cf",
        "ID": 40,
        "content": "<p>Following some strong reactions about <a href=\"http://source.coveo.com/2014/12/29/distributed-resource-locking/\">my last post</a> (that were caused, I believe, by a poor use of the word lock on my part), I decided to write a little follow up post to remedy the situation. \n<!-- more -->\nI will explain why what we wanted was to avoid duplicate work, not prevent it at all cost<sup id=\"fnref:footnote\"><a href=\"footnote\" class=\"footnote\">1</a></sup>.</p>\n\n<p>Let’s start by taking a look at the definition of a lock. <a href=\"http://en.wikipedia.org/wiki/Lock_(computer_science)\">Wikipedia</a> says :</p>\n\n<blockquote>\n  <p>In computer science, a lock is a synchronization mechanism for enforcing limits on access to a resource in an environment where there are many threads of execution. A lock is designed to enforce a mutual exclusion concurrency control policy.</p>\n</blockquote>\n\n<p>Locking resources using memcached respects the first part of that definition. It does enforce limits regarding access to a resource. The issue is that it does not respect the second part of the definition (which is kind of the important part of the definition). Mutual exclusion cannot be achieved using memcached because the information about the lock is not persistent, there could be synchronization problems when memcached in running on a cluster composed of multiple instances, lock state could be lost in case of network partition problems, etc. What would happen if, for instance, the Memcached server crashed or an entity held the lock for a long time and the cache entry expired? It would be as if the resource was never locked and concurrent operations on a critical section could (and, according to <a href=\"http://en.wikipedia.org/wiki/Murphy%27s_law\">Murphy’s law</a>, would)  happen. That kind of locking is called <a href=\"https://code.google.com/p/memcached/wiki/NewProgrammingTricks#Ghetto_central_locking\"><em>ghetto locking</em></a> by the fine people of Memcached. We could call it probabilistic locking or resource access control.</p>\n\n<p>This brings me to the second confusing point of my previous post : the use case I described was, well, not so well described. I will try to explain it better here. We use Amazon Redshift for our analytics application in which a lot of data that is rarely updated (some flag values are updated according to what was added after) is inserted. This data is exposed via an API and is then used to generate very customizable reports to help our customers improve their search experience. We encountered a problem called transaction cycles. These are caused by concurrent transactions touching multiple tables in a database. For example, a scheduled task updating table A based on data contained in table B, a process inserting events in the table B and an api query joining tables A and B. The transaction cycle would cause the queries to fail, which is quite problematic. Because of our fault tolerance mechanisms, the operations would eventually succeed : the scheduled task would be rescheduled later and the insertion would be retried immediately after a failure is detected. Redshift already does an amazing job managing concurrent write operations on his cluster, but if the timing was perfect, these transaction cycles could still happen. That is why we needed some external mechanisms to avoid falling into these annoying traps.</p>\n\n<p>We decided to go with <em>ghetto locking</em> because it met the needs I described in my original post (distributed, transparent to read operations, no deadlocks and short-lived locks). Also, we did not want to add another building block to our stack (which would have been required if we wanted persistent lock in a database, or using distributed synchronization  systems such as Zookeeper) as it necessarily introduces more risks. The <em>persistent lock in a database</em> would require an additional component to the application because database we use has strong limitations when it comes to locks. As a matter of fact, the only lock supported is an <a href=\"http://docs.aws.amazon.com/redshift/latest/dg/r_LOCK.html\">access exclusive lock</a> on a table. Also, from what we experienced with Redshift, numerous small queries on the database (which would have been required to check the locks states) had a negative impact on the overall performance of the cluster, making using a table to persist locks information undesirable.</p>\n\n<p>As I said in introduction, what we truly wanted to achieve was to <em>avoid duplicate work, not prevent it at all cost</em>. With this solution, we achieved exactly that. We moved from 2 or 3 transaction cycles per week to no transaction cycle since it reached the production environment.</p>\n<div class=\"footnotes\">\n  <ol>\n    <li id=\"fn:footnote\">\n      <p>Special thanks to M. Sean Cribbs for <a href=\"http://source.coveo.com/2014/12/29/distributed-resource-locking/#comment-1787329448\">this way of saying it</a> <a href=\"footnote\" class=\"reversefootnote\">&#8617;</a></p>\n    </li>\n  </ol>\n</div>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "40",
                "id": "2071",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "2070",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "2069",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "8114166d81bc7fcd10f147e2bc1f8228",
                "id": "2068",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2015/01/15/distributed-resource-locking-part2/",
                "id": "2067",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2015/01/15/distributed-resource-locking-using-memcached-part-2/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2015-01-15T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "distributed-resource-locking-using-memcached-part-2",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2015-01-15T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/40",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/40/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/40/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/40/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/12/29/distributed-resource-locking-using-memcached/",
        "title": "Distributed resource locking using memcached",
        "short_URL": "http://wp.me/p7VTrW-F",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "f953935936a284447f3763e97d964b2a",
        "ID": 41,
        "content": "<p><strong>Small update</strong>: Having noticed comments about this post on Twitter, I think it’s important to specify that the word “lock” might have been badly chosen here. It’s more of a best-effort thing to reduce the frequency of situations where certain operations would need to be retried. It’s perfectly fine if for any reason those still occur concurrently (indeed before there was no locking whatsoever). The only adverse effect would be slightly decreased performance for the querying user. So, kids, do not use this approach if you need real resource exclusion.</p>\n\n<p>As Coveo’s cloud usage analytics product matures, more and more events are logged every seconds and a lot more people are using the analytics dashboards from the cloud admin. That increased load is great and the usage analytics handles it easily, but there was one thing we did not see coming: transaction cycles in the database. They did not happen often, but this was still problematic as continuous increase in the load on the service only meant more transaction cycles. These cycles were the result of scheduled jobs running when insertion of new events and reporting queries occurred at the same time.</p>\n\n<!-- more -->\n\n<p>Amazon Redshift is already doing a pretty good job at <a href=\"http://docs.aws.amazon.com/redshift/latest/dg/c_Concurrent_writes.html\">handling concurrent operations on the cluster</a> but we needed a little more, so we decided to go with resource locking (where the resources are the different tables in the database). There are a lot of ways to implement such a solution, but we also had some constraints :</p>\n\n<ul>\n  <li>Our service is running on multiple instances, so we needed a distributed locking mechanism.</li>\n  <li>The resource locking had to be transparent to read operations (ie. no impact on reporting queries).</li>\n  <li>Deadlocks were not acceptable.</li>\n  <li>Locks had to have a short lifespan. We did not want to lock insertions and updates for an extended period of time.</li>\n</ul>\n\n<p>With these in mind, we quickly discarded some solutions like the <a href=\"http://docs.aws.amazon.com/redshift/latest/dg/r_LOCK.html\">LOCK</a> feature offered by Amazon Redshift because it impacted all queries, from the simple <code class=\"highlighter-rouge\">select 1;</code> to the complicated triple <code class=\"highlighter-rouge\">full outer join</code> of doom, without forgetting any inserts or updates.</p>\n\n<p>After consideration, we were left with two possible solutions :</p>\n\n<ul>\n  <li>Sharing locks using a cache service (in our case, a Memcached cluster provided by Amazon Elasticache)</li>\n  <li>Sharing locks using a table in the database</li>\n</ul>\n\n<p>We finally decided to go with the cache service, mainly because of the timeout capabilities that would allow us to easily circumvent the deadlock issue, better performance and it was much simpler to implement than the database option.</p>\n\n<p>Here is what it looks like :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MemcachedResourceLocker</span> <span class=\"kd\">implements</span> <span class=\"n\">ResourceLocker</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">CacheService</span> <span class=\"n\">resourceLockCache</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">resourceId</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">lockerId</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Duration</span> <span class=\"n\">lockDuration</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">MemcachedResourceLocker</span><span class=\"o\">(</span><span class=\"n\">CacheService</span> <span class=\"n\">resourceLockCache</span><span class=\"o\">,</span>\n                                   <span class=\"n\">String</span><span class=\"o\">[]</span> <span class=\"n\">resourceId</span><span class=\"o\">,</span>\n                                   <span class=\"n\">Duration</span> <span class=\"n\">lockDuration</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">resourceLockCache</span> <span class=\"o\">=</span> <span class=\"n\">resourceLockCache</span><span class=\"o\">;</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">resourceId</span> <span class=\"o\">=</span> <span class=\"n\">resourceId</span><span class=\"o\">;</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">lockDuration</span> <span class=\"o\">=</span> <span class=\"n\">lockDuration</span><span class=\"o\">;</span>\n        <span class=\"k\">try</span> <span class=\"o\">{</span>\n            <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">lockerId</span> <span class=\"o\">=</span> <span class=\"n\">InetAddress</span><span class=\"o\">.</span><span class=\"na\">getLocalHost</span><span class=\"o\">().</span><span class=\"na\">getHostName</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"s\">\"-\"</span> <span class=\"o\">+</span> <span class=\"n\">Thread</span><span class=\"o\">.</span><span class=\"na\">currentThread</span><span class=\"o\">().</span><span class=\"na\">getName</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"s\">\"-\"</span>\n                    <span class=\"o\">+</span> <span class=\"n\">DateTime</span><span class=\"o\">.</span><span class=\"na\">now</span><span class=\"o\">().</span><span class=\"na\">toString</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"n\">UnknownHostException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">lockerId</span> <span class=\"o\">=</span> <span class=\"s\">\"unknown_service_host\"</span> <span class=\"o\">+</span> <span class=\"s\">\"-\"</span> <span class=\"o\">+</span> <span class=\"n\">Thread</span><span class=\"o\">.</span><span class=\"na\">currentThread</span><span class=\"o\">().</span><span class=\"na\">getName</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"s\">\"-\"</span>\n                    <span class=\"o\">+</span> <span class=\"n\">DateTime</span><span class=\"o\">.</span><span class=\"na\">now</span><span class=\"o\">().</span><span class=\"na\">toString</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">lock</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"n\">CouldNotAcquireLockException</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">if</span> <span class=\"o\">(!</span><span class=\"n\">resourceLockCache</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"n\">RESOURCE_LOCK_CACHE_PREFIX</span><span class=\"o\">,</span> <span class=\"n\">resourceId</span><span class=\"o\">,</span> <span class=\"n\">lockerId</span><span class=\"o\">,</span> <span class=\"n\">lockDuration</span><span class=\"o\">.</span><span class=\"na\">toStandardSeconds</span><span class=\"o\">()</span>\n                                                                                                 <span class=\"o\">.</span><span class=\"na\">getSeconds</span><span class=\"o\">()))</span> <span class=\"o\">{</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"na\">debug</span><span class=\"o\">(</span><span class=\"s\">\"Could not acquire lock on resource '{}'. Someone else has it.\"</span><span class=\"o\">,</span> <span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"n\">resourceId</span><span class=\"o\">));</span>\n            <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nf\">CouldNotAcquireLockException</span><span class=\"o\">(</span><span class=\"n\">Arrays</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">(</span><span class=\"n\">resourceId</span><span class=\"o\">));</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">unlock</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n        <span class=\"n\">String</span> <span class=\"n\">currentLockerId</span> <span class=\"o\">=</span> <span class=\"n\">resourceLockCache</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">RESOURCE_LOCK_CACHE_PREFIX</span><span class=\"o\">,</span> <span class=\"n\">resourceId</span><span class=\"o\">,</span> <span class=\"n\">String</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">currentLockerId</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">currentLockerId</span><span class=\"o\">.</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">lockerId</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n            <span class=\"n\">resourceLockCache</span><span class=\"o\">.</span><span class=\"na\">delete</span><span class=\"o\">(</span><span class=\"n\">RESOURCE_LOCK_CACHE_PREFIX</span><span class=\"o\">,</span> <span class=\"n\">resourceId</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p><strong>Note:</strong> The <code class=\"highlighter-rouge\">ResourceLocker</code> interface was not included to keep the code to a minimum. It is a simple interface that includes the <code class=\"highlighter-rouge\">lock()</code> and <code class=\"highlighter-rouge\">unlock()</code> methods.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">RetryableLockResource</span> <span class=\"kd\">extends</span> <span class=\"n\">AbstractRetryableTask</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">ResourceLocker</span> <span class=\"n\">resourceLocker</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">RetryableLockResource</span><span class=\"o\">(</span><span class=\"n\">Duration</span> <span class=\"n\">delay</span><span class=\"o\">,</span>\n                                 <span class=\"kt\">int</span> <span class=\"n\">maxRetry</span><span class=\"o\">,</span>\n                                 <span class=\"n\">ResourceLocker</span> <span class=\"n\">resourceLocker</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"kd\">super</span><span class=\"o\">(</span><span class=\"n\">delay</span><span class=\"o\">,</span> <span class=\"n\">maxRetry</span><span class=\"o\">);</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">resourceLocker</span> <span class=\"o\">=</span> <span class=\"n\">resourceLocker</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">call</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"n\">RetryableTaskException</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">try</span> <span class=\"o\">{</span>\n            <span class=\"n\">resourceLocker</span><span class=\"o\">.</span><span class=\"na\">lock</span><span class=\"o\">();</span>\n        <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"n\">CouldNotAcquireLockException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nf\">RetryableTaskException</span><span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kt\">void</span> <span class=\"nf\">tryLock</span><span class=\"o\">(</span><span class=\"n\">ResourceLocker</span> <span class=\"n\">resourceLocker</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">RetryableTaskFailedException</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">new</span> <span class=\"nf\">RetryableLockResource</span><span class=\"o\">(</span><span class=\"n\">resourceLocker</span><span class=\"o\">).</span><span class=\"na\">execute</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">abstract</span> <span class=\"kd\">class</span> <span class=\"nc\">AbstractRetryableTask</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Duration</span> <span class=\"n\">delay</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">maxRetry</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">AbstractRetryableTask</span><span class=\"o\">(</span><span class=\"n\">Duration</span> <span class=\"n\">delay</span><span class=\"o\">,</span>\n                                 <span class=\"kt\">int</span> <span class=\"n\">maxRetry</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">delay</span> <span class=\"o\">=</span> <span class=\"n\">delay</span><span class=\"o\">;</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">maxRetry</span> <span class=\"o\">=</span> <span class=\"n\">maxRetry</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">protected</span> <span class=\"kd\">abstract</span> <span class=\"kt\">void</span> <span class=\"nf\">call</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"n\">RetryableTaskException</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">protected</span> <span class=\"kt\">boolean</span> <span class=\"nf\">handle</span><span class=\"o\">(</span><span class=\"n\">RetryableTaskException</span> <span class=\"n\">e</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"n\">RetryableTaskFailedException</span>\n    <span class=\"o\">{</span>\n        <span class=\"kt\">boolean</span> <span class=\"n\">exit</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">iteration</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">;</span> <span class=\"o\">!</span><span class=\"n\">exit</span><span class=\"o\">;</span> <span class=\"n\">iteration</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"k\">try</span> <span class=\"o\">{</span>\n                <span class=\"n\">call</span><span class=\"o\">();</span>\n                <span class=\"n\">exit</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"o\">;</span>\n            <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"n\">RetryableTaskException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">iteration</span> <span class=\"o\">&gt;=</span> <span class=\"n\">maxRetry</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                    <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nf\">RetryableTaskFailedException</span><span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">);</span>\n                <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n                    <span class=\"n\">exit</span> <span class=\"o\">=</span> <span class=\"n\">handle</span><span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">);</span>\n                    <span class=\"k\">if</span> <span class=\"o\">(!</span><span class=\"n\">exit</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                        <span class=\"n\">ThreadUtils</span><span class=\"o\">.</span><span class=\"na\">sleepNoThrow</span><span class=\"o\">(</span><span class=\"n\">delay</span><span class=\"o\">);</span>\n                    <span class=\"o\">}</span>\n                <span class=\"o\">}</span>\n            <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>Here is an example of how we use it in an actual “real code” situation in a scheduled job (scheduling is done with <a href=\"http://quartz-scheduler.org/\">Quartz</a>:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"n\">JobExecutionContext</span> <span class=\"n\">context</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">JobExecutionException</span>\n<span class=\"o\">{</span>\n    <span class=\"n\">String</span> <span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"na\">getJobDetail</span><span class=\"o\">().</span><span class=\"na\">getJobDataMap</span><span class=\"o\">().</span><span class=\"na\">getString</span><span class=\"o\">(</span><span class=\"n\">SchedulerWrapper</span><span class=\"o\">.</span><span class=\"na\">ACCOUNT_NAME_PARAM</span><span class=\"o\">);</span>\n    <span class=\"n\">ResourceLocker</span> <span class=\"n\">allEventsLocker</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n    <span class=\"k\">try</span> <span class=\"o\">{</span>\n        <span class=\"n\">allEventsLocker</span> <span class=\"o\">=</span> <span class=\"n\">resourceLockerFactory</span><span class=\"o\">.</span><span class=\"na\">createLockerForAllEvents</span><span class=\"o\">(</span><span class=\"n\">account</span><span class=\"o\">);</span>\n        <span class=\"n\">RetryableLockResource</span><span class=\"o\">.</span><span class=\"na\">tryLock</span><span class=\"o\">(</span><span class=\"n\">allEventsLocker</span><span class=\"o\">);</span>\n\n        <span class=\"n\">dal</span><span class=\"o\">.</span><span class=\"na\">updateAllEvents</span><span class=\"o\">(</span><span class=\"n\">account</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"n\">RuntimeException</span> <span class=\"o\">|</span> <span class=\"n\">RetryableTaskFailedException</span> <span class=\"o\">|</span> <span class=\"n\">FailedToRetrieveDimensionException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nf\">JobExecutionException</span><span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span> <span class=\"k\">finally</span> <span class=\"o\">{</span>\n        <span class=\"n\">RetryableUnlockResource</span><span class=\"o\">.</span><span class=\"na\">tryUnlock</span><span class=\"o\">(</span><span class=\"n\">allEventsLocker</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>This solution works great. Since we implemented our distributed resource locking using Memcached, we increased the number of scheduled jobs and the load on the service has more than doubled, but we have not seen any transaction cycle or performance degradation, which is nice.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "41",
                "id": "1685",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1684",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1683",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "7175246db75f2e165e2452e19b426b85",
                "id": "1682",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/12/29/distributed-resource-locking/",
                "id": "1681",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/12/29/distributed-resource-locking-using-memcached/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-12-29T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "distributed-resource-locking-using-memcached",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-12-29T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/41",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/41/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/41/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/41/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/12/22/the-tale-of-a-programming-contest/",
        "title": "The tale of a programming contest",
        "short_URL": "http://wp.me/p7VTrW-G",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "b9ed76cce0a2788cd4aa4dcdf4209497",
        "ID": 42,
        "content": "<h2 id=\"it-all-began\">It all began…</h2>\n\n<p>It is in September of 2010 that the idea of doing a programming contest came to life. Coveo was a startup with highly passionate employees, ready to grow and bring more passionate people on board.</p>\n\n<p>Did I say passionate?</p>\n\n<p>Our primary source for hiring talented and passionate - I know, but it’s really important to us - software developers was (and still is) universities. We bring students on board during an internship and show them what it’s like to work with us - the challenges, the environment, the people, … - it usually works really well and we end up hiring almost 33% of the interns.</p>\n\n<!-- more -->\n\n<p>Back in 2010, Coveo was little known in Quebec City, let alone Montreal or Sherbrooke. We had to find a way to spread the word on how Coveo is such a great place to work at.</p>\n\n<p>I was at the coffee machine when Jean (our CFO) came in and asked:</p>\n\n<p><em>Jean</em>: How’s hiring doing?</p>\n\n<p><em>Marc</em>: It’s been better. Our last internship posting had only got 4 applicants and we will be lucky to get 1 intern.</p>\n\n<p><em>Jean</em>:\tWhat can we do to get more applicants, to get our name out there?</p>\n\n<p><em>Marc</em>:\t*joking* We should do a programming contest for students!</p>\n\n<p><em>Jean</em>: What a great idea - let’s do that!</p>\n\n<p>Ok, that was not totally a joke, but not totally serious either! The idea came from a programming contest held in Quebec City called “<a href=\"http://bivouacurbain.com\">Le Bivouac Urbain</a>”, where contestants had to create a full video game in 48 hours.</p>\n\n<h2 id=\"defining-the-contest\">Defining the contest</h2>\n\n<p>The decision to do a programming contest was made - yeah, that’s really all it took to start the project! But we still needed to do a lot of things to make it a reality and the most important one was defining the challenge.</p>\n\n<p>But first, let’s talk about the name, because this contest needed a name. Since I’m not that good to come up with names, I asked all the people from our R&amp;D team (27 people back then) for suggestions. Here’s a few I received:</p>\n\n<ul>\n  <li>\n    <p>Programmathon Coveo</p>\n  </li>\n  <li>\n    <p>Coveo 8 hours of Search</p>\n  </li>\n  <li>\n    <p>Coveo Search Blitz</p>\n  </li>\n  <li>\n    <p>CoveoPalooza</p>\n  </li>\n  <li>\n    <p>Coveo Challenge</p>\n  </li>\n</ul>\n\n<p>No surprise here, we decided on <strong><em>Coveo Blitz</em></strong>.</p>\n\n<p>Now, back to the challenge itself. At first, we floated the idea of doing a 24 hour contest where students had to create the best web site they could based on the criteria we provided. We brainstormed around that idea to finally change it completely and tie it a lot more to our business.</p>\n\n<p>We wanted people to know that creating a search engine that works is challenging. Here’s what was going to be the first project for Coveo Blitz:</p>\n\n<ul>\n  <li>\n    <p>Create a search engine to index 45,000 documents (48,223 documents to be exact)</p>\n  </li>\n  <li>\n    <p>Support boolean operators and exact phrases</p>\n  </li>\n  <li>\n    <p>Rank documents by relevance</p>\n  </li>\n  <li>\n    <p>Create a web page to display the results</p>\n  </li>\n</ul>\n\n<p>The final score would be based on several criteria: performance, code quality, quality &amp; design of the UI, and of course, results precision. The correction would be manual, meaning that Coveo’s staff would evaluate the different aspects of the project.</p>\n\n<h2 id=\"preparing-the-day\">Preparing the day</h2>\n\n<p>Our objective was to get 5 or 6 teams of 4 students. Based on the limited success we had attracting students, achieving that goal would definitely help spreading the word about Coveo. We reached to the different universities &amp; colleges to promote the contest. We received more than 12 registrations in a few weeks! We were really excited, but at the same time, …</p>\n\n<p>That was a problem, since we initially wanted to host the contest in our office, but we didn’t have a room large enough for all these people + staff! We fixed this through a fantastic collaboration with Laval University that offered to rent us a classroom. We decided to hold the contest there. We also limited the contest to 8 teams and asked all team to provide a small demo project to classify. I evaluated all those projects and selected the 8 teams.</p>\n\n<p>One of the teams presented an algorithm to compute stuff I can’t remember, but I sure remember that they put a nice image while the computation was running.</p>\n\n<p><img src=\"http//bivouacurbain.com/images/20141222/image_0.gif\" alt=\"\" /></p>\n\n<p><strong><em>Image presented while the algorithm was computing</em></strong></p>\n\n<p>We wanted the contest to be one of the best experiences the students would have in such an event so that they would have a highly positive opinion of Coveo and its people. First thing we did was to take care of feeding the participants, partly dressing them and teasing them with the prize for the winning team. Here’s a list of things we provided:</p>\n\n<ul>\n  <li>\n    <p>Free drinks (juice, water, soda and of course coffee and Red Bull)</p>\n  </li>\n  <li>\n    <p>Free food (breakfast, lunch, dinner, snacks)</p>\n  </li>\n  <li>\n    <p>Free beer - yeah, for real!</p>\n  </li>\n  <li>\n    <p>4 Alienware laptops for the winners</p>\n  </li>\n  <li>\n    <p>T-Shirts with nice quotes - that’s also kind of a publicity for us afterwards as shown in this tweet</p>\n  </li>\n</ul>\n\n<p><img src=\"http//bivouacurbain.com/images/20141222/image_1.png\" alt=\"\" /></p>\n\n<p><strong><em>One participant tweeting about his Coveo Blitz T-Shirt</em></strong></p>\n\n<p><img src=\"http//bivouacurbain.com/images/20141222/image_2.jpg\" alt=\"\" /></p>\n\n<p><strong><em>Coveo Blitz 2011 T-Shirt (</em></strong><strong><em>Black for students we hired</em></strong><strong><em>, blue for staff &amp; white for students)</em></strong></p>\n\n<p>Since the contest was based on performance, we wanted to make sure that everyone had the same chance at winning the contest. We decided to provide laptops for all contestants - that meant 32 laptops to buy, configure, move, install, move back and sell! I know, I know! At the time, it seemed like a good idea, but in hindsight, that was a bad idea and definitely to put in the don’ts list!</p>\n\n<p>We spent a number of hours preparing the room the day before the contest and cleaning it after the contest. We brought a router and quite a few number of network cables &amp; electric extensions.</p>\n\n<p>A lot of people at Coveo got excited by Coveo Blitz and helped make it a reality. I can’t stress enough that without their help, Coveo Blitz would not be possible. And that is true, year after year, so THANK YOU!</p>\n\n<p><img src=\"http//bivouacurbain.com/images/20141222/image_3.jpg\" alt=\"\" /></p>\n\n<p><strong><em>The router and cables</em></strong></p>\n\n<p><img src=\"http//bivouacurbain.com/images/20141222/image_4.jpg\" alt=\"\" /></p>\n\n<p><strong><em>The room and participants</em></strong></p>\n\n<h2 id=\"lessons-learned\">Lessons learned</h2>\n\n<p>We learned several things by doing all these editions of Coveo Blitz. Here are the most important ones, at least, for me!</p>\n\n<h3 id=\"you-are-never-too-prepared\">You are never too prepared</h3>\n\n<p>We are now at our fifth edition of Coveo Blitz and I can tell you that after every edition, we told ourselves that the following year, we’ll be more prepared. We start working on the next edition several months in advance, often 8-10 months before, but you need more than enough time to succeed. Because as says the <a href=\"http://en.wikipedia.org/wiki/Parkinson%27s_law\">Parkinson’s law</a>: <em>work expands so as to fill the time available for its completion</em>.</p>\n\n<p>I suggest to take the preparation of a contest like any other project and set milestones. Make sure you respect those, otherwise, you may end up like this on the day of the contest!</p>\n\n<p><img src=\"http//bivouacurbain.com/images/20141222/image_5.png\" alt=\"\" /></p>\n\n<p><strong><em>Coveo’s version of Grumpy Cat</em></strong></p>\n\n<h3 id=\"favor-automatic-correction-over-manual\">Favor automatic correction over manual</h3>\n\n<p>We planned about 60 minutes to correct the team solutions in the first edition and it took more than 3 hours! Also, automatic correction opens a lot of opportunities - see below.</p>\n\n<h3 id=\"multiple-evaluation-runs-with-dynamic-scoringdashboard\">Multiple evaluation runs with dynamic scoring/dashboard</h3>\n\n<p>If you ask anyone who participated to Coveo Blitz, starting in 2013, what was the highlights, I bet they will tell you “dashboard &amp; scoring”.</p>\n\n<p>Being able to do multiple evaluation runs with a live dashboard displaying real-time score as the run is executed is just awesome! It’s like watching a sport game, everyone is standing and cheering!</p>\n\n<p><img src=\"http//bivouacurbain.com/images/20141222/image_6.jpg\" alt=\"\" /></p>\n\n<p><strong><em>An evaluation run at Coveo Blitz 2013</em></strong></p>\n\n<h3 id=\"host-the-event-in-your-office\">Host the event in your office</h3>\n\n<p>If possible, hosting the event in your office is a plus. At least, it was for us.</p>\n\n<ul>\n  <li>\n    <p>It shows the candidates your work environment and gives them a feel of what it might be like to work there - although we’re not always working on 8 hours deadline!</p>\n  </li>\n  <li>\n    <p>It is easier to setup since all the infrastructure is there - network, desk, chairs, …</p>\n  </li>\n  <li>\n    <p>You can prepare in advance since it’s in your office</p>\n  </li>\n</ul>\n\n<h3 id=\"have-people-bring-their-own-hardware\">Have people bring their own hardware</h3>\n\n<p>I said it earlier, do not supply the computers for the people. Have them bring their own laptops, desktops or mainframe, whatever they want. When you do the evaluation, use a method that is not based on their hardware to compute the score. For example, we now use Amazon Web Services to run the contest and do evaluation runs, which we can somewhat control (by machine type, for example).</p>\n\n<h3 id=\"innovate\">Innovate</h3>\n\n<p>We tried to innovate at every edition of Coveo Blitz by modifying the challenges but also by modifying the infrastructure - dashboards or achievements, for example.</p>\n\n<p>We also have a few surprises for the 2015 edition and it started when we launched the web site. \nWe added a small challenge to register to the contest. Students had to create a small REST API that replied a proper answer along with all the information about the people in their team. We had fun creating the error messages for wrong response, had you noticed them? :)</p>\n\n<p><img src=\"http//bivouacurbain.com/images/20141222/image_7.png\" alt=\"\" /></p>\n\n<p><strong><em>One of the teams built a server on a Nintendo DS - How cool is that?!</em></strong></p>\n\n<h3 id=\"free-food--beer\">Free food &amp; beer</h3>\n\n<p>I think that giving people free food &amp; drink during the contest is a plus. We also have free beer to celebrate at the end of the day, and a tower of pizzas. Everyone appreciates this and I bet the Coveo team appreciates the beer even more than the students: celebrating the success of the contest after having worked on this single day for the last several months is a must!</p>\n\n<p>This is also the moment where everyone can talk together and where we make contact with the students. We can talk about what the work is like at Coveo and also talk about current opportunities. Remember that the #1 reason for the contest is recruiting.</p>\n\n<p><img src=\"http//bivouacurbain.com/images/20141222/image_8.jpg\" alt=\"\" /></p>\n\n<p><strong><em>The pizzas at Coveo Blitz 2013!</em></strong></p>\n\n<h2 id=\"fun-facts-of-the-2012-edition\">Fun facts of the 2012 edition</h2>\n\n<ul>\n  <li>\n    <p>48 participants</p>\n  </li>\n  <li>\n    <p>+30 Coveo employees worked on this edition</p>\n  </li>\n  <li>\n    <p>+600 hours invested by Coveo employees</p>\n  </li>\n  <li>\n    <p>166 tweets related to this edition</p>\n  </li>\n  <li>\n    <p>64 t-shirts</p>\n  </li>\n  <li>\n    <p>35 tables &amp; + 60 chairs</p>\n  </li>\n  <li>\n    <p>657 meters of network cable</p>\n  </li>\n  <li>\n    <p>171 meters of electric extension</p>\n  </li>\n  <li>\n    <p>16 network switches</p>\n  </li>\n  <li>\n    <p>15 power bar &amp; 3 UPS</p>\n  </li>\n  <li>\n    <p>1 wifi network</p>\n  </li>\n  <li>\n    <p>60 laptops &amp; 2 desktop</p>\n  </li>\n  <li>\n    <p>1 daskeyboard ultimate</p>\n  </li>\n  <li>\n    <p>1 whiteboard</p>\n  </li>\n  <li>\n    <p>4,900 lines of code for the Coveo platform</p>\n  </li>\n  <li>\n    <p>A 7GB database containing 10,715 products</p>\n  </li>\n  <li>\n    <p>Around 200 evaluation runs</p>\n  </li>\n  <li>\n    <p>10 x 12 donuts</p>\n  </li>\n  <li>\n    <p>6 x 12 muffins</p>\n  </li>\n  <li>\n    <p>50 litres of coffee</p>\n  </li>\n  <li>\n    <p>60 litres of juice, water &amp; soda + 7 litres of Red Bull</p>\n  </li>\n  <li>\n    <p>100+ sandwiches</p>\n  </li>\n  <li>\n    <p>200 slices of pizza</p>\n  </li>\n  <li>\n    <p>407 pictures</p>\n  </li>\n  <li>\n    <p>2 hours of video</p>\n  </li>\n</ul>\n\n<h2 id=\"in-conclusion\">In conclusion</h2>\n\n<p>The first edition was a success and we got a few people hired out of that edition. We also got the word out, if not about how cool Coveo was, at least how free the beer was at the contest! :)</p>\n\n<p>We hired more than 35 people in R&amp;D since the first edition of Coveo Blitz. Out of those 35, 13 participated in Coveo Blitz and 32 learned about Coveo from Coveo Blitz. Another impact is the number of interns we get in R&amp;D every year. In the summer of 2013 we welcomed 19 interns and 15 in the summer 2014. All of them participated or heard from friends about Coveo Blitz.</p>\n\n<p>If you know me, you know I really like <a href=\"http://dilbert.com/strips/comic/2009-03-07/\">pie charts</a>, so let’s try to represent these numbers in a nice pie chart!</p>\n\n<p><img src=\"http//bivouacurbain.com/images/20141222/image_9.png\" alt=\"\" /></p>\n\n<p>When I see that most people I have in interviews know about Coveo Blitz or probably heard about Coveo from Blitz, I tell myself: “Mission accomplished!”, and, I’m always happy to see Coveo Blitz mentioned in someone’s resume <em>contest</em> section.</p>\n\n<p>In just a few weeks, it’s going to be the fifth edition of Coveo Blitz. The Coveo team can’t wait to live that. Several people have been working on the project since last March - yes, it takes time to build the challenges, test them and create all these nice dashboards!</p>\n\n<p>I hope to see you then!</p>\n\n<p><img src=\"http//bivouacurbain.com/images/20141222/image_10.png\" alt=\"\" /></p>\n\n<p><strong><em>Logos from all Coveo Blitz edition to date</em></strong></p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "42",
                "id": "1695",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1694",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1693",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "35bc0015685442a27947f373ec4a2e6d",
                "id": "1692",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/12/22/the-tale-of-a-programming-contest/",
                "id": "1691",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/12/22/the-tale-of-a-programming-contest/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-12-22T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "the-tale-of-a-programming-contest",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-12-22T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/42",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/42/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/42/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/42/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/12/18/searching-jekyll/",
        "title": "Searching Jekyll",
        "short_URL": "http://wp.me/p7VTrW-H",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "74864b8329e8f9ececc339a3b99a29dd",
        "ID": 43,
        "content": "<p>This blog is powered by <a href=\"http://jekyllrb.com/\">Jekyll</a>, a static site generator. There is no database, nothing to search against, the site is simply composed of a few HTML pages referencing each other. Being search experts, we can leverage Coveo to add powerful search to <a href=\"http://jekyllrb.com/\">Jekyll</a>.</p>\n\n<!-- more -->\n\n<h2 id=\"indexing-the-content\">Indexing the content</h2>\n\n<p>Since we are dealing with a structured site containing static HTML pages, our <a href=\"http://onlinehelp.coveo.com/en/ces/7.0/administrator/web_pages_connector.htm\">Web Pages Connector</a> will get the job done.</p>\n\n<p><img src=\"http//jekyllrb.com/images/BlogTechSource.png\" alt=\"\" /></p>\n\n<p>In addition to creating a new Web Pages Connector <a href=\"http://onlinehelp.coveo.com/en/ces/7.0/User/what_is_an_index_source.htm\">source</a> to index the blog, we created a <a href=\"http://onlinehelp.coveo.com/en/ces/7.0/Administrator/adding_or_modifying_custom_fields.htm\">custom field</a> to have facetted tags on the search result page.</p>\n\n<p><img src=\"http//jekyllrb.com/images/TagsFacet.png\" alt=\"\" /></p>\n\n<h2 id=\"installing-the-coveo-javascript-search-framework-in-jekyll\">“Installing” the Coveo JavaScript Search Framework in Jekyll</h2>\n\n<p>The <a href=\"https://developers.coveo.com/display/public/JsSearch/Home\">JavaScript Search Framework</a> is simply a <a href=\"http://www.coveo.com/go/download.aspx?product=jssearch&amp;v=ind&amp;mv=0.9\">zip file</a> containing image, css and JavaScript files. For this straightforward integration, we added the following files to the <a href=\"http://jekyllrb.com/\">Jekyll</a> folder structure:</p>\n\n<ul>\n  <li><code class=\"highlighter-rouge\">css/CoveoFullSearch.css</code></li>\n  <li><code class=\"highlighter-rouge\">js/CoveoJsSearch.WithDependencies.min.js</code></li>\n  <li><code class=\"highlighter-rouge\">js/d3.min.js</code></li>\n  <li><code class=\"highlighter-rouge\">images/sprites.png</code></li>\n  <li><code class=\"highlighter-rouge\">images/wait.gif</code></li>\n  <li><code class=\"highlighter-rouge\">images/wait_circle_small.gif</code></li>\n  <li><code class=\"highlighter-rouge\">images/wait_facet.gif</code></li>\n  <li><code class=\"highlighter-rouge\">images/wait_facet_search.gif</code></li>\n</ul>\n\n<h2 id=\"adding-the-search-page\">Adding the search page</h2>\n\n<p>Each <a href=\"http://jekyllrb.com/\">Jekyll</a> page is rendered using a layout, we have two:</p>\n\n<ul>\n  <li>base</li>\n  <li>post</li>\n</ul>\n\n<p>We created a new page at the root of the site: <code class=\"highlighter-rouge\">search.html</code></p>\n\n<p>This page is using the base layout, just like the home page, and contains the following:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-jsp\">---\nlayout: base\n---\n\n&lt;article class=\"container\"&gt;\n  <div id=\"search\" class=\"CoveoSearchInterface\">\n    <span class=\"CoveoAnalytics\" />\n      <div class=\"coveo-tab-section\">\n        <a class=\"CoveoTab\"></a>\n      </div>\n      <div class=\"coveo-results-section\">\n        <div class=\"coveo-facet-column\">\n          <div>\n            <div class=\"CoveoFacet\"></div>\n          &lt;/div&gt;\n          <div class=\"CoveoFacet\"></div>\n        &lt;/div&gt;\n        <div class=\"coveo-results-column\">\n          <div class=\"CoveoShareQuery\"></div>\n          <div class=\"CoveoPreferencesPanel\">\n            <div class=\"CoveoResultsPreferences\"></div>\n            <div class=\"CoveoResultsFiltersPreferences\"></div>\n          &lt;/div&gt;\n          <div class=\"CoveoBreadcrumb\"></div>\n          <div class=\"coveo-results-header\">\n            <div class=\"coveo-summary-section\">\n              <span class=\"CoveoQuerySummary\"></span>\n              <span class=\"CoveoQueryDuration\"></span>\n            </div>\n            <div class=\"coveo-sort-section\">\n              <span class=\"CoveoSort\">Relevance</span>\n              <span class=\"CoveoSort\">Date</span>\n            </div>\n            <div class='coveo-clear'></div>\n          &lt;/div&gt;\n          <div class=\"CoveoHiddenQuery\"></div>\n          <div class=\"CoveoDidYouMean\"></div>\n          <div class=\"CoveoErrorReport\"></div>\n          <div class=\"CoveoResultList\">\n            \n              \n              <div class=\"coveo-date\"></div>\n              <div class=\"coveo-title\">\n              <a class=\"CoveoResultLink\" target=\"_blank\"></a>\n              \n              </div>\n              <div class=\"coveo-excerpt\">\n              \n              </div>\n              <div class=\"CoveoPrintableUri\"></div>\n              &lt;table class=\"CoveoFieldTable\"&gt;\n              &lt;tr data-field=\"@sysauthor\" data-caption=\"Author\"&gt;&lt;/tr&gt;\n              &lt;/table&gt;\n            &lt;/script&gt;\n            \n              <div class=\"CoveoQuickView\">\" data-fixed=\"true\" data-template-id=\"DefaultQuickViewContent\"&gt;\n              </div>\n            \n            \n              <div class=\"coveo-quick-view-header\">\n              <table class=\"CoveoFieldTable\">\n              <tr></tr>\n              <tr></tr>\n              </table>\n              </div>\n              <div class=\"CoveoQuickViewDocument\"></div>\n            \n            \n              \n            \n          &lt;/div&gt;\n          <div class=\"CoveoPager\"></div>\n        &lt;/div&gt;\n      &lt;/div&gt;\n      <div style=\"clear:both;\"></div>\n    &lt;/div&gt;\n  &lt;/article&gt;</code></pre></figure>\n\n<p>The code above results in a simple search page with two facets:</p>\n\n<ul>\n  <li>Author (out of the box, no custom field is needed)</li>\n  <li>Tags (based on the tags custom field we created earlier)</li>\n</ul>\n\n<p><img src=\"http//jekyllrb.com/images/AuthorTagsFacets.png\" alt=\"\" /></p>\n\n<h2 id=\"searching-from-anywhere-on-the-blog\">Searching from anywhere on the blog</h2>\n\n<p>We wanted to have a search box on every page. We proceeded to change our two layout files to include the following HTML element in the header:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-html\"><span class=\"nt\"><div> <span class=\"na\">id=</span><span class=\"s\">\"searchBox\"</span> <span class=\"na\">class=</span><span class=\"s\">\"CoveoSearchBox\"</span> <span class=\"na\">data-activate-omnibox=</span><span class=\"s\">\"true\"</span><span class=\"nt\">&gt;</div></span></code></pre></figure>\n\n<p>For the search box and the search page to work, the <a href=\"https://developers.coveo.com/display/public/JsSearch/Home\">JavaScript Search Framework</a> resources must be included in all the pages of the blog. These two lines were also added to the base and post layouts:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-html\">{% include _search.html %}\n<span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">href=</span><span class=\"s\">\"/css/CoveoFullSearch.css\"</span> <span class=\"nt\">/&gt;</span></code></pre></figure>\n\n<p>As you can see, we created the <code class=\"highlighter-rouge\">_search.html</code> file in the <code class=\"highlighter-rouge\">_includes</code> <a href=\"http://jekyllrb.com/\">Jekyll</a> folder to centralize the JavaScript dependencies, here is what it contains:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-html\"><span class=\"nt\"><span class=\"na\">src=</span><span class=\"s\">\"/js/d3.min.js\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\"><span class=\"na\">src=</span><span class=\"s\">\"/js/CoveoJsSearch.WithDependencies.min.js\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\"><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Rest</span><span class=\"p\">.</span><span class=\"nx\">SearchEndpoint</span><span class=\"p\">.</span><span class=\"nx\">endpoints</span><span class=\"p\">[</span><span class=\"s2\">\"default\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Rest</span><span class=\"p\">.</span><span class=\"nx\">SearchEndpoint</span><span class=\"p\">({</span>\n      <span class=\"na\">restUri</span><span class=\"p\">:</span> <span class=\"s1\">'https://developers.coveo.com/coveorest/search'</span><span class=\"p\">,</span>\n      <span class=\"na\">anonymous</span><span class=\"p\">:</span> <span class=\"kc\">true</span>\n    <span class=\"p\">});</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">location</span><span class=\"p\">.</span><span class=\"nx\">pathname</span> <span class=\"o\">!==</span> <span class=\"s2\">\"/search/\"</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">'#searchBox'</span><span class=\"p\">).</span><span class=\"nx\">coveo</span><span class=\"p\">(</span><span class=\"s1\">'initSearchBox'</span><span class=\"p\">,</span> <span class=\"s1\">'/search'</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">location</span><span class=\"p\">.</span><span class=\"nx\">pathname</span> <span class=\"o\">==</span> <span class=\"s2\">\"/search/\"</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"kd\">var</span> <span class=\"nx\">mySearchBox</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"#searchBox\"</span><span class=\"p\">);</span>\n      <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"#search\"</span><span class=\"p\">).</span><span class=\"nx\">coveo</span><span class=\"p\">(</span><span class=\"s2\">\"init\"</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"na\">externalComponents</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nx\">mySearchBox</span><span class=\"p\">]</span>\n      <span class=\"p\">})</span>        \n    <span class=\"p\">}</span>\n  <span class=\"p\">});</span>\n<span class=\"nt\"></span></code></pre></figure>\n\n<h2 id=\"externalizing-the-search-box\">Externalizing the search box</h2>\n\n<p>With the Search Endpoint configured in our <code class=\"highlighter-rouge\">_search.html</code> file, the search page was already working. However, we had two problems:</p>\n\n<ul>\n  <li>the search interface was initiated two times</li>\n  <li>the search box was only working on the search page itself</li>\n</ul>\n\n<p>To avoid the double init problem, we added logic to prevent the standalone search box from initializing in the search page. If we are not on the search page, we initialize the search box directly and give it the path of our search page, i.e. <code class=\"highlighter-rouge\">/search</code>:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">location</span><span class=\"p\">.</span><span class=\"nx\">pathname</span> <span class=\"o\">!==</span> <span class=\"s2\">\"/search/\"</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">'#searchBox'</span><span class=\"p\">).</span><span class=\"nx\">coveo</span><span class=\"p\">(</span><span class=\"s1\">'initSearchBox'</span><span class=\"p\">,</span> <span class=\"s1\">'/search'</span><span class=\"p\">);</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>If however we are on the search page, we pass the <code class=\"highlighter-rouge\">mySearchBox</code> variable as an <code class=\"highlighter-rouge\">externalComponents</code> to the search page:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">location</span><span class=\"p\">.</span><span class=\"nx\">pathname</span> <span class=\"o\">==</span> <span class=\"s2\">\"/search/\"</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">mySearchBox</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"#searchBox\"</span><span class=\"p\">);</span>\n  <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"#search\"</span><span class=\"p\">).</span><span class=\"nx\">coveo</span><span class=\"p\">(</span><span class=\"s2\">\"init\"</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"na\">externalComponents</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nx\">mySearchBox</span><span class=\"p\">]</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>You can learn more about the Standalone Search Box possibilities in <a href=\"https://developers.coveo.com/display/public/JsSearch/Standalone+Search+Box\">our documentation</a>.</p>\n\n<p>And that’s how you integrate search in <a href=\"http://jekyllrb.com/\">Jekyll</a> using the <a href=\"https://developers.coveo.com/display/public/JsSearch/Home\">JavaScript Search Framework</a>.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "43",
                "id": "1705",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1704",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1703",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "c26dbc52b7b0a14d47565e453def93bd",
                "id": "1702",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/12/18/searching-jekyll/",
                "id": "1701",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/12/18/searching-jekyll/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-12-18T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "searching-jekyll",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-12-18T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/43",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/43/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/43/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/43/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/12/10/creating-custom-model-in-coveo-for-sitecore/",
        "title": "Creating custom model in Coveo for Sitecore",
        "short_URL": "http://wp.me/p7VTrW-I",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "7e0b8310daf37f786e2c8d94159dc7db",
        "ID": 44,
        "content": "<p>Coveo for Sitecore offers various extension points to easily customize almost every part of it : indexing, queries, interfaces etc. In the developers documentation, we’re often giving examples of custom pipelines or JavaScript snippets, but what happen if you guys want to do more than that?</p>\n\n<!-- more -->\n\n<p>For instance, you may want to use a Coveo Search Component and add even more parameters that will be available from the Page Editor (or in Presentation/Details in the Content Editor). In this example, we’ll try to add a configurable placeholder text for the search box. We’ll use MVC components, but it also applies to Web Forms with slight modifications.</p>\n\n<h2 id=\"we-must-code\">1. We must code!</h2>\n\n<p>Step 1. Install Visual Studio\nStep 2. Code\nStep 3. ????\nStep 4. Profit</p>\n\n<p>We’ll create a new <em>Class Library</em> project in Visual Studio that we’ll call <em>CustomCoveoSearch</em>. Let’s add references to <strong>Coveo.UI.dll</strong> and <strong>Sitecore.Mvc.dll</strong> that should be in the bin folder of your Sitecore instance.</p>\n\n<p>Then, let’s add a new class in our project named <em>CustomCoveoModel</em>. The code should simply looks like this :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-c#\"><span class=\"k\">using</span> <span class=\"nn\">Coveo.UI.Mvc.Models</span><span class=\"p\">;</span>\n\n<span class=\"k\">namespace</span> <span class=\"nn\">CustomCoveoSearch</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"k\">class</span> <span class=\"nc\">CustomCoveoModel</span> <span class=\"p\">:</span> <span class=\"n\">SearchModel</span>\n    <span class=\"p\">{</span>\n        <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"n\">PlaceholderText</span>\n        <span class=\"p\">{</span>\n            <span class=\"k\">get</span>\n            <span class=\"p\">{</span>\n                <span class=\"k\">return</span> <span class=\"n\">ParametersHelper</span><span class=\"p\">.</span><span class=\"nf\">GetStringParam</span><span class=\"p\">(</span><span class=\"s\">\"PlaceholderText\"</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>The code is fairly simple. We need a public property to ensure our new parameter is usable in the .cshtml layout. We use the <em>ParametersHelper</em> that comes from Coveo’s base SearchModel to get the proper value corresponding to our Sitecore item.</p>\n\n<p>Build the project and add the <strong>CustomCoveoSearch.dll</strong> in the bin folder of your Sitecore instance.</p>\n\n<h2 id=\"we-must-create-sitecore-items\">2. We must create Sitecore items!</h2>\n\n<p>We then need to create a few Sitecore items to make it work. First step, if you open your Sitecore Content editor and navigate to the Templates section, you should see a CoveoModule/Search folder. Let’s create a new CoveoCustom folder, and duplicate the item <em>Coveo Search Parameters</em> in this new folder. We’ll name it <em>Custom Coveo Search Parameters</em>. Working with custom items will ensure that our work will not get overriden if we upgrade to a new version of Coveo for Sitecore.</p>\n\n<p><img src=\"/images/sitecore/customcoveosearchparameters.png\" alt=\"image\" /></p>\n\n<p>In the Advanced field section of this item, let’s add a property named <em>PlaceholderText</em> with the Single-Line Text type. We’ll set the title of this field to ‘Placeholder text for search box’.</p>\n\n<p><img src=\"/images/sitecore/placeholdertextfield.png\" alt=\"image\" /></p>\n\n<p>Then, if we navigate to Layouts/Models, we’ll also create a CoveoCustom folder, in which we’ll create a new Model named <em>Custom Search Model</em>. The model type should point to the type we created on step 1, which is <strong>CustomCoveoSearch.CustomCoveoModel, CustomCoveoSearch</strong>.</p>\n\n<p><img src=\"/images/sitecore/customsearchmodel.png\" alt=\"image\" /></p>\n\n<p>Finally, we’ll navigate to Layouts/Renderings, create again a CoveoCustom folder and then duplicate the Coveo Search View item into a new <em>Custom Coveo Search View</em>. We’ll need to adjust the Model, Parameters Template and Datasource Template fields to respectively point on our custom model and our custom parameters item. Let’s change the path for ‘/Views/CoveoCustom/CustomSearchView.cshtml’ as well, we’ll setup that in step 3.</p>\n\n<p><img src=\"/images/sitecore/customcoveosearchview1.png\" alt=\"image\" />\n<img src=\"/images/sitecore/customcoveosearchview2.png\" alt=\"image\" /></p>\n\n<p>Make sure to save and publish all these new items.</p>\n\n<h2 id=\"we-must-create-a-proper-cshtml\">3. We must create a proper cshtml!</h2>\n\n<p>In the Website folder of your Sitecore instance, you should have a SearchView.cshtml file located under ‘/Views/Coveo’. Duplicate that into the path you just set at the end of step 2, probably ‘/Views/CoveoCustom/CustomSearchView.cshtml’. Copy the Web.config file from the first folder to your new folder (author of these lines actually forgot this step and lost some time troubleshooting why the example was not working…) Open the ‘CustomSearchView.cshtml’ file with your favorite text editor.</p>\n\n<p>Look for the following tag at the end of the file :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-html\"><span class=\"nt\"><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">'#search'</span><span class=\"p\">).</span><span class=\"nx\">coveoForSitecore</span><span class=\"p\">(</span><span class=\"s1\">'init'</span><span class=\"p\">,</span> <span class=\"nx\">CoveoForSitecore</span><span class=\"p\">.</span><span class=\"nx\">componentsOptions</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n<span class=\"nt\"></span></code></pre></figure>\n\n<p>And replace it by :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-html\"><span class=\"nt\"><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">'#search'</span><span class=\"p\">).</span><span class=\"nx\">coveoForSitecore</span><span class=\"p\">(</span><span class=\"s1\">'init'</span><span class=\"p\">,</span> <span class=\"nx\">CoveoForSitecore</span><span class=\"p\">.</span><span class=\"nx\">componentsOptions</span><span class=\"p\">);</span>\n        <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">'#search'</span><span class=\"p\">).</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"s2\">\"input.CoveoQueryBox\"</span><span class=\"p\">).</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"s2\">\"placeholder\"</span><span class=\"p\">,</span> <span class=\"s1\">'@Model.PlaceholderText'</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n<span class=\"nt\"></span></code></pre></figure>\n\n<p>This will make the link between our new model and the JSUI search box. Save and close this file.</p>\n\n<h2 id=\"we-must-test-it-out\">4. We must test it out!</h2>\n\n<p>Let’s create a new Coveo Search Page (MVC) under /sitecore/content/home. Go into Presentation/Details and replace the Coveo Search View by our new Custom Coveo Search View. (Obviously, you could also try it in any item you want, just make sure you have a Coveo Search View Resources rendering in your layout as well) Just make sure that the placeholder is <em>coveo-search-mvc</em>.</p>\n\n<p><img src=\"/images/sitecore/addedcustomcoveosearchview.png\" alt=\"image\" /></p>\n\n<p>Save and close the Presentation/Details window. Let’s now open our item in the Page Editor! In the properties of the view, we should see our placeholder text property :</p>\n\n<p><img src=\"/images/sitecore/placeholdertextpageeditor.png\" alt=\"image\" /></p>\n\n<p>What’s magical is that it actually works! If we enter something as a placeholder and save the item, it displays our new value :</p>\n\n<p><img src=\"/images/sitecore/placeholdertextresult.png\" alt=\"image\" /></p>\n\n<h2 id=\"we-must-conclude\">5. We must conclude!</h2>\n\n<p>Lots of steps for a small result you may say! But like i said earlier, all those duplicates are actually really important, because your work will not get affected by the upgrades of Coveo for Sitecore. Those kind of customizations can actually give a nice bonus to your end users :)</p>\n\n<p>Thanks for reading!</p>\n\n<p><img src=\"/images/sitecore/kinginthecastle.gif\" alt=\"image\" /></p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "44",
                "id": "1715",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1714",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1713",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "fb2567fe0bf7cf6561a27ee4a38ab030",
                "id": "1712",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/12/10/creating-custom-model-coveo-for-sitecore/",
                "id": "1711",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/12/10/creating-custom-model-in-coveo-for-sitecore/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-12-10T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "creating-custom-model-in-coveo-for-sitecore",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-12-10T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/44",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/44/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/44/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/44/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/12/08/making-an-online-community/",
        "title": "Making an online community",
        "short_URL": "http://wp.me/p7VTrW-J",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "8c495e2e85f1b8b230fdd084bb86480e",
        "ID": 45,
        "content": "<p><img src=\"http//www.coveo.com/images/posts/online_communities.png\" alt=\"image\" /></p>\n\n<p>As the UX design department grows at Coveo we start to get enough manpower to actually create stuff before it’s implemented (yep…). One of these concepts is for an online community.</p>\n\n<p>The idea for this project came from an internal initiative to unify the search on our various websites. You’re probably familiar with <a href=\"http://www.coveo.com/en/solutions/enterprise-search\">how great Coveo is at this kind of problem</a>. Basically, it’s what we do. I was tasked to create mockups for this initiative. As I was working on this, another idea came up. We have Coveo staff who are communicating directly with developers. We have online resources (a lot) that are frequently updated. Maybe we could bring all of this together. We talked about it in our meetings with the design team and soon it started consuming me. <!-- more --> What if we could go further than only unifying the search? What if we could create a sense of an online community. Not only would people easily get access to the help they need but they could also contribute and bring their own insights on Coveo’s products. Each user would have a real sense of doing something great. \nMy journey began.</p>\n\n<p style=\"text-align:center;\">\n<img src=\"http//www.coveo.com/images/posts/easy_karma.jpg\" alt=\"image\" />\n</p>\n\n<p><img src=\"http//www.coveo.com/images/posts/research.png\" alt=\"image\" /></p>\n\n<p>Making an online community is not something you do over 24 hours. It’s something that has to be well thought if you want it to succeed. Those familiar with UX design know that we try to start projects with research to back up our design decisions. This part is especially important considering how big that community project can be. We all have a vague idea of how beneficial an online community can be to a business. Often, vague won’t be good enough for this kind of investment and so my first quest appeared.</p>\n\n<h4 id=\"benefits-11-2\" style=\"line-height:.1em;\">\nBenefits 0/1\n</h4>\n<p style=\"font-size:.9em;\">\nFind tangible information on the benefits of an online community\n</p>\n\n<h4 id=\"benefits-11-2\" style=\"line-height:.1em;\">\nOnline Community 0/1\n</h4>\n<p style=\"font-size:.9em;\">\nBuild an online community\n</p>\n\n<p>Luckily, this quest wasn’t too hard. A lot of research has been done in regards to online communities. Ridings and Gefen (2004), suggest that a first category of benefits simply come from forming a social group. Easy enough, when you form a social group you can:</p>\n\n<ul>\n  <li>Exchange information</li>\n  <li>Give and receive emotional support</li>\n  <li>Develop friendships</li>\n  <li>Have fun</li>\n</ul>\n\n<p>It makes sense, for most of you, who have friends, you can agree with them.</p>\n\n<p>The second category is related to access to online information. An online community will often have 24/7 access and operation, asynchronous interactions, global geographical reach and, hopefully, some kind of history of what happened in the community. Well, all of our assumptions are confirmed and the idea of an online community looks great for a business like Coveo. But wait, there’s more. Hagel and Armstrong (1997) have also found that online communities are believed to promote customer loyalty. Of course! Customers get more personally attached to a product because the product not only represents a solution but also represents a network of online relationships. I’m a network ambassador for <a href=\"http://network.frankandoak.com\">Frank &amp; Oak</a> (great clothing if you’re looking for clothes -<a href=\"http://vnlink.co/SVAXBku\">here’s a 25$ coupon as well</a>). Contrary to what one can believe, the community there doesn’t only speak about fashion, but also about lifestyle. We can exchange ideas about music, as well as games, or just do a meetup in a city somewhere. We also actively participate with Frank &amp; Oak staff on some design decisions by providing feedback. This attachment makes all of us even more loyal to the brand but it also makes us feel <em>special</em> for being a part of it. It feels like this emotion is the right one to have in regards to a community. An emotion one would get when he is part of something greater than himself. Now I’m overstepping a bit on the next part which is how to ensure the success of an online community.</p>\n\n<p><img src=\"http//www.coveo.com/images/posts/success.png\" alt=\"image\" /></p>\n\n<h4 id=\"benefits-11-2\" style=\"line-height:.1em;\">\nBenefits 1/1\n</h4>\n<p style=\"font-size:.9em;\">\nFind tangible information on the benefits of an online community\n</p>\n\n<h4 id=\"benefits-11-2\" style=\"line-height:.1em;\">\nOnline Community 0/1\n</h4>\n<p style=\"font-size:.9em;\">\nBuild an online community\n</p>\n\n<p>So we’ve identified the benefits. You can pat yourself on the back. The second big step is to make sure we actually succeed in creating an online community. Indeed, only if we’re successful in creating our online community will we get all these benefits. But wait a second, how do you measure success in an online community? Surely, it must be different than any other web applications.</p>\n\n<h4 id=\"benefits-11-2\" style=\"line-height:.1em;color:#cdcdcd;\">\nBenefits 1/1\n</h4>\n<p style=\"font-size:.9em;color:#cdcdcd;\">\nFind tangible information on the benefits of an online community\n</p>\n\n<h4 id=\"benefits-11-2\" style=\"line-height:.1em;\">\nSuccess 0/1\n</h4>\n<p style=\"font-size:.9em;\">\nIdentify the criteria of success\n</p>\n\n<h4 id=\"benefits-11-2\" style=\"line-height:.1em;\">\nOnline Community 0/1\n</h4>\n<p style=\"font-size:.9em;\">\nBuild an online community\n</p>\n\n<p>I’m going to take this quote from Iriberri &amp; Leroy (2009):</p>\n\n<p>Researchers who focus on measuring success [in an online community] agree that, the larger the volume of messages posted and the closer members feel to each other, the more successful the online community becomes.</p>\n\n<p>Basically, the more an online community feels like a real one, the more successful it will be (take this dumb down sentence with a grain of salt, of course there are many other considerations when you do stuff online). One suggested approach is to build the community by stages. These stages must always take in consideration the needs of the members and the state of the community as a whole. For instance, losing a certain privilege or functionality at a stage could have very negative impact on the user experience. The first stage is the inception stage.</p>\n\n<h4 id=\"benefits-11-2\" style=\"line-height:.1em;color:#cdcdcd;\">\nBenefits 1/1\n</h4>\n<p style=\"font-size:.9em;color:#cdcdcd;\">\nFind tangible information on the benefits of an online community\n</p>\n\n<h4 id=\"benefits-11-2\" style=\"line-height:.1em;color:#cdcdcd;\">\nSuccess 1/1\n</h4>\n<p style=\"font-size:.9em;color:#cdcdcd;\">\nIdentify the criteria of success\n</p>\n\n<h4 id=\"benefits-11-2\" style=\"line-height:.1em;\">\nOnline Community 0/1\n</h4>\n<p style=\"font-size:.9em;\">\nBuild an online community\n</p>\n\n<p style=\"text-align:center;\">\n<img src=\"http//www.coveo.com/images/posts/rome.gif\" alt=\"image\" />\n</p>\n\n<p><img src=\"http//www.coveo.com/images/posts/inception.png\" alt=\"image\" /></p>\n\n<p>This stage is composed of 5 key elements. I’m trying to keep this post short so I will go over these elements quickly.</p>\n\n<h3 id=\"leitmotiv\">Leitmotiv</h3>\n\n<p>A clear purpose will generally serve you well when building an online community. This purpose can be explicitly written in the interface (as a tagline) and will inform potential members of your community’s purpose. A good example of this (taken from Iriberri &amp; Leroy 2009) is the tagline of slashdot.org: <em>News for Nerds. Stuff that matters</em>.</p>\n\n<p>This strong tagline instantly defines the community and its purpose.</p>\n\n<h3 id=\"focus\">Focus</h3>\n\n<p>A focus on the users and their characteristics is also essential. The content needs to be formatted for your particular user. You can take into consideration his interests, age, gender, and even ethnicity if it matters.</p>\n\n<h3 id=\"rules\">Rules</h3>\n\n<p>It is generally okay for a community to have explicitly written rules on how to behave and other aspects of the community (such as legal ones, like being of a certain age).</p>\n\n<h3 id=\"branding\">Branding</h3>\n\n<p>Like I said earlier, a great tagline will help in this regard. You can also use design patterns that you know are appealing to your audience. For instance, with the Frank &amp; Oak network, we can see a visual style that is similar on their <a href=\"http://network.frankandoak.com\">network site</a> and on their <a href=\"http://frankandoak.com\">e-commerce site</a>.</p>\n\n<h3 id=\"feedback--continuity\">Feedback &amp; Continuity</h3>\n\n<p style=\"text-align:center;\">\n<img src=\"http//www.coveo.com/images/posts/perseverance_is_king.png\" alt=\"image\" />\n</p>\n\n<p>Finally, a community also needs to keep on building from its foundation. Malone &amp; Crumlish (2009), who talk about social interfaces, suggest not to completely finish the design. Users should be able to “ finish ” some parts of the design as they use the interface. There is also a need for consistency between each version of the design, at least on some features. Not to repeat myself, but it is important to note that if a factor is present in one stage, it should continue to exist in the other stages.</p>\n\n<p>Stay tuned, next week I will update this with a visual design of how this can be brought to life.</p>\n\n<p><img src=\"http//www.coveo.com/images/posts/candy.png\" alt=\"image\" /></p>\n\n<p>With all that said, now we can talk about visual design. I will spare some of the design decisions that were made (in order to keep it short) but the overall idea is to keep the Coveo brand while providing delightful details that will appeal to developers (which is the main focus of our community).</p>\n\n<p><img src=\"http//www.coveo.com/images/posts/landing_page.png\" alt=\"image\" /></p>\n\n<p>As we can see, the landing page presents the tagline (as said before, it is essential) with a clear sentence that further explains the purpose of the community. The logo took some care and we hid some details in order to make the interface more delightful (as you discover them). I see these as some kind of micro interactions that greatly add to the playful idea of the interface. It must feel great to be in there (bet you didn’t see the heart before).</p>\n\n<p style=\"text-align:center;\">\n<img src=\"http//www.coveo.com/images/posts/heart.png\" alt=\"image\" style=\"max-width:49%;\" />\n<img src=\"http//www.coveo.com/images/posts/chuck.png\" alt=\"image\" style=\"max-width:49%;\" />\n</p>\n\n<p>When a user logs in, he is brought to his profile page, which is undoubtedly called “Home”. There, he has access to updates on various Coveo sites, as well as other features (such as social media, etc.).</p>\n\n<p><img src=\"http//www.coveo.com/images/posts/profil.png\" alt=\"image\" /></p>\n\n<p>Finally, when a user goes to another user’s profile, he can see his achievements, tweets and other information such as his <em>fellowships</em>. The same idea of a guild except it would be automatically generated by the user’s activity on different sites. Users would then know more about each other and could share knowledge.</p>\n\n<p><img src=\"http//www.coveo.com/images/posts/user_page.png\" alt=\"image\" /></p>\n\n<p><strong>TO BE CONTINUED</strong></p>\n\n<p>It doesn’t stop there, there are many more explanations I could give on smaller features (private messaging, private information on profiles, etc.) but this post ends here.</p>\n\n<p><strong>SOURCE</strong></p>\n\n<p>CRUMLISH, C. &amp; MALONE, E. (2009). <em>Designing social interfaces: Principles, patterns, and practices for improving the user experience</em>, O’Reilly Media, Inc., 518 p.</p>\n\n<p>HAGEL, J. I. &amp; ARMSTRONG, A. G. (1997). <em>Net Gain: Expanding Markets through Virtual Communities.</em>, \nHarvard Business School Press, Boston, MA, 235 p.</p>\n\n<p>IRIBERRI, A. &amp; LEROY, G. (2009). « A life-cycle perspective on online community success. », ACM, <em>Computing Surveys (CSUR</em>), 41(2), p. 11-22.</p>\n\n<p>RIDINGS, M. &amp; GEFEN, D. (2004). « Virtual community attraction: Why people hang out online. », <em>Journal of Computer‐Mediated Communication 10</em>, 10 (1), p. 00-00.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "45",
                "id": "1725",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1724",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1723",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "e40a5bc49d5abdbaf730f568860c29c2",
                "id": "1722",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/12/08/making-an-online-community/",
                "id": "1721",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/12/08/making-an-online-community/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-12-08T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "making-an-online-community",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-12-08T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/45",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/45/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/45/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/45/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/11/18/taking-enums-to-the-next-level-with-java-8/",
        "title": "Taking Enums to the next level with Java 8",
        "short_URL": "http://wp.me/p7VTrW-K",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "b2178bc97370327660fa87184e0bcd76",
        "ID": 46,
        "content": "<p>In our awesome cloud Usage Analytics API, there is a call that returns the analytics data in data points format (these are meant to be used to build a graph). Recently, we added a feature allowing the user to choose the time period (initially, only <em>days</em> was available). Problem is, the code was strongly coupled with the <em>day</em> period…</p>\n\n<!-- more -->\n\n<p><img src=\"http//www.joda.org/images/graphexemple.png\" alt=\"image\" /></p>\n\n<p>For exemple, take this snippet :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">private</span> <span class=\"kd\">static</span> <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">DataPoint</span><span class=\"o\">&gt;</span> <span class=\"nf\">createListWithZerosForTimeInterval</span><span class=\"o\">(</span><span class=\"n\">DateTime</span> <span class=\"n\">from</span><span class=\"o\">,</span>\n                                                                  <span class=\"n\">DateTime</span> <span class=\"n\">to</span><span class=\"o\">,</span>\n                                                                  <span class=\"n\">ImmutableSet</span><span class=\"o\">&lt;</span><span class=\"n\">Metric</span><span class=\"o\">&lt;?</span> <span class=\"kd\">extends</span> <span class=\"n\">Number</span><span class=\"o\">&gt;&gt;</span> <span class=\"n\">metrics</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n\n        <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">DataPoint</span><span class=\"o\">&gt;</span> <span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">ArrayList</span><span class=\"o\">&lt;&gt;();</span>\n        <span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;=</span> <span class=\"n\">Days</span><span class=\"o\">.</span><span class=\"na\">daysBetween</span><span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span> <span class=\"n\">to</span><span class=\"o\">).</span><span class=\"na\">getDays</span><span class=\"o\">();</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n            <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">DataPoint</span><span class=\"o\">().</span><span class=\"na\">withDatas</span><span class=\"o\">(</span><span class=\"n\">createDatasWithZeroValues</span><span class=\"o\">(</span><span class=\"n\">metrics</span><span class=\"o\">))</span>\n                                      <span class=\"o\">.</span><span class=\"na\">withDayOfYear</span><span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">.</span><span class=\"na\">withZone</span><span class=\"o\">(</span><span class=\"n\">DateTimeZone</span><span class=\"o\">.</span><span class=\"na\">UTC</span><span class=\"o\">).</span><span class=\"na\">plusDays</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">).</span><span class=\"na\">withTimeAtStartOfDay</span><span class=\"o\">()));</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">points</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span></code></pre></figure>\n\n<p><strong>Note:</strong> Days, as well as Minutes, Hours, Weeks and Months in the snippet a little further below, come from the <a href=\"http://www.joda.org/joda-time/\">Joda-Time Java date and time API</a>.</p>\n\n<p>Even if the name of the method does not reflect it, it is very strongly binded to the concept of <em>days</em>.</p>\n\n<p>As I was looking for a way to use different time periods (<em>months</em>, <em>weeks</em>, <em>hours</em> for exemple), I saw the oh so nasty <strong>switch/case</strong> statement slowly sneaking its way into the code.</p>\n\n<hr />\n<p>You have to understand that the notion <strong>switch/case = evil</strong> was drilled into my mind when I was attending college and in two internships that I had, so I tend to try to avoid those at any cost, mainly because they often violate the <a href=\"http://en.wikipedia.org/wiki/Open/closed_principle\"><em>open-closed principle</em></a>. I strongly believe that this principle is one of the most important best practices for writing object-oriented code. And I am no the only one. Robert C. Martin once said :</p>\n\n<blockquote>\n  <p>In many ways [the open-closed principle] is at the heart of object oriented design. Conformance to this principle is what yields the greatest benefits claimed for object oriented technology; i.e. reusability and maintainability.<sup id=\"fnref:footnote\"><a href=\"footnote\" class=\"footnote\">1</a></sup></p>\n</blockquote>\n\n<hr />\n<p>I told myself : “We just started using Java 8. Maybe I can find a way to use some awesome new feature to avoid that switch/case death trap.” Using the new <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/function/package-summary.html\"><em>functions</em></a> in Java 8 (well not so new, but you know what I mean), I decided to add a little meat to an <em>enum</em> that would represent the different time periods available.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">enum</span> <span class=\"n\">TimePeriod</span>\n<span class=\"o\">{</span>\n    <span class=\"n\">MINUTE</span><span class=\"o\">(</span><span class=\"n\">Dimension</span><span class=\"o\">.</span><span class=\"na\">MINUTE</span><span class=\"o\">,</span>\n           <span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span>\n            <span class=\"n\">to</span><span class=\"o\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Minutes</span><span class=\"o\">.</span><span class=\"na\">minutesBetween</span><span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span> <span class=\"n\">to</span><span class=\"o\">).</span><span class=\"na\">getMinutes</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n           <span class=\"nl\">Minutes:</span><span class=\"o\">:</span><span class=\"n\">minutes</span><span class=\"o\">,</span>\n           <span class=\"n\">from</span> <span class=\"o\">-&gt;</span> <span class=\"n\">from</span><span class=\"o\">.</span><span class=\"na\">withZone</span><span class=\"o\">(</span><span class=\"n\">DateTimeZone</span><span class=\"o\">.</span><span class=\"na\">UTC</span><span class=\"o\">)</span>\n                       <span class=\"o\">.</span><span class=\"na\">withSecondOfMinute</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)</span>\n                       <span class=\"o\">.</span><span class=\"na\">withMillisOfSecond</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)),</span>\n    <span class=\"n\">HOUR</span><span class=\"o\">(</span><span class=\"n\">Dimension</span><span class=\"o\">.</span><span class=\"na\">HOUR</span><span class=\"o\">,</span>\n         <span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span>\n          <span class=\"n\">to</span><span class=\"o\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Hours</span><span class=\"o\">.</span><span class=\"na\">hoursBetween</span><span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span> <span class=\"n\">to</span><span class=\"o\">).</span><span class=\"na\">getHours</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n         <span class=\"nl\">Hours:</span><span class=\"o\">:</span><span class=\"n\">hours</span><span class=\"o\">,</span>\n         <span class=\"n\">from</span> <span class=\"o\">-&gt;</span> <span class=\"n\">from</span><span class=\"o\">.</span><span class=\"na\">withZone</span><span class=\"o\">(</span><span class=\"n\">DateTimeZone</span><span class=\"o\">.</span><span class=\"na\">UTC</span><span class=\"o\">)</span>\n                     <span class=\"o\">.</span><span class=\"na\">withMinuteOfHour</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)</span>\n                     <span class=\"o\">.</span><span class=\"na\">withSecondOfMinute</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)</span>\n                     <span class=\"o\">.</span><span class=\"na\">withMillisOfSecond</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)),</span>\n    <span class=\"n\">DAY</span><span class=\"o\">(</span><span class=\"n\">Dimension</span><span class=\"o\">.</span><span class=\"na\">DAY</span><span class=\"o\">,</span>\n        <span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span>\n         <span class=\"n\">to</span><span class=\"o\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Days</span><span class=\"o\">.</span><span class=\"na\">daysBetween</span><span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span> <span class=\"n\">to</span><span class=\"o\">).</span><span class=\"na\">getDays</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n        <span class=\"nl\">Days:</span><span class=\"o\">:</span><span class=\"n\">days</span><span class=\"o\">,</span>\n        <span class=\"n\">from</span> <span class=\"o\">-&gt;</span> <span class=\"n\">from</span><span class=\"o\">.</span><span class=\"na\">withZone</span><span class=\"o\">(</span><span class=\"n\">DateTimeZone</span><span class=\"o\">.</span><span class=\"na\">UTC</span><span class=\"o\">)</span>\n                    <span class=\"o\">.</span><span class=\"na\">withTimeAtStartOfDay</span><span class=\"o\">()),</span>\n    <span class=\"n\">WEEK</span><span class=\"o\">(</span><span class=\"n\">Dimension</span><span class=\"o\">.</span><span class=\"na\">WEEK</span><span class=\"o\">,</span>\n         <span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span>\n          <span class=\"n\">to</span><span class=\"o\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Weeks</span><span class=\"o\">.</span><span class=\"na\">weeksBetween</span><span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span> <span class=\"n\">to</span><span class=\"o\">).</span><span class=\"na\">getWeeks</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n         <span class=\"nl\">Weeks:</span><span class=\"o\">:</span><span class=\"n\">weeks</span><span class=\"o\">,</span>\n         <span class=\"n\">from</span> <span class=\"o\">-&gt;</span> <span class=\"n\">from</span><span class=\"o\">.</span><span class=\"na\">withZone</span><span class=\"o\">(</span><span class=\"n\">DateTimeZone</span><span class=\"o\">.</span><span class=\"na\">UTC</span><span class=\"o\">)</span>\n                     <span class=\"o\">.</span><span class=\"na\">withDayOfWeek</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n                     <span class=\"o\">.</span><span class=\"na\">withTimeAtStartOfDay</span><span class=\"o\">()),</span>\n    <span class=\"n\">MONTH</span><span class=\"o\">(</span><span class=\"n\">Dimension</span><span class=\"o\">.</span><span class=\"na\">MONTH</span><span class=\"o\">,</span>\n          <span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span>\n           <span class=\"n\">to</span><span class=\"o\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Months</span><span class=\"o\">.</span><span class=\"na\">monthsBetween</span><span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span> <span class=\"n\">to</span><span class=\"o\">).</span><span class=\"na\">getMonths</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n          <span class=\"nl\">Months:</span><span class=\"o\">:</span><span class=\"n\">months</span><span class=\"o\">,</span>\n          <span class=\"n\">from</span> <span class=\"o\">-&gt;</span> <span class=\"n\">from</span><span class=\"o\">.</span><span class=\"na\">withZone</span><span class=\"o\">(</span><span class=\"n\">DateTimeZone</span><span class=\"o\">.</span><span class=\"na\">UTC</span><span class=\"o\">)</span>\n                      <span class=\"o\">.</span><span class=\"na\">withDayOfMonth</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n                      <span class=\"o\">.</span><span class=\"na\">withTimeAtStartOfDay</span><span class=\"o\">());</span>\n\n    <span class=\"kd\">private</span> <span class=\"n\">Dimension</span><span class=\"o\">&lt;</span><span class=\"n\">Timestamp</span><span class=\"o\">&gt;</span> <span class=\"n\">dimension</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">BiFunction</span><span class=\"o\">&lt;</span><span class=\"n\">DateTime</span><span class=\"o\">,</span> <span class=\"n\">DateTime</span><span class=\"o\">,</span> <span class=\"n\">Integer</span><span class=\"o\">&gt;</span> <span class=\"n\">getNumberOfPoints</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Function</span><span class=\"o\">&lt;</span><span class=\"n\">Integer</span><span class=\"o\">,</span> <span class=\"n\">ReadablePeriod</span><span class=\"o\">&gt;</span> <span class=\"n\">getPeriodFromNbOfInterval</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Function</span><span class=\"o\">&lt;</span><span class=\"n\">DateTime</span><span class=\"o\">,</span> <span class=\"n\">DateTime</span><span class=\"o\">&gt;</span> <span class=\"n\">getStartOfInterval</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">private</span> <span class=\"nf\">TimePeriod</span><span class=\"o\">(</span><span class=\"n\">Dimension</span><span class=\"o\">&lt;</span><span class=\"n\">Timestamp</span><span class=\"o\">&gt;</span> <span class=\"n\">dimension</span><span class=\"o\">,</span>\n                       <span class=\"n\">BiFunction</span><span class=\"o\">&lt;</span><span class=\"n\">DateTime</span><span class=\"o\">,</span> <span class=\"n\">DateTime</span><span class=\"o\">,</span> <span class=\"n\">Integer</span><span class=\"o\">&gt;</span> <span class=\"n\">getNumberOfPoints</span><span class=\"o\">,</span>\n                       <span class=\"n\">Function</span><span class=\"o\">&lt;</span><span class=\"n\">Integer</span><span class=\"o\">,</span> <span class=\"n\">ReadablePeriod</span><span class=\"o\">&gt;</span> <span class=\"n\">getPeriodFromNbOfInterval</span><span class=\"o\">,</span>\n                       <span class=\"n\">Function</span><span class=\"o\">&lt;</span><span class=\"n\">DateTime</span><span class=\"o\">,</span> <span class=\"n\">DateTime</span><span class=\"o\">&gt;</span> <span class=\"n\">getStartOfInterval</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">dimension</span> <span class=\"o\">=</span> <span class=\"n\">dimension</span><span class=\"o\">;</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">getNumberOfPoints</span> <span class=\"o\">=</span> <span class=\"n\">getNumberOfPoints</span><span class=\"o\">;</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">getPeriodFromNbOfInterval</span> <span class=\"o\">=</span> <span class=\"n\">getPeriodFromNbOfInterval</span><span class=\"o\">;</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">getStartOfInterval</span> <span class=\"o\">=</span> <span class=\"n\">getStartOfInterval</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"n\">Dimension</span><span class=\"o\">&lt;</span><span class=\"n\">Timestamp</span><span class=\"o\">&gt;</span> <span class=\"nf\">getDimension</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">dimension</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">getNumberOfPoints</span><span class=\"o\">(</span><span class=\"n\">DateTime</span> <span class=\"n\">from</span><span class=\"o\">,</span>\n                                 <span class=\"n\">DateTime</span> <span class=\"n\">to</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">getNumberOfPoints</span><span class=\"o\">.</span><span class=\"na\">apply</span><span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span> <span class=\"n\">to</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"n\">ReadablePeriod</span> <span class=\"nf\">getPeriodFromNbOfInterval</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">nbOfInterval</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">getPeriodFromNbOfInterval</span><span class=\"o\">.</span><span class=\"na\">apply</span><span class=\"o\">(</span><span class=\"n\">nbOfInterval</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"n\">DateTime</span> <span class=\"nf\">getStartOfInterval</span><span class=\"o\">(</span><span class=\"n\">DateTime</span> <span class=\"n\">from</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">getStartOfInterval</span><span class=\"o\">.</span><span class=\"na\">apply</span><span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>Using this enum, I was able to easily change the code to allow the user to specify the time periods for the graph data points.</p>\n\n<p>This :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;=</span> <span class=\"n\">Days</span><span class=\"o\">.</span><span class=\"na\">daysBetween</span><span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span> <span class=\"n\">to</span><span class=\"o\">).</span><span class=\"na\">getDays</span><span class=\"o\">();</span> <span class=\"n\">i</span><span class=\"o\">++)</span></code></pre></figure>\n\n<p>became this (note that the timePeriod was passed to the method after being specified in a query param by the user) :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">timePeriod</span><span class=\"o\">.</span><span class=\"na\">getNumberOfPoints</span><span class=\"o\">(</span><span class=\"n\">from</span><span class=\"o\">,</span> <span class=\"n\">to</span><span class=\"o\">);</span> <span class=\"n\">i</span><span class=\"o\">++)</span></code></pre></figure>\n\n<p>The code behind the getGraphDataPoints call of the Usage Analytics service is now completly independant and unaware of the time period. And as a bonus, it does respect that <em>open/closed principle</em> I was talking about earlier.</p>\n<div class=\"footnotes\">\n  <ol>\n    <li id=\"fn:footnote\">\n      <p><a href=\"http://www.objectmentor.com/resources/articles/ocp.pdf\">http://www.objectmentor.com/resources/articles/ocp.pdf</a> <a href=\"footnote\" class=\"reversefootnote\">&#8617;</a></p>\n    </li>\n  </ol>\n</div>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "46",
                "id": "1735",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1734",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1733",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "275a4dd21d57a75d04f77aceb3eaf780",
                "id": "1732",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/11/18/taking-enums-to-the-next-level/",
                "id": "1731",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/11/18/taking-enums-to-the-next-level-with-java-8/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-11-18T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "taking-enums-to-the-next-level-with-java-8",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-11-18T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/46",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/46/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/46/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/46/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/11/11/hackathon-formerly-known-as-itch-scratching-development/",
        "title": "Hackathon - formerly known as Itch Scratching Development",
        "short_URL": "http://wp.me/p7VTrW-L",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "4d750cb025083533d2f9b94a5e68191d",
        "ID": 47,
        "content": "<p>##The Non-Scratching</p>\n\n<p>Our days are packed. We work on bug fixes, we work on features that have been sold to clients, on pieces required before the next rollout or it may be on the new architecture. We work on things that have a due date or that somebody is waiting for. We don’t have much time to ponder and wonder about all those little things we would like to change or those ideas we have; for all those itches we lack the time to scratch.</p>\n\n<p>How do we encourage people to scratch the itch even if they are not part of our planning? Enter the Hackathon.\n<!-- more --></p>\n\n<p>##The Scratching</p>\n\n<p>We had our first Hackathon last Saturday. The rules were simple:</p>\n\n<ul>\n  <li>Work on something related to Coveo.</li>\n  <li>Work on something you would not work in your normal workweek (aka, don’t plan on “working”).</li>\n  <li>You demo what you did before you leave.</li>\n  <li>No beer before noon.</li>\n</ul>\n\n<p>Ok, the last one is not a rule, only a recommendation.</p>\n\n<p>I was impressed by the number of working projects presented at the end of the day. We had some complex <a href=\"http://en.wikipedia.org/wiki/Natural_language_processing\">NLP</a>  tried out, some time saving macros and some UI hacks (by non-UI people). Some even tried to prototype other technology to replace limitations in the ones we have or add new APIs into our infrastructure, and much more. We can say it was an all around success.</p>\n\n<p>Everybody that was present deserves a huge Kudos.</p>\n\n<p>##The Next Time</p>\n\n<p>This was a success that must be repeated. Things to change for the next edition? We’ll try to get more people involved. Since many participants did projects with technology they do not use daily, we should have our computers ready to hack with a setup in the expected technology done the day before. Also, stuff the fridge with beer to ensure it’s cold enough for noon.</p>\n\n<p>Meanwhile, be on the lookout. Some of those itches may come back in the planned roadmap.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "47",
                "id": "1745",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1744",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1743",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "9599146bb515321bdf6d6ac90a8d9abc",
                "id": "1742",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/11/11/hackathon/",
                "id": "1741",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/11/11/hackathon-formerly-known-as-itch-scratching-development/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-11-11T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "hackathon-formerly-known-as-itch-scratching-development",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-11-11T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/47",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/47/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/47/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/47/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/11/04/optimizing-web-application-build-process/",
        "title": "Optimizing web application build process",
        "short_URL": "http://wp.me/p7VTrW-N",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "5f294e3a37ea790714b847b703d2345c",
        "ID": 49,
        "content": "<p>At Coveo, we love to tackle new technologies. Last year was all about TypeScript, preprocessed stylesheets with LESS/SASS and optimizing our JavaScript applications with minification, concatenation and compression. Since we have a Java stack in the cloud, using the build tools that were already in place was a no brainer. We started with an Ant script to manage the build process of the Cloud Admin Web Application.</p>\n\n<!-- more -->\n\n<p>We created Ant tasks for compiling TypeScript, concatenating JavaScript libraries and compiling LESS to CSS. We then added sprites compilation, unit tests and underscore templates… up to a point where building the whole application took about 30 seconds.</p>\n\n<p>That means that every time a developer had to modify a stylesheet and wanted to test it in a browser, he had to run <code class=\"highlighter-rouge\">ant less</code>..and wait 6 or 7 seconds. After that, he could refresh the page and see the results. It was the same thing if he had to modify a TypeScript file, add a new library or add a new icon.</p>\n\n<p>We then started to be annoyed by these preprocessors and compilers and having to <strong>manually</strong> trigger each tasks. We were also annoyed by the big pile of XML configuration for Ant. We needed a new build tool better suited to our JavaScript web application needs.</p>\n\n<p>##Then came Gulp</p>\n\n<p>Working with Gulp is a pleasure. What I must insist on is Gulp’s philosophy of <strong>Code Over Configuration</strong>. The biggest pain about Ant is it’s XML configuration. I love the way we can code the build tasks just as you would code regular JavaScript. Also, Gulp is blazing fast since it can run tasks that are not dependent to each other simultaneously. Porting to Gulp led to a 9 seconds build time.</p>\n\n<p>There are a tons of great official and third-party plugins targeting a JavaScript stack. The plugins are all searchable right on <a href=\"http://gulpjs.com/plugins/\">Gulp’s website</a>. Each plugins can be installed via npm and saved to your package.json’s devDependencies.</p>\n\n<p>##Great plugins we use</p>\n\n<p>###Watch</p>\n\n<p>Watch is integrated into Gulp and must be one of its greatest features. Watch allows to select files and monitor for changes. We can hook those changes to specific tasks, so modifications to LESS files will trigger LESS compilation automatically. Watch improves our productivity a lot!</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\">   \n<span class=\"kd\">var</span> <span class=\"nx\">gulp</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp'</span><span class=\"p\">);</span>\n    \n<span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">task</span><span class=\"p\">(</span><span class=\"s1\">'watch'</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">watch</span><span class=\"p\">(</span><span class=\"s1\">'./stylesheets/**/*.less'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'less'</span><span class=\"p\">]);</span>\n    <span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">watch</span><span class=\"p\">(</span><span class=\"s1\">'./templates/**/*.ejs'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'templates'</span><span class=\"p\">]);</span>\n    <span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">watch</span><span class=\"p\">(</span><span class=\"s1\">'./src/**/*.ts'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'ts:compile'</span><span class=\"p\">]);</span>\n    <span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">watch</span><span class=\"p\">(</span><span class=\"s1\">'./test/src/**/*.ts'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'test:compile'</span><span class=\"p\">]);</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>###<a href=\"https://github.com/ingro/gulp-template-compile\">Template compile</a></p>\n\n<p>The Cloud Admin Web Application is a <a href=\"http://en.wikipedia.org/wiki/Single-page_application\">Single Page Application</a> built with <a href=\"http://marionettejs.com/\">Marionette.JS</a> and our template engine of choice is <a href=\"http://underscorejs.org/\">Underscore.JS</a>. When developing, we want each template separated in their own <a href=\"http://www.embeddedjs.com/\">EJS files</a>, but in production we need the best performance. Sure, we could use underscore’s _.template method on the client as stated in <a href=\"http://source.coveo.com/2014/10/19/reusing-templates-underscore/\">Vincent’s latest post</a> but <a href=\"https://github.com/ingro/gulp-template-compile\">gulp-template-compile</a> goes a step further by concatenating all of our templates into a single file and generating plain JavaScript functions that are usable later.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"kd\">var</span> <span class=\"nx\">gulp</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp'</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">template</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp-template-compile'</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">concat</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp-concat'</span><span class=\"p\">);</span>\n\t\n<span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">task</span><span class=\"p\">(</span><span class=\"s1\">'templates'</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n     <span class=\"k\">return</span> <span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">src</span><span class=\"p\">(</span><span class=\"s1\">'./templates/**/*.ejs'</span><span class=\"p\">)</span>\n         <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">template</span><span class=\"p\">({</span>\n             <span class=\"na\">namespace</span><span class=\"p\">:</span> <span class=\"s1\">'CoveoTemplates'</span>\n         <span class=\"p\">}))</span>\n         <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">concat</span><span class=\"p\">(</span><span class=\"s1\">'templates.js'</span><span class=\"p\">))</span>\n         <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">dest</span><span class=\"p\">(</span><span class=\"s1\">'target/package/templates'</span><span class=\"p\">));</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>Templates are now in <code class=\"highlighter-rouge\">target/package/templates/templates.js</code> and accessible with <code class=\"highlighter-rouge\">window.CoveoTemplates.templateName(data)</code>.</p>\n\n<p>###<a href=\"https://github.com/jstuckey/gulp-gzip\">Gzip</a></p>\n\n<p>As you may know, the Cloud Admin Web application is hosted on AWS S3. Since S3 is for static file serving and doesn’t allow <em>on-the-fly</em> compression, we need to gzip files before uploading them to S3. With gulp-gzip we simply pipe gzip() into our task’s stream and we have a compressed gzipped file.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"kd\">var</span> <span class=\"nx\">gulp</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp'</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">gzip</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp-gzip'</span><span class=\"p\">);</span>\n    \n<span class=\"c1\">// Gzip the file CoveoJsAdmin.js</span>\n<span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">task</span><span class=\"p\">(</span><span class=\"s1\">'gzip'</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">src</span><span class=\"p\">(</span><span class=\"s1\">'target/package/js/CoveoJsAdmin.js'</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">gzip</span><span class=\"p\">())</span>\n    <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">dest</span><span class=\"p\">(</span><span class=\"s1\">'target/package/js'</span><span class=\"p\">));</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>This will output the gzipped <code class=\"highlighter-rouge\">CoveoJsAdmin.js.gz</code> file in <code class=\"highlighter-rouge\">target/package/js</code>.</p>\n\n<p>###Minify, concatenate and source maps\n<a href=\"https://github.com/ingro/gulp-template-compile\">gulp-concat</a> allows us to to combine all the files needed into a single file while <a href=\"https://github.com/terinjokes/gulp-uglify/\">gulp-uglify</a> minifies (and uglifies!) our files to shrink them to a minimum weight. <a href=\"https://github.com/floridoo/gulp-sourcemaps\">gulp-sourcemaps</a> lets us know which code belongs to which file for easier debugging.  <a href=\"https://github.com/robrich/gulp-if\">gulp-if</a> allows us to add conditions to tasks. We use a <code class=\"highlighter-rouge\">--min</code> flag to determine if we minify and gzip or not.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\">    \n<span class=\"kd\">var</span> <span class=\"nx\">gulp</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp'</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">gutil</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp-util'</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">gulpif</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp-if'</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">concat</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp-concat'</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">uglify</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp-uglify'</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">gzip</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp-gzip'</span><span class=\"p\">);</span>\n    \n<span class=\"c1\">// Check for '--min' flag (true if present)</span>\n<span class=\"kd\">var</span> <span class=\"nx\">useMinifiedSources</span> <span class=\"o\">=</span> <span class=\"nx\">gutil</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">min</span><span class=\"p\">;</span>\n    \n<span class=\"c1\">// Minify and gzip</span>\n<span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">task</span><span class=\"p\">(</span><span class=\"s1\">'libraries'</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n     <span class=\"k\">return</span> <span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">src</span><span class=\"p\">(</span><span class=\"s1\">'lib/**/*'</span><span class=\"p\">)</span>\n           <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">concat</span><span class=\"p\">(</span><span class=\"s1\">'CoveoJsAdmin.Dependencies.js'</span><span class=\"p\">))</span>\n           <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">dest</span><span class=\"p\">(</span><span class=\"s1\">'target/package/js'</span><span class=\"p\">))</span>\n           <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">gulpif</span><span class=\"p\">(</span><span class=\"nx\">useMinifiedSources</span><span class=\"p\">,</span> <span class=\"nx\">uglify</span><span class=\"p\">()))</span>\n           <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">gulpif</span><span class=\"p\">(</span><span class=\"nx\">useMinifiedSources</span><span class=\"p\">,</span> <span class=\"nx\">rename</span><span class=\"p\">(</span><span class=\"s1\">'CoveoJsAdmin.Dependencies.min.js'</span><span class=\"p\">)))</span>\n           <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">gulpif</span><span class=\"p\">(</span><span class=\"nx\">useMinifiedSources</span><span class=\"p\">,</span> <span class=\"nx\">gzip</span><span class=\"p\">(</span><span class=\"nx\">gzipOptions</span><span class=\"p\">)))</span>\n           <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">gulpif</span><span class=\"p\">(</span><span class=\"nx\">useMinifiedSources</span><span class=\"p\">,</span> <span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">dest</span><span class=\"p\">(</span><span class=\"s1\">'target/package/js'</span><span class=\"p\">)));</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>This will take all our libraries files (Backbone, JQuery, Underscore, etc) located in <code class=\"highlighter-rouge\">/lib</code> and bundle them into <code class=\"highlighter-rouge\">CoveoJsAdmin.Dependencies.js</code>. If the flag <code class=\"highlighter-rouge\">--min</code> is enabled when calling gulp, it will also minify and rename to <code class=\"highlighter-rouge\">CoveoJsAdmin.Dependencies.min.js</code>and gzip the file to <code class=\"highlighter-rouge\">CoveoJsAdmin.Dependencies.min.js.gz</code>. The generated files will be output to <code class=\"highlighter-rouge\">target/package/js</code>.</p>\n\n<p>###Other notable plugins we use\n - <a href=\"https://github.com/peter-vilja/gulp-clean\">gulp-clean,</a> to delete generated files and get a fresh start\n - <a href=\"https://github.com/gulpjs/gulp-util\">gulp-util</a>, for easier logging in tasks and passing arguments via the CLI\n - <a href=\"https://github.com/plus3network/gulp-less\">gulp-less</a>, for those awesome stylesheets\n - <a href=\"https://github.com/kotas/gulp-tsc/\">gulp-tsc</a>, to compile our TypeScript</p>\n\n<p>###What’s coming next</p>\n\n<p>Microsoft’s <a href=\"http://blogs.msdn.com/b/typescript/archive/2014/10/22/typescript-and-the-road-to-2-0.aspx\">roadmap to 2.0</a> is very promising!. Especially with the latest tsc 1.1.0.1 compiler that should save us more than 30% compile time. We’re actually updating the compiler and adapting our codebase to support it soon. Some plugins offer <a href=\"https://github.com/gulpjs/gulp/#incremental-builds\">incremental builds</a>, we’re actually looking at some to ensure compile time will be even shorter. Also, we still have development scripts in Python and we would love to translate them to JavaScript to build the project as easily as</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>    hg pull\n</code></pre>\n</div>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>    npm install\n</code></pre>\n</div>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>    gulp\n</code></pre>\n</div>\n\n<p>We’ll get there soon!</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "49",
                "id": "1765",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1764",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1763",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "497cb73a7b8fcb7b3adaf4d8ee1bc65d",
                "id": "1762",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/11/04/optimizing-web-app-build-process/",
                "id": "1761",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/11/04/optimizing-web-application-build-process/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-11-04T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "optimizing-web-application-build-process",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-11-04T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/49",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/49/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/49/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/49/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/11/04/working-remotely/",
        "title": "Working Remotely",
        "short_URL": "http://wp.me/p7VTrW-M",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "82730070e2a465da0378b6b639a05915",
        "ID": 48,
        "content": "<p>I’ve been working remotely for more than two years now, and I thought I’d add my own experience to the rather large amount of similar posts out there on the web.</p>\n\n<!-- more -->\n\n<p>First some background. I’m a long time Coveo employee, and before going remote I worked on-site for many years. I’m a Canadian who, having married a frenchwoman, now lives in France. My job is split between development and some management, with a strong emphasis on the former. I head a 7 person strong team responsible for our Salesforce integration, JS UI front-end and REST backend, and also our mobile apps.</p>\n\n<p>One particular (I think) aspect of my own situation is the 6 hours time zone difference between me and the home office. Also, I should note that most Coveo R&amp;D staff are on-site, although we do have some other remote developers but none as far away as me.</p>\n\n<p>When thinking about remote work, communication is always the first thing coming up, so I’ll dedicate this post to this topic.</p>\n\n<h1 id=\"find-ways-to-build-social-ties\">Find ways to build social ties</h1>\n\n<p>When I started working remotely, I learned quickly that you can’t depend only on email, scheduled meetings and phone calls to properly interact with coworkers. Social relationships are built on more than strict information transfer; and you need to form ties with your coworkers in order to create a productive environment. In an on-site setup this happens through casual conversations (the coffee machine comes to mind). In short, you need a way to hang out with the folks.</p>\n\n<p>Here at Coveo we use <a href=\"https://slack.com/\">Slack</a> to host chat rooms dedicated to various topics. Each team typically has a room that members use to discuss various topics. Other employees can also use that channel to ask questions, enquire about issues they are having, etc. Discussions often fall outside of strictly work-related subjects (we even have a #phones channel), and that’s a great thing for remote workers, as it replaces in part the casual conversations you’d have up in the hallway.</p>\n\n<p>Now, for 100% remote teams, maybe Slack (or any similar service) is good enough, but in my case I’m working with a bunch of folks sitting right next to each other. Often they’ll find it easier to just discuss something instead of bringing the discussion to Slack.</p>\n\n<p>What I came up with is using a permanent Google Hangout running on an old laptop sitting in the office near my teammates. Whenever I’m working at the same time as folks in Quebec, I’ll connect to this hangout and let the audio feed play on my laptop speakers. I also put the video feed in a small window in the corner of one of my (numerous) screens. This way, the hangout feels like a window to the office. I can hear conversations between my teammates, and jump in whenever I like (which I do quite often, being of the opinionated trollish kind).</p>\n\n<p>Some might think that’s creepy having a coworker essentially eavesdropping all conversations, but when you think about it I’d hear the same stuff if I was sitting there, and whenever I’m connected my face is shown on full screen, so it’s pretty obvious I’m “here”. In fact, I never had anyone complain about that situation. I did frighten some of the cleaning staff while doing tests, but that’s another story.</p>\n\n<p>On top of that, 4 or 5 times a year I jump on a plane and go spend a week or two at the office. It’s essentially a social operation; there is not really any task that <em>requires</em> me to be onsite, but to me it’s essential nonetheless. By going there I’m able to meet people with whom I’d otherwise never talk just because we work on unrelated things. I try to use the opportunity to go and meet new hires, although with the company growing it’s becoming somewhat harder. Also, having the opportunity to go drink a beer with the guys really helps with the whole social relationship thing I’ve mentioned earlier.</p>\n\n<h1 id=\"be-good-at-email\">Be good at email</h1>\n\n<p>The last thing I wanted to mention is that, as a remote worker, you need to be good at email. Even with all the futuristic stuff I mentioned above, email is going to be a big part of your life. Personally this is something I haven’t mastered yet, but I’m getting better… I think.</p>\n\n<p>Sometimes, there is a situation or an opinion that I need to convey to someone. When I was on-site, I’d just barge in that person’s office and trust body language and frantic hand movements to put the right emphasis on things. By looking at his/her reaction I’d get a good feeling of how my message was being understood and interpreted. Not so much with email.</p>\n\n<p>My first reaction to that was to include as much information as possible in my emails. I created long, flowing dissertations painstakingly explaining the minute details of whatever was my subject. And nobody read them. Hell, you’re probably not even reading this far into this post.</p>\n\n<p>So my advice is: keep those email short, and to the point. Re-read them, and remove every word or sentence that isn’t important. You’ll certainly omit details, but you’ll be able to reach people. There is always replies or followup discussions to work on the subtler nuances.</p>\n\n<p>There are so many much more things to discuss about being a remote worker. In fact I removed whole paragraphs from this post; I might use them in a followup sometime. Anyway. That’s it for now.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "48",
                "id": "1755",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1754",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1753",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "72b7e77b16773cb8bd3c156c5c5d4f2d",
                "id": "1752",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/11/04/remote-working/",
                "id": "1751",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/11/04/working-remotely/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-11-04T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "working-remotely",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-11-04T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/48",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/48/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/48/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/48/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/10/27/customizing-the-insight-panel/",
        "title": "Customizing the Insight Panel",
        "short_URL": "http://wp.me/p7VTrW-O",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "18286331a735a271c1b405603bed684d",
        "ID": 50,
        "content": "<p>If you haven’t deployed the insight panels in your organization yet, here is a link to the procedure to get it done: <a href=\"http://onlinehelp.coveo.com/en/cloud/installing_the_coveo_for_salesforce_application.htm\">Installing the Coveo for Salesforce Application</a>.</p>\n\n<p>Out of the box there are several predefined Insight Panels with pertinent queries. That is a great starting point, but even more usefulness can be attained by customizing the insight panels to meet the needs and the ways of working of the users.</p>\n\n<!-- more -->\n\n<p>One good example to demonstrate the usage is a “related comments” insight panel. Here at Coveo, we document our cases in the case comments, so looking up the comments that are relevant to the case can help give us precious insight that can help orient towards a path to resolution more quickly. In this post we will walk through the procedure for creating a customized insight panel using the Query Builder.</p>\n\n<p>Once the Insight Panels are deployed, they should look something like this:\n<img src=\"http//onlinehelp.coveo.com/images/CoveoInsightPanel.png\" alt=\"Coveo Insight Panel\" /></p>\n\n<p>Let’s create a new tab to hold our custom-built query by pressing the menu icon (☰) at the far right and selecting “add a tab”, and call it “Related Comments”.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/AddTab.png\" alt=\"Add a Tab\" /></p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/CreateCoveoInsightTab.png\" alt=\"Create a Coveo Insight Tab\" /></p>\n\n<p>Next we add a box to it pressing the menu icon (☰) at the far right and selecting “add a box”, or pressing the orange “add a box” button.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/AddBox.png\" alt=\"Add a Box\" /></p>\n\n<p>And then select the Query Builder.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/QueryBuilder.png\" alt=\"Query Builder\" /></p>\n\n<p>The Contextual Query tab allows us to build a query by selecting criteria from pick lists, in this example, we want to return Case Comments in our Insight Panel.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/CaseComment.png\" alt=\"Case Comment\" /></p>\n\n<p>Linking fields is used to boost the ranking when its content matches that for the current Salesforce context. In this case we want to give more credence to Case Comments that match the Subject and Summary of the current case.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/MatchSubjectSummary.png\" alt=\"Match Subject and Summary\" /></p>\n\n<p>Next we use the advanced filtering to give boost the relevancy of the Case Comments that match with the Case’s subject or summary. In this example, we decide that a match in “Subject” should be considered more relevant than a match in “Summary”</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/BoostSubject.png\" alt=\"Boost the Subject\" /></p>\n\n<p>We’ll also use the custom filters to make sure the comments from the last year appear first by giving them a relevancy boost. We could have made this condition mandatory, but we’d like to keep the old comments in the search results if there are any, we just want to make sure they appear after more current results.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/BoostRecentComments.png\" alt=\"Boost Recent Comments\" /></p>\n\n<p>Contextual query generates the query using the Coveo query extension language based on our configuration.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/GeneratedContextualQuery.png\" alt=\"Generated Contextual Query\" /></p>\n\n<p>Saving this brings us back to our case, where we can see that the Coveo Insight Panel is now returning related case comments:</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/RelatedRecentComments.png\" alt=\"Related Recent Comments\" /></p>\n\n<p>We can see that the Query builder tool can easily be used to create complex and useful queries to automatically present personalized context related content in search interfaces without the end-users even having to type a query.</p>\n\n<p>Even more flexibility in the query can be obtained by <a href=\"http://onlinehelp.coveo.com/en/Cloud/creating_a_coveo_insight_box_using_the_advanced_mode.htm\">Creating a Coveo Insight Box Using the Advanced Mode</a> in Query Extension Language directly. The full reference for the query extension language is available on the <a href=\"https://developers.coveo.com/display/SearchREST/Query+Extension+Language\">Coveo query extension language</a> page.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "50",
                "id": "1775",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1774",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1773",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "bd1a03688992e31a6d13b98c4f624b1a",
                "id": "1772",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/10/27/customizing-the-insight-panel/",
                "id": "1771",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/10/27/customizing-the-insight-panel/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-10-27T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "customizing-the-insight-panel",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-10-27T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/50",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/50/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/50/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/50/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/10/19/reusing-templates-with-underscorejs/",
        "title": "Reusing templates with UnderscoreJS",
        "short_URL": "http://wp.me/p7VTrW-P",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "8759d7683a455fd3ee783a7fe6713518",
        "ID": 51,
        "content": "<p>UnderscoreJS is probably one of my favorite template engines. I’ve been working with Mustache or Handlebars, and they just don’t offer the same flexibility as Underscore. Even more, we’ve been using this framework extensively in our JavaScript UI Framework, always delivering great results.</p>\n\n<!-- more -->\n\n<p>It may happen that you want to render multiple templates in a single page. For instance, let’s say that we’d like to have a page displaying multiple search results categories : Products, Downloads etc.</p>\n\n<h2 id=\"defining-our-templates\">Defining our templates</h2>\n\n<p>Let’s start by creating our first Underscore template for the Products section. It basically just renders a list of products with their pictures and name. There’s also a section that will be used to display more/less results.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-jsp\"><div id=\"productsContainer\">\n   \n    0) { %&gt;\n       <h2>Products</h2>\n       <span class=\"showMoreResults\">Show more results in Products</span>\n       <span class=\"showLessResults\">Show fewer results in Products</span>\n       <div class=\"resultsContainer\">\n           <div class=\"results\">\n               \n                       <div class=\"productElement\">\n                           <img>'/&gt;\n                           <div class=\"productText\">\n                               <a class=\"clickableUri\">\"&gt;\n                                   <span></span>\n                               </a>\n                           </div>\n                       &lt;/div&gt;\n               &lt;% }); %&gt;\n           &lt;/div&gt;\n       &lt;/div&gt;\n   &lt;% } %&gt;\n   &lt;/script&gt;\n&lt;/div&gt;</code></pre></figure>\n\n<p>PS : Don’t mind the “ToCoveoFieldName” syntax, this is coming from a Coveo for Sitecore example.</p>\n\n<p>We then need to compile and render our template with results. In a  tag at the beginning of our HTML file, we'll simply compile our template in a variable.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"kd\">var</span> <span class=\"nx\">productsTemplate</span> <span class=\"o\">=</span> <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">template</span><span class=\"p\">(</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"script.productsTemplate\"</span><span class=\"p\">).</span><span class=\"nx\">html</span><span class=\"p\">());</span></code></pre></figure>\n\n<p>Obviously, if we want the whole thing to actually do something, we’ll need to render our template with relevant results. Let’s perform a query directly on the REST endpoint to get our results from the CES index. In this example, the productsQuery/numberOfResults are parameters passed to this function, it could be anything.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Rest</span><span class=\"p\">.</span><span class=\"nx\">SearchEndpoint</span><span class=\"p\">.</span><span class=\"nx\">endpoints</span><span class=\"p\">[</span><span class=\"s1\">'default'</span><span class=\"p\">].</span><span class=\"nx\">search</span><span class=\"p\">({</span>\n    <span class=\"na\">q</span><span class=\"p\">:</span> <span class=\"nx\">productsQuery</span><span class=\"p\">,</span>\n    <span class=\"na\">numberOfResults</span><span class=\"p\">:</span> <span class=\"nx\">numberOfResults</span>\n<span class=\"p\">}).</span><span class=\"nx\">done</span><span class=\"p\">(</span><span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">results</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">results</span><span class=\"p\">.</span><span class=\"nx\">results</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"#productsContainer\"</span><span class=\"p\">).</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">template</span><span class=\"p\">({</span><span class=\"na\">results</span><span class=\"p\">:</span> <span class=\"nx\">results</span><span class=\"p\">}));</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>This will actually output the resulting HTML in the page. You may notice that i’m using the results object, which actually contains the <a href=\"https://developers.coveo.com/display/SearchREST/Query+Results\">Query Results</a> object returned by the REST endpoint. So the whole thing work, and we have products and rainbows displayed in our page. SUDDENLY, someone asks us to display another section, based on Downloads this time. Alright! Let’s create another template.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-jsp\"><div id=\"downloadsContainer\" class=\"searchContainer\">\n  \n      = 0) { %&gt;\n          <h2>Downloads</h2>\n          <span class=\"showMoreResults\">Show more results in Downloads</span>\n          <span class=\"showLessResults\">Show fewer results in Downloads</span>\n          <div class=\"results\">\n         \n              <div class=\"downloadsElement\">\n                  <div class=\"downloadsInformations\">\n                      <a class=\"clickableUri\">\"&gt;\n                          \n                      </a>\n                      <div>\n                          <span class=\"downloadsSize\">kB</span> \n                          <span class=\"downloadsExtension\"></span>\n                      </div>\n                  &lt;/div&gt;\n              &lt;/div&gt;\n          &lt;% }); %&gt;\n         &lt;/div&gt;\n      &lt;% } %&gt;\n  &lt;/script&gt;\n&lt;/div&gt;</code></pre></figure>\n\n<p>This time, we’re outputting slightly different informations : we have a link, as well as the file size and the file extension. Just like we did before for the Products, we need to compile and then render our template. We’ll extract our query in an utility function, since we don’t want to repeat code, don’t we?</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"kd\">var</span> <span class=\"nx\">productsTemplate</span> <span class=\"o\">=</span> <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">template</span><span class=\"p\">(</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"script.productsTemplate\"</span><span class=\"p\">).</span><span class=\"nx\">html</span><span class=\"p\">());</span>\n<span class=\"kd\">var</span> <span class=\"nx\">downloadsTemplate</span> <span class=\"o\">=</span> <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">template</span><span class=\"p\">(</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"script.downloadsTemplate\"</span><span class=\"p\">).</span><span class=\"nx\">html</span><span class=\"p\">());</span>\n\n<span class=\"nx\">performQuery</span><span class=\"p\">(</span><span class=\"nx\">productsQuery</span><span class=\"p\">,</span> <span class=\"nx\">numberOfResults</span><span class=\"p\">,</span> <span class=\"s2\">\"#productsContainer\"</span><span class=\"p\">);</span>\n<span class=\"nx\">performQuery</span><span class=\"p\">(</span><span class=\"nx\">downloadsQuery</span><span class=\"p\">,</span> <span class=\"nx\">numberOfResults</span><span class=\"p\">,</span> <span class=\"s2\">\"#downloadsContainer\"</span><span class=\"p\">);</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">performQuery</span><span class=\"p\">(</span><span class=\"nx\">queryToPerform</span><span class=\"p\">,</span> <span class=\"nx\">numberOfResults</span><span class=\"p\">,</span> <span class=\"nx\">container</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Rest</span><span class=\"p\">.</span><span class=\"nx\">SearchEndpoint</span><span class=\"p\">.</span><span class=\"nx\">endpoints</span><span class=\"p\">[</span><span class=\"s1\">'default'</span><span class=\"p\">].</span><span class=\"nx\">search</span><span class=\"p\">({</span>\n      <span class=\"na\">q</span><span class=\"p\">:</span> <span class=\"nx\">queryToPerform</span><span class=\"p\">,</span>\n      <span class=\"na\">numberOfResults</span><span class=\"p\">:</span> <span class=\"nx\">numberOfResults</span>\n  <span class=\"p\">}).</span><span class=\"nx\">done</span><span class=\"p\">(</span><span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">results</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">results</span><span class=\"p\">.</span><span class=\"nx\">results</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n          <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nx\">container</span><span class=\"p\">).</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">template</span><span class=\"p\">({</span><span class=\"na\">results</span><span class=\"p\">:</span> <span class=\"nx\">results</span><span class=\"p\">}));</span>\n      <span class=\"p\">}</span>\n  <span class=\"p\">});</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>Excellent. We have Products and Downloads rendered, our customer is happy and we’re riding unicorns. But we’re not 100% happy. Take a look at this little piece of HTML that gets repeated :</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-jsp\"> &lt;h2&gt;Products&lt;/h2&gt;\n &lt;span class=\"showMoreResults\"&gt;Show more results in Products&lt;/span&gt;\n &lt;span class=\"showLessResults\"&gt;Show fewer results in Products&lt;/span&gt;</code></pre></figure>\n\n<p>This may seems small, but let’s say we add 6 more templates in our page (that actually happened), it will get impossible to maintain. Especially if you decide to change the CSS class of one of these elements, for instance.</p>\n\n<h2 id=\"extracting-a-header-template\">Extracting a header template</h2>\n\n<p>My solution to our repetition problem is to create a new header template, by extracting and parametizing our little piece of markup. Our header template will use a category as parameter.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-jsp\">\n <h2></h2>\n <span class=\"showMoreResults\">Show more results in </span>\n <span class=\"showLessResults\">Show fewer results in </span>\n</code></pre></figure>\n\n<p>We then need to edit our JavaScript to take this new template into account.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"kd\">var</span> <span class=\"nx\">headerTemplate</span> <span class=\"o\">=</span> <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">template</span><span class=\"p\">(</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"script.headerTemplate\"</span><span class=\"p\">).</span><span class=\"nx\">html</span><span class=\"p\">());</span>\n<span class=\"kd\">var</span> <span class=\"nx\">productsTemplate</span> <span class=\"o\">=</span> <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">template</span><span class=\"p\">(</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"script.productsTemplate\"</span><span class=\"p\">).</span><span class=\"nx\">html</span><span class=\"p\">());</span>\n<span class=\"kd\">var</span> <span class=\"nx\">downloadsTemplate</span> <span class=\"o\">=</span> <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">template</span><span class=\"p\">(</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"script.downloadsTemplate\"</span><span class=\"p\">).</span><span class=\"nx\">html</span><span class=\"p\">());</span>\n\n<span class=\"nx\">performQuery</span><span class=\"p\">(</span><span class=\"nx\">productsQuery</span><span class=\"p\">,</span> <span class=\"nx\">numberOfResults</span><span class=\"p\">,</span> <span class=\"s2\">\"#productsContainer\"</span><span class=\"p\">);</span>\n<span class=\"nx\">performQuery</span><span class=\"p\">(</span><span class=\"nx\">downloadsQuery</span><span class=\"p\">,</span> <span class=\"nx\">numberOfResults</span><span class=\"p\">,</span> <span class=\"s2\">\"#downloadsContainer\"</span><span class=\"p\">);</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">performQuery</span><span class=\"p\">(</span><span class=\"nx\">queryToPerform</span><span class=\"p\">,</span> <span class=\"nx\">numberOfResults</span><span class=\"p\">,</span> <span class=\"nx\">container</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">Rest</span><span class=\"p\">.</span><span class=\"nx\">SearchEndpoint</span><span class=\"p\">.</span><span class=\"nx\">endpoints</span><span class=\"p\">[</span><span class=\"s1\">'default'</span><span class=\"p\">].</span><span class=\"nx\">search</span><span class=\"p\">({</span>\n      <span class=\"na\">q</span><span class=\"p\">:</span> <span class=\"nx\">queryToPerform</span><span class=\"p\">,</span>\n      <span class=\"na\">numberOfResults</span><span class=\"p\">:</span> <span class=\"nx\">numberOfResults</span>\n  <span class=\"p\">}).</span><span class=\"nx\">done</span><span class=\"p\">(</span><span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">results</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">results</span><span class=\"p\">.</span><span class=\"nx\">results</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n          <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nx\">container</span><span class=\"p\">).</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">template</span><span class=\"p\">({</span><span class=\"na\">header</span><span class=\"p\">:</span> <span class=\"nx\">headerTemplate</span><span class=\"p\">,</span> <span class=\"na\">results</span><span class=\"p\">:</span> <span class=\"nx\">results</span><span class=\"p\">}));</span>\n      <span class=\"p\">}</span>\n  <span class=\"p\">});</span>\n<span class=\"p\">}</span></code></pre></figure>\n\n<p>You can see that when we append the HTML, we now pass the headerTemplate to the current template we’re rendering. Last thing we need, let’s edit our templates to use this new header parameter.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-jsp\"><div id=\"productsContainer\">\n   \n    0) { %&gt;\n       \n       <div class=\"resultsContainer\">\n           <div class=\"results\">\n               \n                       <div class=\"productElement\">\n                           <img>'/&gt;\n                           <div class=\"productText\">\n                               <a class=\"clickableUri\">\"&gt;\n                                   <span></span>\n                               </a>\n                           </div>\n                       &lt;/div&gt;\n               &lt;% }); %&gt;\n           &lt;/div&gt;\n       &lt;/div&gt;\n   &lt;% } %&gt;\n   &lt;/script&gt;\n&lt;/div&gt;</code></pre></figure>\n\n<figure class=\"highlight\"><pre><code class=\"language-jsp\"><div id=\"downloadsContainer\" class=\"searchContainer\">\n  \n      = 0) { %&gt;\n          \n          <div class=\"results\">\n         \n              <div class=\"downloadsElement\">\n                  <div class=\"downloadsInformations\">\n                      <a class=\"clickableUri\">\"&gt;\n                          \n                      </a>\n                      <div>\n                          <span class=\"downloadsSize\">kB</span> \n                          <span class=\"downloadsExtension\"></span>\n                      </div>\n                  &lt;/div&gt;\n              &lt;/div&gt;\n          &lt;% }); %&gt;\n         &lt;/div&gt;\n      &lt;% } %&gt;\n  &lt;/script&gt;\n&lt;/div&gt;</code></pre></figure>\n\n<p>When rendering one of those templates, Underscore will render the child templates as well (just like the header template there). Much cleaner!</p>\n\n<p>That’s it for now! Feel free to use this trick in your projects or ask for more examples!</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "51",
                "id": "1785",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1784",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1783",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "25093cd2b9afd5e1717895ecb907872c",
                "id": "1782",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/10/19/reusing-templates-underscore/",
                "id": "1781",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/10/19/reusing-templates-with-underscorejs/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-10-19T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "reusing-templates-with-underscorejs",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-10-19T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/51",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/51/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/51/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/51/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/10/15/customize-ranking-with-qre/",
        "title": "Customize Ranking with QRE",
        "short_URL": "http://wp.me/p7VTrW-Q",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "bb8aa26edd4fb48065ea49409664bc27",
        "ID": 52,
        "content": "<p>A query ranking expression (QRE) modifies the ranking score of search results matching a query expression.</p>\n\n<!-- more -->\n\n<h2 id=\"what-is-the-impact-on-the-final-ranking-score\">What is the impact on the final ranking score?</h2>\n\n<p>The QRE feature is computed during the first phase of the ranking algorithm. This will have an impact on all documents, especially in case where it’s only the QRE that boost the document’s weight.</p>\n\n<p>Since the September 2013 build, a QRE interface was added to the Interface Editor. The QRE interface can be found under Interface Editor - Search Interfaces – Features - Ranking.</p>\n\n<p><img src=\"http//www.coveo.com/images/QREInterface.png\" alt=\"The QRE Interface\" /></p>\n\n<p>With this interface, QRE can be modified directly from the Interface Editor without using CES. All QRE created within the Interface Editor are specific to the search interface that is selected in “current Interface” dropdown menu. Therefore, the QRE will affect every queries made in that search interface.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>A query is made for “pdf”, as you can see the first result is not a pdf file. We can boost PDF type document weight by using QRE.</p>\n\n<p><img src=\"http//www.coveo.com/images/TotalRankingWeight.png\" alt=\"Total Ranking Weight\" /></p>\n\n<p>A QRE is made for @sysfiletype==”pdf” query expression and the +100 modifier value. In the search results, all documents for which PDF is the file type will have 1000 added to their normal ranking score. The ranking score of returned documents with other file types is not affected.</p>\n\n<p><img src=\"http//www.coveo.com/images/AddingQRE.png\" alt=\"Adding a QRE\" /></p>\n\n<p><img src=\"http//www.coveo.com/images/QREModifier.png\" alt=\"QRE Modifier\" /></p>\n\n<p>The impact on the final score is:</p>\n\n<ul>\n  <li>(+100) will increase your document QRE weight by 1000</li>\n  <li>(+50)  will increase your document QRE weight by 500</li>\n  <li>(-50) will decrease your document QRE weight by 500</li>\n  <li>(-100) will decrease your document QRE weight by 1000</li>\n</ul>\n\n<p>You can also select “custom” in order to enter a custom value.</p>\n\n<p>Now if we perform the same query, some PDF type documents will be listed first.</p>\n\n<p><img src=\"http//www.coveo.com/images/QREValue.png\" alt=\"QRE Value\" /></p>\n\n<h2 id=\"why-is-there-a-qre-by-default-for-some-documents-and-not-for-the-others\">Why is there a QRE by default for some documents and not for the others?</h2>\n\n<p><img src=\"http//www.coveo.com/images/AsQREValue.png\" alt=\"Document with a QRE Value\" /></p>\n\n<p><img src=\"http//www.coveo.com/images/AsNoQREValue.png\" alt=\"Document wihtout a QRE Value\" /></p>\n\n<p>You need to compare the language of your search interface versus the @syslanguage of the document in CES Admin tool – Content – Index Browser</p>\n\n<p><img src=\"http//www.coveo.com/images/DocumentLanguage.png\" alt=\"Document Language\" /></p>\n\n<ul>\n  <li>If the language of the document matches the language of the search interface, the QRE of the document will automatically be: 600.</li>\n  <li>If the language of the document doesn’t match the language of the search interface or @syslanguage is missing under the Field tab, then the QRE of the document will automatically be: 0</li>\n</ul>\n\n<h2 id=\"how-to-implement-qres\">How to Implement QREs?</h2>\n\n<ul>\n  <li>An administrator can add QREs to specific search interfaces from the Interface Editor for a search interface (see <a href=\"http://www.coveo.com/go?dest=adminhelp70&amp;lcid=9&amp;context=1028\">Customizing the Ranking for a .NET Search Interface</a>) or for a Related Results panel (see <a href=\"//www.coveo.com/go?dest=adminhelp70&amp;lcid=9&amp;context=1034)\">Adding or Customizing a Related Results Panel</a>.</li>\n  <li>A developer can implement QREs programmatically (see <a href=\"https://developers.coveo.com/x/OIAl\">Adding Query Ranking Expressions to a Search Interfaces</a>).</li>\n</ul>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "52",
                "id": "1797",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1796",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1795",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "2fbf0f531b469133b3c97c075e374901",
                "id": "1794",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/10/15/customize-ranking-with-qre/",
                "id": "1793",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/10/15/customize-ranking-with-qre/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-10-15T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "customize-ranking-with-qre",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-10-15T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/52",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/52/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/52/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/52/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/10/03/ad-hoc-parsing-using-parser-combinators/",
        "title": "Ad-hoc parsing using parser combinators",
        "short_URL": "http://wp.me/p7VTrW-R",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "cdc1fc8c0198b47a0a10a076dfb7e7ae",
        "ID": 53,
        "content": "<p>If you work for any given amount of time as a software developer, one problem you’ll end up with is parsing structured text to extract meaningful information.</p>\n\n<!-- more -->\n\n<p>I’ve faced this issue more than I care to remember. I even think that’s why I learned regular expressions in the first place. But, <a href=\"http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454\">as Internet wisdom will teach you</a> regexes are only suitable for a subset of the parsing problems out there. We learn it at school: grammars are the way to go. Still, it is my deep belief that most engineers, when faced with a parsing problem, will first try to weasel their way out using regular expressions. Why? Well…</p>\n\n<p><img src=\"http//stackoverflow.com/images/posts/science-vs-engineering.jpg\" alt=\"image\" /></p>\n\n<p>(do try that trick with the forks, it’s awesome)</p>\n\n<p>There are many tools you can use to generate parsers in various languages. Most of those involve running some custom compilation step over your grammar file, from which a set of source code files will be produced. You’ll have to include those in your build, and then figure out a way to use them to transform your input text into a meaningful structure. Hmm. Better go fetch the duct tape.</p>\n\n<p>Enter parser combinators. As <a href=\"http://en.wikipedia.org/wiki/Parser_combinator\">Wikipedia states</a>, parser combinators are essentially a way of combining higher order functions recognizing simple inputs to create functions recognizing more complex input. It might all sound complex and theoric, but it’s in fact pretty simple. Here’s an example: suppose I have two functions able to recognize the <code class=\"highlighter-rouge\">(</code> and <code class=\"highlighter-rouge\">)</code> tokens in some text input. Using parser combinators, I could assemble those to recognize a sequence in that input made up of an opening parens and then a closing one (of course in the real world you’d want stuff in between too).</p>\n\n<p>Still too complex? Let’s see some real world code now. Let’s implement a simple parser for performing additions and subtractions (ex: <code class=\"highlighter-rouge\">1 + 2 + (3 + 4) + 5</code>). I’ll use Scala because it’s base library comes with built-in support for parser combinators, but similar functionality is available for other languages too.</p>\n\n<p>First, let’s define a few classes to hold our AST:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\">    <span class=\"k\">abstract</span> <span class=\"k\">class</span> <span class=\"nc\">Expression</span> <span class=\"o\">{</span>\n      <span class=\"k\">def</span> <span class=\"n\">evaluate</span><span class=\"o\">()</span><span class=\"k\">:</span> <span class=\"kt\">Int</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"k\">case</span> <span class=\"k\">class</span> <span class=\"nc\">Number</span><span class=\"o\">(</span><span class=\"n\">value</span><span class=\"k\">:</span> <span class=\"kt\">Int</span><span class=\"o\">)</span> <span class=\"k\">extends</span> <span class=\"nc\">Expression</span> <span class=\"o\">{</span>\n      <span class=\"k\">def</span> <span class=\"n\">evaluate</span><span class=\"o\">()</span> <span class=\"k\">=</span> <span class=\"n\">value</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"k\">case</span> <span class=\"k\">class</span> <span class=\"nc\">Parens</span><span class=\"o\">(</span><span class=\"n\">expression</span><span class=\"k\">:</span> <span class=\"kt\">Expression</span><span class=\"o\">)</span> <span class=\"k\">extends</span> <span class=\"nc\">Expression</span> <span class=\"o\">{</span>\n      <span class=\"k\">def</span> <span class=\"n\">evaluate</span><span class=\"o\">()</span> <span class=\"k\">=</span> <span class=\"n\">expression</span><span class=\"o\">.</span><span class=\"n\">evaluate</span><span class=\"o\">()</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"k\">case</span> <span class=\"k\">class</span> <span class=\"nc\">Addition</span><span class=\"o\">(</span><span class=\"n\">left</span><span class=\"k\">:</span> <span class=\"kt\">Expression</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"k\">:</span> <span class=\"kt\">Expression</span><span class=\"o\">)</span> <span class=\"k\">extends</span> <span class=\"nc\">Expression</span> <span class=\"o\">{</span>\n      <span class=\"k\">def</span> <span class=\"n\">evaluate</span><span class=\"o\">()</span> <span class=\"k\">=</span> <span class=\"n\">left</span><span class=\"o\">.</span><span class=\"n\">evaluate</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"n\">right</span><span class=\"o\">.</span><span class=\"n\">evaluate</span><span class=\"o\">()</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"k\">case</span> <span class=\"k\">class</span> <span class=\"nc\">Substraction</span><span class=\"o\">(</span><span class=\"n\">left</span><span class=\"k\">:</span> <span class=\"kt\">Expression</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"k\">:</span> <span class=\"kt\">Expression</span><span class=\"o\">)</span> <span class=\"k\">extends</span> <span class=\"nc\">Expression</span> <span class=\"o\">{</span>\n      <span class=\"k\">def</span> <span class=\"n\">evaluate</span><span class=\"o\">()</span> <span class=\"k\">=</span> <span class=\"n\">left</span><span class=\"o\">.</span><span class=\"n\">evaluate</span><span class=\"o\">()</span> <span class=\"o\">-</span> <span class=\"n\">right</span><span class=\"o\">.</span><span class=\"n\">evaluate</span><span class=\"o\">()</span>\n    <span class=\"o\">}</span></code></pre></figure>\n\n<p>For the curious, a case class in Scala is essentially a shorthand for immutable classes holding a few properties. They automatically come with an proper <code class=\"highlighter-rouge\">equals</code> and <code class=\"highlighter-rouge\">toString</code> implementation (among other things). They are perfect for this purpose.</p>\n\n<p>Now here’s the parser that goes with it:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\">    \n    <span class=\"k\">object</span> <span class=\"nc\">SimpleExpressionParser</span> <span class=\"k\">extends</span> <span class=\"nc\">RegexParsers</span> <span class=\"o\">{</span>\n      <span class=\"k\">def</span> <span class=\"n\">parse</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"k\">:</span> <span class=\"kt\">String</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Expression</span> <span class=\"o\">=</span> <span class=\"o\">{</span>\n        <span class=\"n\">parseAll</span><span class=\"o\">(</span><span class=\"n\">expression</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"k\">match</span> <span class=\"o\">{</span>\n          <span class=\"k\">case</span> <span class=\"nc\">Success</span><span class=\"o\">(</span><span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"k\">_</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span> <span class=\"n\">r</span>\n          <span class=\"k\">case</span> <span class=\"nc\">NoSuccess</span><span class=\"o\">(</span><span class=\"n\">msg</span><span class=\"o\">,</span> <span class=\"k\">_</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span> <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nc\">Exception</span><span class=\"o\">(</span><span class=\"n\">msg</span><span class=\"o\">)</span>\n        <span class=\"o\">}</span>\n      <span class=\"o\">}</span>\n  \n      <span class=\"k\">val</span> <span class=\"n\">expression</span><span class=\"k\">:</span> <span class=\"kt\">Parser</span><span class=\"o\">[</span><span class=\"kt\">Expression</span><span class=\"o\">]</span> <span class=\"k\">=</span> <span class=\"n\">binary</span> <span class=\"o\">|</span> <span class=\"n\">parens</span> <span class=\"o\">|</span> <span class=\"n\">number</span>\n  \n      <span class=\"k\">val</span> <span class=\"n\">parens</span> <span class=\"k\">=</span> <span class=\"s\">\"(\"</span> <span class=\"o\">~</span> <span class=\"n\">expression</span> <span class=\"o\">~</span> <span class=\"s\">\")\"</span> <span class=\"o\">^^</span> <span class=\"o\">{</span>\n        <span class=\"k\">case</span> <span class=\"s\">\"(\"</span> <span class=\"o\">~</span> <span class=\"n\">e</span> <span class=\"o\">~</span> <span class=\"s\">\")\"</span> <span class=\"k\">=&gt;</span> <span class=\"nc\">Parens</span><span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">)</span>\n      <span class=\"o\">}</span>\n  \n      <span class=\"k\">val</span> <span class=\"n\">binary</span> <span class=\"k\">=</span> <span class=\"o\">(</span><span class=\"n\">number</span> <span class=\"o\">|</span> <span class=\"n\">parens</span><span class=\"o\">)</span> <span class=\"o\">~</span> <span class=\"n\">operator</span> <span class=\"o\">~</span> <span class=\"n\">expression</span> <span class=\"o\">^^</span> <span class=\"o\">{</span>\n        <span class=\"k\">case</span> <span class=\"n\">l</span> <span class=\"o\">~</span> <span class=\"s\">\"+\"</span> <span class=\"o\">~</span> <span class=\"n\">r</span> <span class=\"k\">=&gt;</span> <span class=\"nc\">Addition</span><span class=\"o\">(</span><span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n        <span class=\"k\">case</span> <span class=\"n\">l</span> <span class=\"o\">~</span> <span class=\"s\">\"-\"</span> <span class=\"o\">~</span> <span class=\"n\">r</span> <span class=\"k\">=&gt;</span> <span class=\"nc\">Substraction</span><span class=\"o\">(</span><span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n      <span class=\"o\">}</span>\n  \n      <span class=\"k\">val</span> <span class=\"n\">number</span> <span class=\"k\">=</span> <span class=\"n\">regex</span><span class=\"o\">(</span> <span class=\"s\">\"\"\"d+\"\"\"</span><span class=\"o\">.</span><span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">^^</span> <span class=\"o\">{</span>\n        <span class=\"k\">case</span> <span class=\"n\">v</span> <span class=\"k\">=&gt;</span> <span class=\"nc\">Number</span><span class=\"o\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">toInt</span><span class=\"o\">)</span>\n      <span class=\"o\">}</span>\n  \n      <span class=\"k\">val</span> <span class=\"n\">operator</span> <span class=\"k\">=</span> <span class=\"s\">\"+\"</span> <span class=\"o\">|</span> <span class=\"s\">\"-\"</span>\n    <span class=\"o\">}</span></code></pre></figure>\n\n<p>The parser is in fact a class (in this case a Singleton but that’s not mandatory). It’s methods define a set of rules that can be used for parsing. Notice how close those look to a typical BNF grammar? That’s right, you won’t be needing that duct tape after all.</p>\n\n<p>Rules can be very simple such as <code class=\"highlighter-rouge\">operator</code> which recognizes simple tokens using either strings or regular expressions, or more complex such as <code class=\"highlighter-rouge\">binary</code> which combines other rules using special operators. Note that those operators are just methods from the base <code class=\"highlighter-rouge\">RegexParsers</code> class. The Scala libraries provide many operators and methods to define how parsers can be combined. In this case I’m using the <code class=\"highlighter-rouge\">~</code> operator which denotes a sequence. It’s also possible to match variable sequences, optional values, and many, many others.</p>\n\n<p>The return value for each rule is in fact a Parser[T] where T is the type of item that is recognized. Simple rules based on strings or regular expressions return a Parser[String] without the need for further processing. Rules that combine multiple values or that need the raw token to be transformed in some way (such as <code class=\"highlighter-rouge\">number</code>) can be followed by the <code class=\"highlighter-rouge\">ˆˆ</code> operator applied to a partial function that’ll match the recognized stuff using pattern matching and then produce the resulting value. For example, <code class=\"highlighter-rouge\">binary</code> returns either an <code class=\"highlighter-rouge\">Addition</code> or a <code class=\"highlighter-rouge\">Substraction</code>, which means it’s inferred return value is <code class=\"highlighter-rouge\">Parser[Expression]</code>.</p>\n\n<p>Here’s how this parser could be used:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\"><span class=\"n\">assertEquals</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"nc\">SimpleExpressionParser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">(</span><span class=\"s\">\"1\"</span><span class=\"o\">).</span><span class=\"n\">evaluate</span><span class=\"o\">())</span>\n<span class=\"n\">assertEquals</span><span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"nc\">SimpleExpressionParser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">(</span><span class=\"s\">\"1 + 2\"</span><span class=\"o\">).</span><span class=\"n\">evaluate</span><span class=\"o\">())</span>\n<span class=\"n\">assertEquals</span><span class=\"o\">(</span><span class=\"mi\">15</span><span class=\"o\">,</span> <span class=\"nc\">SimpleExpressionParser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">(</span><span class=\"s\">\"1 + (2 + 3) + 4 + 5\"</span><span class=\"o\">).</span><span class=\"n\">evaluate</span><span class=\"o\">())</span></code></pre></figure>\n\n<p>The <code class=\"highlighter-rouge\">parse</code> method either returns an <code class=\"highlighter-rouge\">Expression</code> or throws an exception when a parsing error occurs. Then calling <code class=\"highlighter-rouge\">evaluate</code> on that expression recursively computes the expression, and returns the result.</p>\n\n<p>If I were to use the <code class=\"highlighter-rouge\">toString</code> method on the root expression, for an input string <code class=\"highlighter-rouge\">1 + 2</code> I would end up with <code class=\"highlighter-rouge\">Addition(Number(1),Number(2))</code>, which shows that the result from the parsing is a nice, easy to use AST.</p>\n\n<h2 id=\"dealing-with-left-recursive-grammars\">Dealing with left recursive grammars</h2>\n\n<p>You might have noticed that in my example the definition for the <code class=\"highlighter-rouge\">binary</code> rule didn’t use <code class=\"highlighter-rouge\">expression</code> on the left side of the operator. Why can’t I do something like this?</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\"><span class=\"k\">def</span> <span class=\"n\">binary</span> <span class=\"k\">=</span> <span class=\"n\">expression</span> <span class=\"o\">~</span> <span class=\"n\">operator</span> <span class=\"o\">~</span> <span class=\"n\">expression</span></code></pre></figure>\n\n<p>The problem with this rule is that is makes my grammar a <a href=\"http://en.wikipedia.org/wiki/Left_recursion\">left recursive</a> one, and by default the Scala parser combinators don’t handle that quite well. While processing the input, the <code class=\"highlighter-rouge\">expression</code> rule is then called, which eventually digs into <code class=\"highlighter-rouge\">binary</code>, which then invokes <code class=\"highlighter-rouge\">expression</code> again <em>on the same input</em> … and then you end up with (and on) Stack Overflow.</p>\n\n<p>So how to work around this? One possibility is to ensure that your grammar never recurses to the same rule without consuming at least one character (e.g. do not use left-recursion). That’s why I used a slightly more complex form in my initial sample. Another possibility when using Scala parser combinators is to mix in the <code class=\"highlighter-rouge\">PackratParser</code> trait into your class, which enables support for left-recursion:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\">    <span class=\"k\">object</span> <span class=\"nc\">SimpleExpressionParser</span> <span class=\"k\">extends</span> <span class=\"nc\">RegexParsers</span> <span class=\"k\">with</span> <span class=\"nc\">PackratParsers</span> <span class=\"o\">{</span>\n      <span class=\"k\">def</span> <span class=\"n\">parse</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"k\">:</span> <span class=\"kt\">String</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Expression</span> <span class=\"o\">=</span> <span class=\"o\">{</span>\n        <span class=\"n\">parseAll</span><span class=\"o\">(</span><span class=\"n\">expression</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"k\">match</span> <span class=\"o\">{</span>\n          <span class=\"k\">case</span> <span class=\"nc\">Success</span><span class=\"o\">(</span><span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"k\">_</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span> <span class=\"n\">r</span>\n          <span class=\"k\">case</span> <span class=\"nc\">NoSuccess</span><span class=\"o\">(</span><span class=\"n\">msg</span><span class=\"o\">,</span> <span class=\"k\">_</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span> <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nc\">Exception</span><span class=\"o\">(</span><span class=\"n\">msg</span><span class=\"o\">)</span>\n        <span class=\"o\">}</span>\n      <span class=\"o\">}</span>\n\n      <span class=\"k\">val</span> <span class=\"n\">expression</span><span class=\"k\">:</span> <span class=\"kt\">PackratParser</span><span class=\"o\">[</span><span class=\"kt\">Expression</span><span class=\"o\">]</span> <span class=\"k\">=</span> <span class=\"n\">binary</span> <span class=\"o\">|</span> <span class=\"n\">parens</span> <span class=\"o\">|</span> <span class=\"n\">number</span>\n\n      <span class=\"k\">val</span> <span class=\"n\">parens</span> <span class=\"k\">=</span> <span class=\"s\">\"(\"</span> <span class=\"o\">~</span> <span class=\"n\">expression</span> <span class=\"o\">~</span> <span class=\"s\">\")\"</span> <span class=\"o\">^^</span> <span class=\"o\">{</span>\n        <span class=\"k\">case</span> <span class=\"s\">\"(\"</span> <span class=\"o\">~</span> <span class=\"n\">e</span> <span class=\"o\">~</span> <span class=\"s\">\")\"</span> <span class=\"k\">=&gt;</span> <span class=\"nc\">Parens</span><span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">)</span>\n      <span class=\"o\">}</span>\n\n      <span class=\"k\">val</span> <span class=\"n\">binary</span> <span class=\"k\">=</span> <span class=\"n\">expression</span> <span class=\"o\">~</span> <span class=\"n\">operator</span> <span class=\"o\">~</span> <span class=\"n\">expression</span> <span class=\"o\">^^</span> <span class=\"o\">{</span>\n        <span class=\"k\">case</span> <span class=\"n\">l</span> <span class=\"o\">~</span> <span class=\"s\">\"+\"</span> <span class=\"o\">~</span> <span class=\"n\">r</span> <span class=\"k\">=&gt;</span> <span class=\"nc\">Addition</span><span class=\"o\">(</span><span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n        <span class=\"k\">case</span> <span class=\"n\">l</span> <span class=\"o\">~</span> <span class=\"s\">\"-\"</span> <span class=\"o\">~</span> <span class=\"n\">r</span> <span class=\"k\">=&gt;</span> <span class=\"nc\">Substraction</span><span class=\"o\">(</span><span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n      <span class=\"o\">}</span>\n\n      <span class=\"k\">val</span> <span class=\"n\">number</span> <span class=\"k\">=</span> <span class=\"n\">regex</span><span class=\"o\">(</span> <span class=\"s\">\"\"\"d+\"\"\"</span><span class=\"o\">.</span><span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">^^</span> <span class=\"o\">{</span>\n        <span class=\"k\">case</span> <span class=\"n\">v</span> <span class=\"k\">=&gt;</span> <span class=\"nc\">Number</span><span class=\"o\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">toInt</span><span class=\"o\">)</span>\n      <span class=\"o\">}</span>\n\n      <span class=\"k\">val</span> <span class=\"n\">operator</span> <span class=\"k\">=</span> <span class=\"s\">\"+\"</span> <span class=\"o\">|</span> <span class=\"s\">\"-\"</span>\n    <span class=\"o\">}</span></code></pre></figure>\n\n<p>Much better isn’t it?</p>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>In this post I’ve only shown a very simple parser, but using the same techniques it’s possible to build much more complex ones that can process just about any kind of structured expression, without the need for external tools, and using very little code. All of sudden, recognizing complex expressions no longer becomes an issue, and this opens up many possibilities when faced with situations where custom text input is being used. So give it a try!</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "53",
                "id": "1807",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1806",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1805",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "9e293f28b4b19fdbdff551af307a18ef",
                "id": "1804",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/10/03/ad-hoc-parsers/",
                "id": "1803",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/10/03/ad-hoc-parsing-using-parser-combinators/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-10-03T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "ad-hoc-parsing-using-parser-combinators",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-10-03T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/53",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/53/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/53/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/53/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/10/01/using-java-8-with-mockito/",
        "title": "Using Java 8 with Mockito",
        "short_URL": "http://wp.me/p7VTrW-S",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "a5ca74e8e2fc3703ae005b691cd4fb2b",
        "ID": 54,
        "content": "<p>Java 8 is pretty cool. We (finally!) got Lambda Expressions in Java and a lot of other goodies. At Coveo, we started working with Java 8 as soon as the first stable release was available. As mentioned in <a href=\"/2014/09/23/better-assertions/\">my previous blog post</a>, one way we’re using Java 8 is in our unit tests.</p>\n\n<!-- more -->\n\n<p>Let’s say we want to test that adding an <code class=\"highlighter-rouge\">Employee</code> to a <code class=\"highlighter-rouge\">Company</code> correctly invokes the <code class=\"highlighter-rouge\">CompanyDal</code> class with the right information.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">interface</span> <span class=\"nc\">CompanyDal</span>\n<span class=\"o\">{</span>\n    <span class=\"kt\">void</span> <span class=\"nf\">registerEmployee</span><span class=\"o\">(</span><span class=\"n\">Employee</span> <span class=\"n\">e</span><span class=\"o\">);</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Company</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">CompanyDal</span> <span class=\"n\">dal</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">Company</span><span class=\"o\">(</span><span class=\"n\">CompanyDal</span> <span class=\"n\">dal</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">dal</span> <span class=\"o\">=</span> <span class=\"n\">dal</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">addEmployee</span><span class=\"o\">(</span><span class=\"n\">Employee</span> <span class=\"n\">employee</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"c1\">// Pretend there's a deep copy here</span>\n        <span class=\"n\">Employee</span> <span class=\"n\">copiedEmployee</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Employee</span><span class=\"o\">(</span><span class=\"n\">employee</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">());</span>\n        <span class=\"n\">dal</span><span class=\"o\">.</span><span class=\"na\">registerEmployee</span><span class=\"o\">(</span><span class=\"n\">copiedEmployee</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Employee</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">Employee</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getName</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">name</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>When testing the <code class=\"highlighter-rouge\">Company</code> class we’ll want to mock our <code class=\"highlighter-rouge\">CompanyDal</code> interface. We use the great <a href=\"https://github.com/mockito/mockito\">Mockito</a> library for our mocking needs.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">CompanyTest</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Company</span> <span class=\"n\">company</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">CompanyDal</span> <span class=\"n\">mockedDal</span><span class=\"o\">;</span>\n\n    <span class=\"nd\">@Before</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setup</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n        <span class=\"n\">mockedDal</span> <span class=\"o\">=</span> <span class=\"n\">mock</span><span class=\"o\">(</span><span class=\"n\">CompanyDal</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n        <span class=\"n\">company</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Company</span><span class=\"o\">(</span><span class=\"n\">mockedDal</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n<span class=\"nd\">@Test</span>\n<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">addingAnEmployeeRegistersItInTheDal</span><span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"n\">Employee</span> <span class=\"n\">employee</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Employee</span><span class=\"o\">(</span><span class=\"s\">\"John\"</span><span class=\"o\">);</span>\n    <span class=\"n\">company</span><span class=\"o\">.</span><span class=\"na\">addEmployee</span><span class=\"o\">(</span><span class=\"n\">employee</span><span class=\"o\">);</span>\n\n    <span class=\"c1\">// TODO: Verify that the employee was registered with the DAL.</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>This is a good test as it validates that the <code class=\"highlighter-rouge\">Company</code> class interacts with the <code class=\"highlighter-rouge\">CompanyDal</code> class as expected.\nNow.. how can we do this verification?</p>\n\n<p>We could be tempted to do</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"nd\">@Test</span>\n<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">addingAnEmployeeRegistersItInTheDal</span><span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"n\">Employee</span> <span class=\"n\">employee</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Employee</span><span class=\"o\">(</span><span class=\"s\">\"John\"</span><span class=\"o\">);</span>\n    <span class=\"n\">company</span><span class=\"o\">.</span><span class=\"na\">addEmployee</span><span class=\"o\">(</span><span class=\"n\">employee</span><span class=\"o\">);</span>\n\n    <span class=\"n\">verify</span><span class=\"o\">(</span><span class=\"n\">mockedDal</span><span class=\"o\">).</span><span class=\"na\">registerEmployee</span><span class=\"o\">(</span><span class=\"n\">employee</span><span class=\"o\">);</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>But that won’t work since the two <code class=\"highlighter-rouge\">Employee</code> instances are not the same. This is caused by the deep copy in the <code class=\"highlighter-rouge\">Company</code> class.</p>\n\n<p><em>Note: For the sake of this example, we need to pretend that we can’t override <code class=\"highlighter-rouge\">Employee</code>’s <code class=\"highlighter-rouge\">equals()</code> method to use value equality instead of reference equality.</em></p>\n\n<p>What we need to do is verify that the <code class=\"highlighter-rouge\">Employee</code> passed to the <code class=\"highlighter-rouge\">CompanyDal</code> has the same <code class=\"highlighter-rouge\">name</code> property as the one passed to the <code class=\"highlighter-rouge\">Company</code> class.\nThis can be done using Mockito <a href=\"http://docs.mockito.googlecode.com/hg/latest/org/mockito/Matchers.html\">Matchers</a>.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"nd\">@Test</span>\n<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">addingAnEmployeeRegistersItInTheDal</span><span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"n\">Employee</span> <span class=\"n\">employee</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Employee</span><span class=\"o\">(</span><span class=\"s\">\"John\"</span><span class=\"o\">);</span>\n    <span class=\"n\">company</span><span class=\"o\">.</span><span class=\"na\">addEmployee</span><span class=\"o\">(</span><span class=\"n\">employee</span><span class=\"o\">);</span>\n\n    <span class=\"n\">verify</span><span class=\"o\">(</span><span class=\"n\">mockedDal</span><span class=\"o\">).</span><span class=\"na\">registerEmployee</span><span class=\"o\">(</span><span class=\"n\">argThat</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">ArgumentMatcher</span><span class=\"o\">&lt;</span><span class=\"n\">Employee</span><span class=\"o\">&gt;()</span>\n    <span class=\"o\">{</span>\n        <span class=\"nd\">@Override</span> <span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">matches</span><span class=\"o\">(</span><span class=\"n\">Object</span> <span class=\"n\">item</span><span class=\"o\">)</span>\n        <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"o\">((</span><span class=\"n\">Employee</span><span class=\"o\">)</span><span class=\"n\">item</span><span class=\"o\">).</span><span class=\"na\">getName</span><span class=\"o\">().</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">employee</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">());</span>\n        <span class=\"o\">}</span>\n\n        <span class=\"nd\">@Override</span> <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">describeTo</span><span class=\"o\">(</span><span class=\"n\">Description</span> <span class=\"n\">description</span><span class=\"o\">)</span>\n        <span class=\"o\">{</span>\n            <span class=\"n\">description</span><span class=\"o\">.</span><span class=\"na\">appendText</span><span class=\"o\">(</span><span class=\"s\">\"Employees must have the same name\"</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}));</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>This will produce the following message in case of test failure</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>Argument(s) are different! Wanted:\ncompanyDal.registerEmployee(\n    Employees must have the same name\n);\n-&gt; at com.coveo.CompanyTest.canFindEmployee(CompanyTest.java:71)\nActual invocation has different arguments:\ncompanyDal.registerEmployee(\n    com.coveo.Employee@7f560810\n);\n-&gt; at com.coveo.Company.addEmployee(CompanyTest.java:46)\n</code></pre>\n</div>\n\n<p>This is good! But this test suddenly went from 4 lines of code to 15 lines!\nThe <code class=\"highlighter-rouge\">matches()</code> method could easily be replaced by a <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/function/Predicate.html\"><code class=\"highlighter-rouge\">java.util.Predicate</code></a>!</p>\n\n<p>But we’ll need an adapter class to bridge Mockito’s <code class=\"highlighter-rouge\">Matcher</code> with <code class=\"highlighter-rouge\">Predicate</code>. Introducing <code class=\"highlighter-rouge\">LambdaMatcher</code>!</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kn\">import</span> <span class=\"nn\">java.util.Optional</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.function.Predicate</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">org.hamcrest.BaseMatcher</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.hamcrest.Description</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">LambdaMatcher</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span> <span class=\"kd\">extends</span> <span class=\"n\">BaseMatcher</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span>\n<span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"n\">Predicate</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span> <span class=\"n\">matcher</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"n\">Optional</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">description</span><span class=\"o\">;</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">LambdaMatcher</span><span class=\"o\">(</span><span class=\"n\">Predicate</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span> <span class=\"n\">matcher</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">(</span><span class=\"n\">matcher</span><span class=\"o\">,</span> <span class=\"kc\">null</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">LambdaMatcher</span><span class=\"o\">(</span><span class=\"n\">Predicate</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span> <span class=\"n\">matcher</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">description</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">matcher</span> <span class=\"o\">=</span> <span class=\"n\">matcher</span><span class=\"o\">;</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">description</span> <span class=\"o\">=</span> <span class=\"n\">Optional</span><span class=\"o\">.</span><span class=\"na\">ofNullable</span><span class=\"o\">(</span><span class=\"n\">description</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@SuppressWarnings</span><span class=\"o\">(</span><span class=\"s\">\"unchecked\"</span><span class=\"o\">)</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">matches</span><span class=\"o\">(</span><span class=\"n\">Object</span> <span class=\"n\">argument</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">matcher</span><span class=\"o\">.</span><span class=\"na\">test</span><span class=\"o\">((</span><span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"n\">argument</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">describeTo</span><span class=\"o\">(</span><span class=\"n\">Description</span> <span class=\"n\">description</span><span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">description</span><span class=\"o\">.</span><span class=\"na\">ifPresent</span><span class=\"o\">(</span><span class=\"nl\">description:</span><span class=\"o\">:</span><span class=\"n\">appendText</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p><code class=\"highlighter-rouge\">LambdaMatcher</code> is really easy to use. Here’s our rewritten <code class=\"highlighter-rouge\">addingAnEmployeeRegistersItInTheDal</code> test.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"nd\">@Test</span>\n<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">canFindEmployee</span><span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"n\">Employee</span> <span class=\"n\">employee</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Employee</span><span class=\"o\">(</span><span class=\"s\">\"John\"</span><span class=\"o\">);</span>\n    <span class=\"n\">company</span><span class=\"o\">.</span><span class=\"na\">addEmployee</span><span class=\"o\">(</span><span class=\"n\">employee</span><span class=\"o\">);</span>\n\n    <span class=\"n\">verify</span><span class=\"o\">(</span><span class=\"n\">mockedDal</span><span class=\"o\">).</span><span class=\"na\">registerEmployee</span><span class=\"o\">(</span><span class=\"n\">argThat</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">LambdaMatcher</span><span class=\"o\">&lt;&gt;(</span><span class=\"n\">e</span> <span class=\"o\">-&gt;</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">()</span>\n                                                                         <span class=\"o\">.</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">employee</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">()))));</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>And if you want a description</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"nd\">@Test</span>\n<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">canFindEmployee</span><span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"n\">Employee</span> <span class=\"n\">employee</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Employee</span><span class=\"o\">(</span><span class=\"s\">\"John\"</span><span class=\"o\">);</span>\n    <span class=\"n\">company</span><span class=\"o\">.</span><span class=\"na\">addEmployee</span><span class=\"o\">(</span><span class=\"n\">employee</span><span class=\"o\">);</span>\n\n    <span class=\"n\">verify</span><span class=\"o\">(</span><span class=\"n\">mockedDal</span><span class=\"o\">).</span><span class=\"na\">registerEmployee</span><span class=\"o\">(</span><span class=\"n\">argThat</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">LambdaMatcher</span><span class=\"o\">&lt;&gt;(</span><span class=\"n\">e</span> <span class=\"o\">-&gt;</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">()</span>\n                                                                         <span class=\"o\">.</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">employee</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">()),</span>\n                                                                   <span class=\"s\">\"Employees must have the same name\"</span><span class=\"o\">)));</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>This new code will generate the same nice error message as above.. but it is much simpler! If you want to save even more time, you can create the following static method.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span> <span class=\"n\">T</span> <span class=\"nf\">argThatMatches</span><span class=\"o\">(</span><span class=\"n\">Predicate</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span> <span class=\"n\">predicate</span><span class=\"o\">)</span>\n<span class=\"o\">{</span>\n    <span class=\"n\">LambdaMatcher</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span> <span class=\"n\">matcher</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">LambdaMatcher</span><span class=\"o\">&lt;&gt;(</span><span class=\"n\">predicate</span><span class=\"o\">);</span>\n    <span class=\"k\">return</span> <span class=\"n\">Matchers</span><span class=\"o\">.</span><span class=\"na\">argThat</span><span class=\"o\">(</span><span class=\"n\">matcher</span><span class=\"o\">);</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>Which will result in the following test.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"nd\">@Test</span>\n<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">canFindEmployee</span><span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"n\">Employee</span> <span class=\"n\">employee</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Employee</span><span class=\"o\">(</span><span class=\"s\">\"John\"</span><span class=\"o\">);</span>\n    <span class=\"n\">company</span><span class=\"o\">.</span><span class=\"na\">addEmployee</span><span class=\"o\">(</span><span class=\"n\">employee</span><span class=\"o\">);</span>\n\n    <span class=\"n\">verify</span><span class=\"o\">(</span><span class=\"n\">mockedDal</span><span class=\"o\">).</span><span class=\"na\">registerEmployee</span><span class=\"o\">(</span><span class=\"n\">argThatMatches</span><span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">-&gt;</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">()</span>\n                                                            <span class=\"o\">.</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">employee</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">())));</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>That’s it! Feel free to use the <code class=\"highlighter-rouge\">LambdaMatcher</code> class in your own projects and add some Lambda to your unit tests!</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "54",
                "id": "1817",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1816",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1815",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "e93374e36301f341eb1102848ead6e3a",
                "id": "1814",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/10/01/java8-mockito/",
                "id": "1813",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/10/01/using-java-8-with-mockito/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-10-01T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "using-java-8-with-mockito",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-10-01T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/54",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/54/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/54/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/54/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/09/30/grouping-related-search-results/",
        "title": "Grouping related search results",
        "short_URL": "http://wp.me/p7VTrW-T",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "4691fe7b398782edf82746798c3d123f",
        "ID": 55,
        "content": "<p>The <a href=\"https://developers.coveo.com/display/JsSearch/Home\">JavaScript Search Framework</a> is a step forward in website integration. It was a natural fit when we decided to launch our <a href=\"http://answers.coveo.com\">Q&amp;A site</a>. Here is how we managed to display a question and its answer(s) together in the search results.</p>\n\n<!-- more -->\n\n<h2 id=\"indexing-the-content\">Indexing the content</h2>\n\n<p>If you have already visited <a href=\"http://answers.coveo.com\">answers.coveo.com</a>, you may have noticed that it is powered by <a href=\"http://www.osqa.net/\">OSQA</a>. Before replacing the search on that platform, we needed to index its content. <a href=\"http://www.osqa.net/\">OSQA</a> does not have an API that we could use to extract content. However, everything is stored in a database so we went with our very flexible <a href=\"http://onlinehelp.coveo.com/en/ces/7.0/Administrator/database_connector_features.htm\">Database Connector</a> to retrieve all the questions and answers. Here is the mapping file that we are using:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-xml\"><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt;</span> \n<span class=\"nt\">&lt;ODBC&gt;</span>\n    <span class=\"nt\">&lt;CommonMapping&gt;</span>\n        <span class=\"nt\">&lt;AllowedUsers&gt;</span>\n            <span class=\"nt\">&lt;AllowedUser</span> <span class=\"na\">type=</span><span class=\"s\">\"Windows\"</span> <span class=\"na\">allowed=</span><span class=\"s\">\"true\"</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;Name&gt;</span>everyone<span class=\"nt\">&lt;/Name&gt;</span>\n                <span class=\"nt\">&lt;Server&gt;&lt;/Server&gt;</span>\n            <span class=\"nt\">&lt;/AllowedUser&gt;</span>\n        <span class=\"nt\">&lt;/AllowedUsers&gt;</span>\n    <span class=\"nt\">&lt;/CommonMapping&gt;</span>\n    <span class=\"nt\">&lt;Mapping</span> <span class=\"na\">type=</span><span class=\"s\">\"Questions\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;Accessor</span> <span class=\"na\">type=</span><span class=\"s\">\"query\"</span><span class=\"nt\">&gt;</span>\n            select forum_node.id as id, title, body, added_at, last_activity_at, node_type, tagnames, username, email, parent_id, score from forum_node inner join auth_user on forum_node.author_id = auth_user.id where node_type='question' AND state_string!='(deleted)';\n        <span class=\"nt\">&lt;/Accessor&gt;</span>\n        <span class=\"nt\">&lt;Fields&gt;</span>\n            <span class=\"nt\">&lt;Uri&gt;</span>https://answers.coveo.com/questions/%[id]<span class=\"nt\">&lt;/Uri&gt;</span>\n            <span class=\"nt\">&lt;ClickableUri&gt;</span>https://answers.coveo.com/questions/%[id]<span class=\"nt\">&lt;/ClickableUri&gt;</span>\n            <span class=\"nt\">&lt;FileName&gt;</span>%[ID].txt<span class=\"nt\">&lt;/FileName&gt;</span>\n            <span class=\"nt\">&lt;Title&gt;</span>%[ID]<span class=\"nt\">&lt;/Title&gt;</span>\n            <span class=\"nt\">&lt;ModifiedDate&gt;</span>%[added_at]<span class=\"nt\">&lt;/ModifiedDate&gt;</span>\n            <span class=\"nt\">&lt;ContentType&gt;</span>text/html<span class=\"nt\">&lt;/ContentType&gt;</span>\n            <span class=\"nt\">&lt;Title&gt;</span>%[title]<span class=\"nt\">&lt;/Title&gt;</span>\n            <span class=\"nt\">&lt;Body&gt;</span>\n                %[body]\n            <span class=\"nt\">&lt;/Body&gt;</span>\n            <span class=\"nt\">&lt;CustomFields&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"OrderDate\"</span><span class=\"nt\">&gt;</span>%[last_activity_at]<span class=\"nt\">&lt;/CustomField&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"nodetype\"</span><span class=\"nt\">&gt;</span>%[node_type]<span class=\"nt\">&lt;/CustomField&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"tags\"</span><span class=\"nt\">&gt;</span>%[tagnames]<span class=\"nt\">&lt;/CustomField&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"sysAuthor\"</span><span class=\"nt\">&gt;</span>%[username]<span class=\"nt\">&lt;/CustomField&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"foldingid\"</span><span class=\"nt\">&gt;</span>%[id]<span class=\"nt\">&lt;/CustomField&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"questionid\"</span><span class=\"nt\">&gt;</span>%[id]<span class=\"nt\">&lt;/CustomField&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"questiontitle\"</span><span class=\"nt\">&gt;</span>%[title]<span class=\"nt\">&lt;/CustomField&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"score\"</span><span class=\"nt\">&gt;</span>%[score]<span class=\"nt\">&lt;/CustomField&gt;</span>\n            <span class=\"nt\">&lt;/CustomFields&gt;</span>\n        <span class=\"nt\">&lt;/Fields&gt;</span>\n    <span class=\"nt\">&lt;/Mapping&gt;</span>\n    <span class=\"nt\">&lt;Mapping</span> <span class=\"na\">type=</span><span class=\"s\">\"Answers\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;Accessor</span> <span class=\"na\">type=</span><span class=\"s\">\"query\"</span><span class=\"nt\">&gt;</span>\n            select forum_node.id as id, state_string, body, last_activity_at, node_type, tagnames, username, email, parent_id, score from forum_node inner join auth_user on forum_node.author_id = auth_user.id where node_type='answer';\n        <span class=\"nt\">&lt;/Accessor&gt;</span>\n        <span class=\"nt\">&lt;Fields&gt;</span>\n            <span class=\"nt\">&lt;Uri&gt;</span>https://answers.coveo.com/questions/%[id]<span class=\"nt\">&lt;/Uri&gt;</span>\n            <span class=\"nt\">&lt;ClickableUri&gt;</span>https://answers.coveo.com/questions/%[parent_id]<span class=\"nt\">&lt;/ClickableUri&gt;</span>\n            <span class=\"nt\">&lt;FileName&gt;</span>%[ID].txt<span class=\"nt\">&lt;/FileName&gt;</span>\n            <span class=\"nt\">&lt;Title&gt;</span>Answer to question id %[parent_id]<span class=\"nt\">&lt;/Title&gt;</span>\n            <span class=\"nt\">&lt;ModifiedDate&gt;</span>%[last_activity_at]<span class=\"nt\">&lt;/ModifiedDate&gt;</span>\n            <span class=\"nt\">&lt;ContentType&gt;</span>text/html<span class=\"nt\">&lt;/ContentType&gt;</span>\n            <span class=\"nt\">&lt;Body&gt;</span>\n                %[body]\n            <span class=\"nt\">&lt;/Body&gt;</span>\n            <span class=\"nt\">&lt;CustomFields&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"OrderDate\"</span><span class=\"nt\">&gt;</span>%[last_activity_at]<span class=\"nt\">&lt;/CustomField&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"nodetype\"</span><span class=\"nt\">&gt;</span>%[node_type]<span class=\"nt\">&lt;/CustomField&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"sysAuthor\"</span><span class=\"nt\">&gt;</span>%[username]<span class=\"nt\">&lt;/CustomField&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"foldingid\"</span><span class=\"nt\">&gt;</span>%[parent_id]<span class=\"nt\">&lt;/CustomField&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"answerid\"</span><span class=\"nt\">&gt;</span>%[id]<span class=\"nt\">&lt;/CustomField&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"answerstate\"</span><span class=\"nt\">&gt;</span>%[state_string]<span class=\"nt\">&lt;/CustomField&gt;</span>\n                <span class=\"nt\">&lt;CustomField</span> <span class=\"na\">name=</span><span class=\"s\">\"score\"</span><span class=\"nt\">&gt;</span>%[score]<span class=\"nt\">&lt;/CustomField&gt;</span>\n            <span class=\"nt\">&lt;/CustomFields&gt;</span>\n        <span class=\"nt\">&lt;/Fields&gt;</span>\n    <span class=\"nt\">&lt;/Mapping&gt;</span>\n<span class=\"nt\">&lt;/ODBC&gt;</span></code></pre></figure>\n\n<p>We wanted to display the answers with the questions in the search results. An answer without the context of the question is only a part of the information you are looking for. We also wanted to pull the question into the result list if the searched term was only found in the answer and vice versa. In the Coveo jargon, this type of result interaction is called Folding. To fold questions and answers, we created several <a href=\"http://onlinehelp.coveo.com/en/ces/7.0/administrator/adding_or_modifying_custom_fields.htm\">custom fields</a>.</p>\n\n<p>First, we needed a field containing the same value: <code class=\"highlighter-rouge\">@foldingid</code>. On the question, <code class=\"highlighter-rouge\">@foldingid</code> contains the <code class=\"highlighter-rouge\">id</code> of the question in the <a href=\"http://www.osqa.net/\">OSQA</a> database. On the answer, <code class=\"highlighter-rouge\">@foldingid</code> contains the <code class=\"highlighter-rouge\">parent_id</code> value which represents the <code class=\"highlighter-rouge\">id</code> of the related question in the <a href=\"http://www.osqa.net/\">OSQA</a> database. To organize the documents in a group of related results, we needed a way to distinguish the parent from its children. For that purpose, we set the field <code class=\"highlighter-rouge\">@questionid</code> on all the questions and the field <code class=\"highlighter-rouge\">@answerid</code> on all the answers. Those three fields will be used by the <a href=\"https://developers.coveo.com/display/JsSearch/Home\">JavaScript Search Framework</a> to fold results together.</p>\n\n<h2 id=\"parent-child-relations\">Parent-Child relations</h2>\n\n<p>We then used the <a href=\"https://developers.coveo.com/display/JsSearch/Folding+Component\">Folding Component</a> to group questions and answers together. Here is the HTML that we are using:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-html\"><span class=\"nt\"><div>\n    <span class=\"na\">class=</span><span class=\"s\">'CoveoFolding'</span>\n    <span class=\"na\">data-field=</span><span class=\"s\">'@foldingid'</span> \n    <span class=\"na\">data-parent-field=</span><span class=\"s\">'@questionid'</span>\n    <span class=\"na\">data-child-field=</span><span class=\"s\">'@answerid'</span>\n    <span class=\"na\">data-range=</span><span class=\"s\">'5'</span>\n    <span class=\"na\">data-rearrange=</span><span class=\"s\">\"date ascending\"</span><span class=\"nt\">&gt;</div></span></code></pre></figure>\n\n<p>We set the <code class=\"highlighter-rouge\">data-field</code> property to the common value shared by both the question and its answer(s). We then set the properties to specify the field to use for the parent and for the children. Those fields are either on the question or on the answer but not on both. Finally, we set the <code class=\"highlighter-rouge\">data-rearrange</code> property to <code class=\"highlighter-rouge\">\"date ascending\"</code>. This way, the results are displayed in the same order as they were created (question, answer 1, answer 2, …).</p>\n\n<h2 id=\"rendering-the-results-using-templates\">Rendering the results using templates.</h2>\n\n<p>We are only displaying questions and answers in this result list. The default result template is used to display the question, here it is:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-jsp\">\n    <div class='coveo-date'></div>\n    <div class='coveo-title'>\n        <a class='CoveoResultLink'></a>\n    </div>\n    <div class='coveo-excerpt'>\n        \n    </div>\n    <div class='field-table'>\n        <span class='answers-author'>\n            <span class=\"CoveoFieldValue\"></span>\n        </span>\n        <span class='answers-score'>\n            <img src=\"https//developers.coveo.com/upfiles/image/like_button.png\" />\n            <span class=\"CoveoFieldValue\"></span>\n        </span>\n         <span class=\"CoveoFieldValue CoveoTags\"></span>\n    </div>\n    \n        <img class=\"folding-picture\" src=\"https//developers.coveo.com/upfiles/image/fleche_attention.png\" />\n    \n    <div class='CoveoResultFolding'></div>\n</code></pre></figure>\n\n<p>We have the <a href=\"https://developers.coveo.com/display/JsSearch/ResultFolding+Component\">ResultFolding Component</a> near the end of the template. While the <a href=\"https://developers.coveo.com/display/JsSearch/Folding+Component\">Folding component</a> folds the questions and answers together, the <a href=\"https://developers.coveo.com/display/JsSearch/ResultFolding+Component\">ResultFolding Component</a> renders the folded results. The template used to render the folded results is an option of the <a href=\"https://developers.coveo.com/display/JsSearch/ResultFolding+Component\">ResultFolding Component</a>. In our case, the <code class=\"highlighter-rouge\">\"answer-template\"</code> template is used to render the children.</p>\n\n<p>We use a specific template for the children since, among other things, an answer does not have a meaningful title. Here is the template that we are using:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-jsp\">\n    <div class='coveo-date'></div>\n    <div class='coveo-excerpt'>\n        \n    </div>\n    <span class='answers-author'>\n        <span class=\"CoveoFieldValue\"></span>\n    </span>\n    <span class='answers-score'>\n        <img src=\"https//developers.coveo.com/upfiles/image/like_button.png\" />\n        <span class=\"CoveoFieldValue\"></span>\n    <span>\n</code></pre></figure>\n\n<p>The end result for a question with two answers will look like this:</p>\n\n<p><img src=\"https//developers.coveo.com/images/AnswersSample.png\" alt=\"Answers sample\" /></p>\n\n<p>And that’s how you can easily group related content in a Coveo result list.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "55",
                "id": "1827",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1826",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1825",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "190d730137286fdae2afb598725ec480",
                "id": "1824",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/09/30/grouping-related-search-results/",
                "id": "1823",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/09/30/grouping-related-search-results/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-09-30T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "grouping-related-search-results",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-09-30T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/55",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/55/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/55/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/55/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/09/26/getting-the-most-out-of-relevancy/",
        "title": "Getting the most out of relevancy",
        "short_URL": "http://wp.me/p7VTrW-U",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "4ca28f6fc038a16ce407825fc4db8ab5",
        "ID": 56,
        "content": "<p>You probably wondered how come a result is coming first and not the other when performing a query. Why is the search result ranked in a certain way and what can you do about it?</p>\n\n<!-- more -->\n\n<h2 id=\"how-to-check-your-ranking\">How to check your ranking:</h2>\n\n<p>The best way to check your ranking is to enable the ranking information.</p>\n\n<p>To enable the ranking information, just perform the query: “enablerankinginformation”</p>\n\n<p>This will add to the result page some information about the ranking weights given to the documents (under Details - Ranking weights).</p>\n\n<p><em>Before enabling the ranking information:</em></p>\n\n<p><img src=\"/images/BeforeEnablingTheRankingInformation.png\" alt=\"Before enabling the ranking information\" /></p>\n\n<p><em>After enabling the ranking information:</em></p>\n\n<p><img src=\"/images/AfterEnablingTheRankingInformation.png\" alt=\"After enabling the ranking information\" /></p>\n\n<p>6634 is the total from all the weight under ranking weights tab. Do not include the “100”, these are not ranking weights but percentage. These percentages are used by Coveo engineers for debugging purpose.</p>\n\n<h2 id=\"example\">Example</h2>\n\n<p>If you look at the total weight, you’ll realize that the first document listed is the one with the higher weight.</p>\n\n<p><img src=\"/images/RankingTotalWeight.png\" alt=\"Ranking Total Weight\" /></p>\n\n<p>Notes:</p>\n\n<ul>\n  <li>These information are only available for the user which have enabled the ranking information</li>\n  <li>Enabling the ranking information uses a lot of additional memory in the ranking phase, so it should only be enabled temporary for analyzing ranking problem. To quit the ranking information mode, just perform the query: “disablerankinginformation”</li>\n</ul>\n\n<h2 id=\"relevance-ranking-steps\">Relevance ranking steps:</h2>\n\n<p>Relevance ranking has phases, each of them working on the documents sorted by the preceding phase.</p>\n\n<ol>\n  <li>First phase is performed on all documents, and tries to weight the query terms (is a term in the title, in the summary, in the concepts, etc).</li>\n  <li>\n    <p>The second phase is performed on a maximum of 50,000 documents, and weights the date and quality of the documents.</p>\n\n    <p>A phase has been inserted between the second and the third, and was named the Collaborative Ratings phase. This phase takes collaborative ratings information into account.</p>\n  </li>\n  <li>The third phase is more computing intensive, the goal here is to weight terms while taking their number of occurrences into account.</li>\n  <li>The last phase: the adjacency phase, is the phase where we compute the proximity of query terms, giving more weight to documents having the terms close together.</li>\n</ol>\n\n<p>As usual, every application comes with a default setting, and most of the time users can modify those settings so the ranking will match their own preferences.</p>\n\n<p>The ranking process is not an exception to that rule. Coveo comes with many features that will help you achieve your goal.</p>\n\n<p>In the next topics, I’ll provide you with detailed information on some of the features that you can use to personalize or customize the way your documents should be ranked.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "56",
                "id": "1837",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1836",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1835",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "7e82aa22dbda958f0db5dc0a2af7eddf",
                "id": "1834",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/09/26/getting-the-most-out-of-relevancy/",
                "id": "1833",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/09/26/getting-the-most-out-of-relevancy/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-09-26T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "getting-the-most-out-of-relevancy",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-09-26T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/56",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/56/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/56/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/56/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/09/23/adding-server-side-scripting/",
        "title": "Adding server-side scripting",
        "short_URL": "http://wp.me/p7VTrW-X",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "5439b6c2368a58001c9c2cc69a3a84c0",
        "ID": 59,
        "content": "<p>Recently, I’ve spent some time adding support for server-side scripts in Coveo’s Search API component. In a Coveo setup, the Search API provides the backend through which our JS UI framework executes queries on the index, using REST requests. Queries go through what we call the Query Pipeline. The Query Pipeline provides various ways to alter the query before it’s finally sent to the index server, and now offers scriptable extension points where you can implement complex custom logic when needed.</p>\n\n<!-- more -->\n\n<h2 id=\"choosing-a-script-language\">Choosing a script language</h2>\n\n<p>I had many choices of languages I could support. The Search API runs on the JVM, so I could simply load additional jars. But that requires compilation, and I wanted something users can simply edit, save and reload to test. Some kind of script language would work better. The Java ecosystem offers many options (Jython, JRuby, Groovy, several JavaScript runtimes, etc.). In the end, I settled on JavaScript, mainly because working with the JS UI already requires JS skills.</p>\n\n<p>There are several options for running JavaScript code on the JVM. At the time I started working on that, Java 8 was not yet released and thus the standard way to go was to use the Rhino engine that comes standard with the JDK (vs the new Nashorn engine in Java 8). So I started with Rhino.</p>\n\n<p>Pretty quickly I had the basics working: a query pipeline folder could contain a main.js file that would be loaded at initialization, and to which I could expose ways to interact with the query pipeline when queries are executed. Whenever the JavaScript code changes, it’s automatically reloaded so that the next query uses the latest code.</p>\n\n<p>I could now do stuff like this:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">onResolveIdentity</span><span class=\"p\">(</span><span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">authenticated</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">windowsDomainUser</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">UserId</span><span class=\"p\">();</span>\n  <span class=\"nx\">windowsDomainUser</span><span class=\"p\">.</span><span class=\"nx\">user</span> <span class=\"o\">=</span> <span class=\"s1\">'DOMAINsomeone'</span><span class=\"p\">;</span>\n  <span class=\"nx\">windowsDomainUser</span><span class=\"p\">.</span><span class=\"nx\">provider</span> <span class=\"o\">=</span> <span class=\"s1\">'Active Directory'</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"nx\">authenticated</span><span class=\"p\">.</span><span class=\"nx\">concat</span><span class=\"p\">(</span><span class=\"nx\">windowsDomainUser</span><span class=\"p\">);</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>This code adds an additional identity to use when executing the query. <code>Coveo.onResolveIdentity</code> is a method I implemented on the Scala Search API code. It gets passed some kind of handle to the JavaScript function, and later on I’m able to call this and collect the result (with lots of marshalling).</p>\n\n<h2 id=\"runtime-libraries\">Runtime libraries</h2>\n\n<p>I was pretty happy at this point, and then I started thinking: “How do I allow the JavaScript code to perform more sophisticated stuff, like reading files, calling stuff over the network, etc?” Code running under Rhino does have access to the Java libraries in the classpath, but it felt weird using Java libs in JavaScript. People won’t be expecting that.</p>\n\n<p>Another option was to provide 100% custom APIs for performing the common tasks. This would require quite a large amount of work, would be completely specific to our environment, and I’d also need to document all this. Hmm. Honestly, I prefer writing code.</p>\n\n<p>Then Greg on my team mentionned it’d be nice if we could make use of libs from NodeJS. As a matter of fact, I had previously investigated whether I could somehow embed the real NodeJS runtime inside my process, but it turns out it’s not quite possible yet (Node being essentially a single threaded system). It’s also not very convenient to call Node as an child process — I wanted to be able to expose a Java object and have my script code call its methods. So Node was out. But then Greg asked, isn’t there some Java implementation of Node, like there is for Python, Ruby, etc?</p>\n\n<p>Well, it turns out, there is.</p>\n\n<p>The <a href=\"http://nodyn.io\">Nodyn</a> project aims to implement a NodeJS runtime on the JVM. It’s being built by some nice folks working for Red Hat. It hasn’t reached its first release yet, but they already have quite a lot of the core APIs working. Also, they support using packages from NPM, so any of those that doesn’t use stuff that isn’t implemented yet should work fine.</p>\n\n<p>But there was one problem: they don’t use Rhino. Instead, they use the <a href=\"http://dynjs.org/\">DynJS</a> JavaScript runtime (built by the same folks). So before I could try using Nodyn in my stuff, I had to port all my JS runtime code to work with DynJS. In the end, it wasn’t very hard, and in fact, I find the DynJS API to be much nicer than Rhino’s, so even without Nodyn the switch was a plus.</p>\n\n<p>Then, from there loading the Nodyn environment into my JS environment was very easy:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\"><span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">global</span><span class=\"o\">.</span><span class=\"n\">defineGlobalProperty</span><span class=\"o\">(</span><span class=\"s\">\"__dirname\"</span><span class=\"o\">,</span> <span class=\"nc\">System</span><span class=\"o\">.</span><span class=\"n\">getProperty</span><span class=\"o\">(</span><span class=\"s\">\"user.dir\"</span><span class=\"o\">))</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">global</span><span class=\"o\">.</span><span class=\"n\">defineGlobalProperty</span><span class=\"o\">(</span><span class=\"s\">\"__filename\"</span><span class=\"o\">,</span> <span class=\"s\">\"v1\"</span><span class=\"o\">)</span>\n<span class=\"k\">val</span> <span class=\"n\">nodeJs</span> <span class=\"k\">=</span> <span class=\"n\">classOf</span><span class=\"o\">[</span><span class=\"kt\">org.projectodd.nodyn.Main</span><span class=\"o\">].</span><span class=\"n\">getClassLoader</span><span class=\"o\">.</span><span class=\"n\">getResourceAsStream</span><span class=\"o\">(</span><span class=\"s\">\"node.js\"</span><span class=\"o\">)</span>\n<span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">dynJs</span><span class=\"o\">.</span><span class=\"n\">newRunner</span><span class=\"o\">().</span><span class=\"n\">withSource</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"nc\">InputStreamReader</span><span class=\"o\">(</span><span class=\"n\">nodeJs</span><span class=\"o\">)).</span><span class=\"n\">evaluate</span><span class=\"o\">()</span></code></pre></figure>\n\n<p>That’s it. Well, of course I’ve added a Maven dependency to the Nodyn lib. But then I only need to arrange for the embedded <code>node.js</code> file to execute whenever I’m initializing a JavaScript context and then I’m good to go. Suddenly, I could do stuff like this in my JS code and everything would just work:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-javascript\"><span class=\"nx\">Coveo</span><span class=\"p\">.</span><span class=\"nx\">registerQueryExtension</span><span class=\"p\">(</span><span class=\"s1\">'stock'</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">query</span><span class=\"p\">,</span> <span class=\"nx\">callback</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">http</span><span class=\"p\">.</span><span class=\"nx\">request</span><span class=\"p\">(</span><span class=\"s1\">'http://d.yimg.com/autoc.finance.yahoo.com/autoc?callback=YAHOO.Finance.SymbolSuggest.ssCallback&amp;amp;query=goog'</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">json</span> <span class=\"o\">=</span> <span class=\"s1\">''</span><span class=\"p\">;</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'data'</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">chunk</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">json</span> <span class=\"o\">+=</span> <span class=\"nx\">chunk</span><span class=\"p\">;</span>\n    <span class=\"p\">});</span>\n\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'end'</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"kd\">var</span> <span class=\"nx\">data</span> <span class=\"o\">=</span> <span class=\"nb\">eval</span><span class=\"p\">((</span><span class=\"s1\">''</span> <span class=\"o\">+</span> <span class=\"nx\">json</span><span class=\"p\">).</span><span class=\"nx\">replace</span><span class=\"p\">(</span><span class=\"s1\">'YAHOO.Finance.SymbolSuggest.ssCallback'</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">));</span> <span class=\"c1\">// Very secure, please do that at home kids.</span>\n\n      <span class=\"kd\">var</span> <span class=\"nx\">tickers</span> <span class=\"o\">=</span> <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">ResultSet</span><span class=\"p\">.</span><span class=\"nx\">Result</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"nx\">result</span><span class=\"p\">.</span><span class=\"nx\">symbol</span><span class=\"p\">;</span>\n      <span class=\"p\">});</span>\n\n      <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">tickers</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n  <span class=\"p\">}).</span><span class=\"nx\">end</span><span class=\"p\">();</span>\n<span class=\"p\">});</span></code></pre></figure>\n\n<p>Yay! No need to provide calls to perform everything. Customers can simply use stock Node APIs or use packages from NPM. My empty sandbox suddently had thousands of libraries available.</p>\n\n<h2 id=\"handling-callbacks\">Handling callbacks</h2>\n\n<p>One thing about Node, it never blocks threads. Well, mostly. That’s why it scales so well. So, pretty much all code written for Node uses callbacks for about everything. This means I had to handle that as well on my code.</p>\n\n<p>In my first implementation, when a JS function returned, it was expected that the return value was definitive and fully computed. It made it impossible to use Node APIs that use callbacks to signal that an async operation (like an HTTP request) completed.</p>\n\n<p>Right now, the implementation for the Search API’s REST service doesn’t use an async model. This means a thread is allocated to each request and is kept in use until the processing is finished. I want to change that at some point, but for now any remote call will simply block the thread.</p>\n\n<p>I needed a way for my main request thread to block if the JS code I’ve invoked is executing some asynchronous process. Also, I wanted to keep support for synchronous usage (e.g. returning a value directly), because that’s often just simpler and simple is good.</p>\n\n<p>To address this, I arranged for all my calls to JS code to go through a single call point that would check the function being invoked from Scala code. If the function has one more formal parameter than what’s expected (based on the params I’m passing it), I assume the additional parameter is a callback, and I pass it a special object. Then, if the function doesn’t return anything meaningful (e.g. <code>undefined</code>), I block the main request thread until the callback has been called, or if a specific timeout expires.</p>\n\n<p>Here’s the code (well, part of it):</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-scala\"><span class=\"k\">def</span> <span class=\"n\">call</span><span class=\"o\">(</span><span class=\"n\">runtime</span><span class=\"k\">:</span> <span class=\"kt\">JsRuntime</span><span class=\"o\">,</span> <span class=\"n\">function</span><span class=\"k\">:</span> <span class=\"kt\">JSFunction</span><span class=\"o\">,</span> <span class=\"n\">theThis</span><span class=\"k\">:</span> <span class=\"kt\">JSFunction</span><span class=\"o\">,</span> <span class=\"n\">args</span><span class=\"k\">:</span> <span class=\"kt\">Seq</span><span class=\"o\">[</span><span class=\"kt\">Object</span><span class=\"o\">])</span><span class=\"k\">:</span> <span class=\"kt\">Object</span> <span class=\"o\">=</span> <span class=\"o\">{</span>\n  <span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">executeInEventLoopThread</span><span class=\"o\">(</span><span class=\"n\">defaultTimeout</span><span class=\"o\">)(</span><span class=\"n\">cb</span> <span class=\"o\">=&amp;</span><span class=\"n\">gt</span><span class=\"o\">;</span> <span class=\"o\">{</span>\n    <span class=\"c1\">// If the function takes one more parameter than what we've been provided, assume\n</span>    <span class=\"c1\">// it's a callback and enable waiting on it. Looks like a hack, but hey why not?\n</span>    <span class=\"k\">val</span> <span class=\"n\">jsCallback</span> <span class=\"k\">=</span> <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">function</span><span class=\"o\">.</span><span class=\"n\">getFormalParameters</span><span class=\"o\">.</span><span class=\"n\">length</span> <span class=\"o\">&amp;</span><span class=\"n\">gt</span><span class=\"o\">;</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">length</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"nc\">Some</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"nc\">JsCallback</span><span class=\"o\">(</span><span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">global</span><span class=\"o\">,</span> <span class=\"n\">cb</span><span class=\"o\">))</span>\n    <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n      <span class=\"nc\">None</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"k\">val</span> <span class=\"n\">result</span> <span class=\"k\">=</span> <span class=\"n\">runtime</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"o\">(</span><span class=\"n\">function</span><span class=\"o\">,</span> <span class=\"n\">theThis</span><span class=\"o\">,</span> <span class=\"n\">args</span> <span class=\"o\">:+</span> <span class=\"n\">jsCallback</span><span class=\"o\">.</span><span class=\"n\">getOrElse</span><span class=\"o\">(</span><span class=\"nc\">Types</span><span class=\"o\">.</span><span class=\"nc\">UNDEFINED</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"k\">_</span><span class=\"kt\">*</span><span class=\"o\">)</span>\n\n    <span class=\"n\">result</span> <span class=\"k\">match</span> <span class=\"o\">{</span>\n      <span class=\"k\">case</span> <span class=\"nc\">Types</span><span class=\"o\">.</span><span class=\"nc\">UNDEFINED</span> <span class=\"k\">if</span> <span class=\"n\">jsCallback</span><span class=\"o\">.</span><span class=\"n\">isDefined</span> <span class=\"o\">=&amp;</span><span class=\"n\">gt</span><span class=\"o\">;</span>\n      <span class=\"c1\">// When a function returns undefined, we assume it'll call the callback\n</span>      <span class=\"c1\">// function that was provided to it automatically. There is no need to\n</span>      <span class=\"c1\">// wait in this thread because executeInEventLoop will do that for us.\n</span>      <span class=\"k\">case</span> <span class=\"n\">other</span> <span class=\"o\">=&amp;</span><span class=\"n\">gt</span><span class=\"o\">;</span>\n        <span class=\"c1\">// Otherwise, when a function returns a value we call the callback ourselves\n</span>        <span class=\"n\">cb</span><span class=\"o\">(</span><span class=\"nc\">Right</span><span class=\"o\">(</span><span class=\"n\">other</span><span class=\"o\">))</span>\n    <span class=\"o\">}</span>\n  <span class=\"o\">})</span>\n<span class=\"o\">}</span></code></pre></figure>\n\n<p>Under the hood, Nodyn uses <a href=\"http://vertx.io/\">Vert.x</a> for providing event loops usable for async operation (among many other things). So, every time I make a JS call, I arrange for it to happen in a Vert.x event loop. Per design, all subsequent callbacks are invoked in the same event loop (e.g. no parallel execution). So I only have to wait in my main request thread for the result to be available.</p>\n\n<h2 id=\"using-npm-packages\">Using NPM packages</h2>\n\n<p>At this point I started showing this to some coworkers and PS guys (professional services consultants). One of those conveniently had a need to override some stuff based on data retrieved from a SOAP service ಠ_ಠ, and he was willing to beta test my stuff. There are many libs in NPM to call SOAP services, and in the end it boils down to making an HTTP request somewhere. Should be a piece of cake, right? I mean, I did that at least <em>once</em>.</p>\n\n<p>Well, not so fast here cowboy.</p>\n\n<p>As I said previously, Nodyn hasn’t reached a first release yet, and this means there are some rough corners. In particular, it had issues with the <a href=\"https://www.npmjs.org/package/request\">request</a> NPM package, which the SOAP library used under the hood. I had to fix a couple of glitches in the Nodyn and DynJS code to get the package to work as expected. I’ve submitted those changes to the maintainers, and the fixes are now merged in the official code.</p>\n\n<p>A more annoying thing was that request seems to access undocumented fields of Node’s HTTP request, which for obvious reason aren’t present in Nodyn’s implementation. For now I worked around this by “enhancing” the Nodyn objects with some stubs (this only when running in my environment, since it’s too ugly for a pull request). Still, I’d like to find a better solution to this. The Nodyn devs are currently rewritting the HTTP stack directly on top of Netty, so I’ll wait a little and then check if there’s something better to do.</p>\n\n<p><strong>UPDATE:</strong> I just learned that the Nodyn devs switched to a different approach for implementing Node’s core APIs. Instead of replicating the user facing APIs with their own implementation, they now only implement the native APIs from which Node’s JS runtime depends. This means they are now using Node’s own JS code as-is, effectively eliminating this family of issues once and for all. Great!</p>\n\n<p>With those changes, I was able to build a client from the service’s WSDL and use it to call some methods. The only problem remaining is performance: the parser that processes the WSDL runs pretty slowly on DynJS. Right now I’m not using the JIT feature of the interpreter, because I had a weird error when I tried it, so that might explain the performance issue.</p>\n\n<p>In any cases, I’ve seen mentions that Nodyn might also support Nashorn as a JS engine in the future, which should take care of performance issues if I can’t get DynJS to run faster. Also, the problem really happens when CPU intensive work is being done in JavaScript, which often ain’t the case anyway.</p>\n\n<p>Of course, I expect other issues to appear with other NPM packages. I’ll try to address those as they come. Still, what’s already working is a pretty interesting addition.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "59",
                "id": "1869",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1868",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1867",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "c40c5938b2b6d90b0f4330c5f4e13908",
                "id": "1866",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/09/23/adding-server-side-scripting/",
                "id": "1865",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/09/23/adding-server-side-scripting/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-09-23T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "adding-server-side-scripting",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-09-23T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/59",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/59/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/59/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/59/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/09/23/better-unit-test-assertions-in-java/",
        "title": "Better unit test assertions in Java",
        "short_URL": "http://wp.me/p7VTrW-W",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "55d0c2555a0a56b4784a3902df0071a9",
        "ID": 58,
        "content": "<p>If you’ve ever written a unit test in Java, you’ve probably used JUnit 4 and done something like this:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-java\"><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">CompanyTest</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Company</span> <span class=\"n\">company</span><span class=\"o\">;</span>\n    <span class=\"nd\">@Before</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setup</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n        <span class=\"n\">company</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Company</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Test</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">getEmployees</span><span class=\"o\">()</span>\n    <span class=\"o\">{</span>\n        <span class=\"n\">company</span><span class=\"o\">.</span><span class=\"na\">addEmployee</span><span class=\"o\">(</span><span class=\"s\">\"John\"</span><span class=\"o\">);</span>\n        <span class=\"n\">company</span><span class=\"o\">.</span><span class=\"na\">addEmployee</span><span class=\"o\">(</span><span class=\"s\">\"Susan\"</span><span class=\"o\">);</span>\n        <span class=\"n\">assertEquals</span><span class=\"o\">(</span><span class=\"n\">company</span><span class=\"o\">.</span><span class=\"na\">getEmployees</span><span class=\"o\">().</span><span class=\"na\">size</span><span class=\"o\">(),</span> <span class=\"mi\">2</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\t    \n<span class=\"o\">}</span></code></pre></figure>\n\n<p>This is okay and gets the job done. However, I think there are some issues with this approach.</p>\n\n<!-- more -->\n\n<p>If there’s a bug in your <code class=\"highlighter-rouge\">Company</code> class and the <code class=\"highlighter-rouge\">addEmployee</code> method does not work, you will get the following message:</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>java.lang.AssertionError:\nExpected :0\nActual   :2\n</code></pre>\n</div>\n\n<p>Expected 0? Oops, <code class=\"highlighter-rouge\">assertEquals</code> takes the expected value first and the actual value second. That’s an easy mistake to make. So you fix your test and write it as:</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>assertEquals(2, company.getEmployees().size());\n</code></pre>\n</div>\n\n<p>And now you get:</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>java.lang.AssertionError:\nExpected :2\nActual   :0\n</code></pre>\n</div>\n\n<p>That’s better. Now you know that the test expects an integer with a value of 2 but received an integer with a value of 0.</p>\n\n<p>But is that really what your test expects? I would argue that you were expecting a collection with a size of 2, not an integer with a size of 2. Sadly, it is not easy to express this with JUnit 4.</p>\n\n<h2 id=\"introducing-fest-assertionshttpsgithubcomalexruizfest-assert-2xwikiusing-fest-assertions-or-fluent-assertions\">Introducing <a href=\"https://github.com/alexruiz/fest-assert-2.x/wiki/Using-fest-assertions\">Fest Assertions</a> (or Fluent Assertions)!</h2>\n\n<p>Fest Assertions introduces a new static method, <code class=\"highlighter-rouge\">assertThat</code> that gives you the power to easily express complex assertions in a way that allows the assertion engine to <em>know</em> what you want to verify.</p>\n\n<p>The best way to write the above unit test would become:</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>assertThat(company.getEmployees()).hasSize(2);\n</code></pre>\n</div>\n\n<p>If this test fails, you will get the following message:</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>java.lang.AssertionError: expected size:&lt;2&gt; but was:&lt;0&gt; for &lt;[]&gt;\n</code></pre>\n</div>\n\n<p>This is much better! Now we know that we expected a collection with size 2 but the actual size was zero. We can even see the content of the collection being tested. This technique also addresses the problem of <code class=\"highlighter-rouge\">assertEquals()</code> parameter order.</p>\n\n<p>Here are some more examples on how <code class=\"highlighter-rouge\">assertThat</code> can help you.</p>\n\n<h3 id=\"another-cleaner-error-message\">Another cleaner error message</h3>\n\n<p><em>The test</em></p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>// Before\nassertTrue(company.getEmployees().isEmpty());\n// After\nassertThat(company.getEmployees()).isEmpty());\n</code></pre>\n</div>\n\n<p><em>The assertion message</em></p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>// Before (yes, that's all it says!)\njava.lang.AssertionError\n// After\njava.lang.AssertionError: expecting empty, but was:&lt;['John']&gt;\n</code></pre>\n</div>\n\n<h3 id=\"code-that-reads-more-like-english\">Code that reads more like english</h3>\n\n<p><em>The test</em></p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>// Before\nassertFalse(company.isHiring());\n// After\nassertThat(company.isHiring()).isFalse();\n</code></pre>\n</div>\n\n<h3 id=\"powerful-assertions\">Powerful assertions</h3>\n\n<p><em>The test</em></p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>// Before\nassertTrue(company instanceof Company);\n// After\nassertThat(company).isInstanceOf(Company.class);\n</code></pre>\n</div>\n\n<p><em>The assertion message</em></p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>// Before\njava.lang.AssertionError\n// After\njava.lang.AssertionError: expected instance of:&lt;com.coveo.Company&gt; but was instance of:&lt;java.lang.Object&gt;\n</code></pre>\n</div>\n\n<p>EDIT: <a href=\"/2014/10/01/java8-mockito/\">Here</a> is another way you can enhance the readability of your tests using Java 8.</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "58",
                "id": "1857",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1856",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1855",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "adfaec63553c00d8659f9bf6e584f1a3",
                "id": "1854",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/09/23/better-assertions/",
                "id": "1853",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/09/23/better-unit-test-assertions-in-java/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-09-23T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "better-unit-test-assertions-in-java",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-09-23T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/58",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/58/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/58/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/58/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://localhost/wordpress/index.php/2014/09/23/coveo-for-sitecore-troubleshooting/",
        "title": "Coveo for Sitecore troubleshooting",
        "short_URL": "http://wp.me/p7VTrW-V",
        "discussion": {
            "pings_open": true,
            "comment_count": 0,
            "comments_open": true,
            "ping_status": "open",
            "comment_status": "open"
        },
        "tags": {},
        "global_ID": "4d230ce4cb3ffc36604f58079589e9fe",
        "ID": 57,
        "content": "<p>Coveo for Sitecore has been out for a few months now and we had to rethink the way we index search and of course, for us, support and maintenance people, the way we tackle the issues popping here and there.</p>\n\n<!-- more -->\n\n<p>Our Search Provider implementation pushes documents to RabbitMQ, which keeps them warm until Coveo picks them up for indexing. The configuration is set in the <span style=\"color:gray;\">Coveo.SearchProvider.config</span> file and is also being synchronised with the indexing back-end through the Coveo Admin Service. The schema below is from the Coveo Online Help, for now I will only address the Search Provider part.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/CoveoForSitecore1.png\" alt=\"\" /></p>\n\n<p>The process is simpler than before but the troubleshooting will require a change of mindset.</p>\n\n<p>IMPORTANT: The <a href=\"http://onlinehelp.coveo.com/en/ces/7.0/Administrator/using_the_ces_console.htm\">CES Console</a> is your dear friend for all your Coveo operations. This is still the case with Coveo for Sitecore. The first step before starting any type of troubleshooting is to arm yourself with that friendly tool. Be aware that you can filter by source or system events.</p>\n\n<p>NEW STUFF: For all of you using June 2014’s release or newer, the R&amp;D team added a built-in <a href=\"https://developers.coveo.com/display/public/SC201406/Coveo+Diagnostic+Page\">Coveo Diagnostic Page</a>. I will not lie, this is one of my favorite new feature.</p>\n\n<h2 id=\"the-new-process-and-where-you-should-look-first-when-something-is-wrong\">The new process and where you should look first when something is wrong</h2>\n\n<h3 id=\"sitecore\">Sitecore</h3>\n\n<p><strong>1. Admin service issue.</strong></p>\n\n<p>The first blocking issue you could meet is directly in the Sitecore Indexing Manager.  As I mentioned before, the Coveo Admin Service is the messenger for configuration-related calls, which means that it is also the first component of the chain that can fail. The Coveo for Sitecore diagnostic page should also tell you if anything is not running properly. If you do not have it, you will see the service state in the Windows Services, where it can be stopped or started. You can also access it directly through your browser using <span style=\"color:gray;\">http://localhost/AdminService</span> or <span style=\"color:gray;\">http://localhost/AdminService?wsdl</span>.</p>\n\n<p>Now, what can go wrong with it? Well if you are using Coveo for Sitecore with a Coveo instance that you have been using with other connectors, you might have not installed the Coveo Admin Service in the first place. It is not installed by default with the Coveo Enterprise Search Installation Wizard, you need to choose the Custom Install path and make sure that it is selected.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/cesinstws2012-installingfoldersadminservice3.png\" alt=\"\" /></p>\n\n<p>The other common issue is with the https certificate. If you are using a restrictive certificate imposing an instance name, then the default local host will not pass the validation step. Simply change the <span style=\"color:gray;\">&lt;AdminServiceUri&gt;</span> value from <span style=\"color:gray;\">localhost/AdminService</span> to <span style=\"color:gray;\">[qualified name]/AdminService</span> in the <span style=\"color:gray;\">Coveo.SearchProvider.config</span>.</p>\n\n<p>Finally, you must leave some breathing space for the service, so do not forget to enable port 80 or 443 depending on the security of your service.  The ports can be managed in the <span style=\"color:gray;\">Coveo.CES.AdminService.exe.config</span> file located by default under <span style=\"color:gray;\">C:Program FilesCoveo Enterprise Search 7BinAdminServiceSecurity</span>. An issue with the Admin Service could return this type of error in the Sitecore Indexing manager:</p>\n\n<p><span style=\"color:red;\">System.ServiceModel.EndpointNotFoundException: There was no endpoint listening at http://127.0.0.1/AdminService that could accept the message.</span></p>\n\n<p>NOTE: The Coveo Admin Service has its own logging stored by default under <span style=\"color:gray;\">C:Program FilesCoveo Enterprise Search 7Bin</span></p>\n\n<p><strong>2. Version mismatch issue.</strong></p>\n\n<p>This is a common one and you can easily make a mistake. Even for minor upgrades, an installation of both the CES instance and the Coveo for Sitecore package, including the Search Provider and Search Interface, needs to be performed. A failure to do so might produce several errors at indexing and querying time. One of the most common error would be a “method not found” exceptions. To double check your versions, use the property options on the Coveo DLLs in the bin folder of your Sitecore. Consult the Coveo Online Help for more information on both the <a href=\"http://onlinehelp.coveo.com/en/ces/7.0/administrator/coveo_enterprise_search_70_release_notes.htm\">Coveo Enterprise Search 7</a> and <a href=\"//onlinehelp.coveo.com/en/ces/7.0/administrator/coveo_for_sitecore_3_0_-_release_notes.htm\">Coveo For Sitecore</a> versions.</p>\n\n<p><strong>3. Duplicate Key Exception.</strong></p>\n\n<p>This is a hidden issue fixed in July 2014’s version of Coveo for Sitecore. The Coveo Admin Service will not be able to create a new Security Provider if an old User Identity is already active. If the indexing manager fails with the following Exception:</p>\n\n<p><span style=\"color:red;\">Fail to add security provider “Security Provider” on source …</span></p>\n\n<p>then simply navigate to the Coveo Administration Tool under the <span style=\"color:gray;\">Configuration</span> &gt;&gt; <span style=\"color:gray;\">Security</span> tab. Choose the User Identity menu and delete any User identity with the following name:  <span style=\"color:gray;\">Sitecore Admin for [Your instance name]</span>.</p>\n\n<p><strong>4. QueueURI invalid.</strong></p>\n\n<p>Not much to say on this one, the QueueURI is set in the <span style=\"color:gray;\">Coveo.SearchProvider.config</span> file.</p>\n\n<p>Make sure that it is matching the one set in the RabbitMQ Management page. See the RabbitMQ section below for more details on how to reach this page. If the QueueURI is not set properly, you will most likely hit this error while indexing:</p>\n\n<p><span style=\"color:red;\">RabbitMQ.Client.Exceptions.BrokerUnreachableException: “None of the specified endpoints were reachable.”</span></p>\n\n<p>TIP: Sitecore produces an enormous amount of logging but everything related to the Coveo Search Provider at the Sitecore level can be found in the logs with the following naming convention: <span style=\"color:gray;\">log[timestamp].txt</span>. It is with all the other logs in the Data/logs folder of your Sitecore instance. No need to look in the Coveo file system until now.</p>\n\n<p>IMPORTANT: Closing the dialog window will not stop the indexing process. The only way to force Sitecore to stop is through a recycle/reset in IIS.</p>\n\n<p><span style=\"color:red;\">WARNING: Depending on how you customize your Coveo for Sitecore, you might play around the config files under the App_Config folder of your Sitecore instance. Do remember that Sitecore reads EVERY file with the .config extension. So if you are to keep a few files as backup, keep in mind that you should use .config.backup and not .backup.config as an extension. It is common Sitecore knowledge but since a mistake is easily made, I prefer to mention it here. Remember that Sitecore does provide you with a merge of all the config file in the Show Config page: <span style=\"text-decoration:underline;\">http://[sitecoreinstance]/sitecore/admin/showconfig.aspx</span></span></p>\n\n<h3 id=\"coveo\">Coveo</h3>\n\n<p><strong>1. Live monitoring stopped.</strong></p>\n\n<p>As I mentioned before, the new Coveo for Sitecore integration has the “Everything is done in Sitecore” mindset. 95% of the time, you will be conducting publishing, indexing and even troubleshooting operations only in Sitecore. Still, if the indexing is working properly in Sitecore but the CES Console is not logging any activity, then you might want to take a look at the <span style=\"color:gray;\">Coveo Administration Tools</span>.\nUnder the <span style=\"color:gray;\">Index</span> &gt;&gt; <span style=\"color:gray;\">Sources and Collections</span> tab, you will find the Sitecore Search Provider collection with the sources corresponding to the database name set in your <span style=\"color:gray;\">Coveo.SearchProvider.config</span>.</p>\n\n<p>NOTE: Adding databases or changing source name for scaling scenarios is described in further details in our <a href=\"https://developers.coveo.com/display/SC201406/Scaling+Coveo+for+Sitecore+Over+Multiple+Hosts\">Scaling Guide</a>.</p>\n\n<p>There is no point on trying to rebuild or refresh manually these sources, they are plugged to the search provider and are commanded under the cover by the Sitecore Indexing Manager. What you can do however, is the good old “turn it off and on again” that the IT world has been relying on since the beginning of the computer era. To do so here, click on one of the sources, it will lead you to the source status page. From there, you will be able to disable and re-enable the live-monitoring operation. Keep an eye on the CES Console since it will tell you straight away (and in bright red) if anything is wrong. You can also use the check boxes to select multiple sources and use the drop-down box to disable and enable live monitoring. Most of the time, this will resume the indexing operation.</p>\n\n<p><strong>2. The security provider handbrake.</strong></p>\n\n<p>The security provider is now created automatically by the Admin service, thus reducing the configuration errors which were frequents with earlier connectors. Still, a downed Sitecore can prevent the security provider to load properly, triggering an handbrake on the indexing operation. Usually, Coveo will be nice enough to warn you with the following message on the status page of the Coveo Administration Tools:</p>\n\n<p><span style=\"color:red;\">A security provider is not properly configured.</span></p>\n\n<p>Simply navigate to your Sitecore Security Provider under the <span style=\"color:gray;\">Configuration</span> &gt;&gt; <span style=\"color:gray;\">Security</span> tab and reload it by clicking on <span style=\"color:gray;\">Accept Changes</span> at the bottom of the page. Once it is done, simply disable and enable the live monitoring operation on the source and you should be good to go.</p>\n\n<p><strong>3. QueueURI invalid part 2.</strong></p>\n\n<p>There are two locations where you can set the QueueURI, the <span style=\"color:gray;\">Coveo.SearchProvider.config</span> file and the Coveo Administration Tool. As I mentioned before, an invalid QueueUri in the .config file will break the indexing process in Sitecore. Same goes on Coveo side but it can be harder to spot and if it is not fixed quickly, it could end up filling the Queue, and your disk at the same time.</p>\n\n<p>The QueueURI is defined in the source’s general properties under the <span style=\"color:gray;\">Index</span> &gt;&gt; <span style=\"color:gray;\">Sources and Collections</span> tab. It is set automatically by the Admin Service when you first perform a rebuild in Sitecore, so a mismatch is not a common error but it is worth keeping it as a reminder in your troubleshooting guide. If you have to change it, do not forget to accept the changes at the bottom of the page.</p>\n\n<h3 id=\"rabbitmq\">RabbitMQ</h3>\n\n<p>The newest fluffy addition to the Coveo and Sitecore relationship is RabbitMQ. The default access point of the management is <span style=\"color:gray;\">http://localhost:15672/</span> and the username and password are <span style=\"color:gray;\">guest/guest</span>. RabbitMQ will give you a simple and user friendly overview of the current crawling operation. While rebuilding, an empty queue will be a clear sign that nothing left Sitecore, while a full and idle queue will reveal a Coveo issue.</p>\n\n<p><img src=\"http//onlinehelp.coveo.com/images/rabbit_mq_management_plugin_2.png\" alt=\"\" /></p>\n\n<p><span style=\"color:red;\">WARNING: If you ran several indexing operations that are not being picked up by Coveo or you changed the source name multiple times, the documents will not be automatically cleared from the Queue. This could end up filling up the drive on which your RabbitMQ is installed. By clicking on the Queue, you will be able to Delete or Purge it. We don’t recommend to use the purge unless the Queue is not used anymore, in case of a source name change for example.</span></p>\n\n<p>LAST TIP: Coveo supports <a href=\"https://developers.coveo.com/display/public/SC201406/Using+the+Sitecore+Search+Provider#UsingtheSitecoreSearchProvider-UsingLoggingforDebuggingPurposes\">log4net</a>, do not hesitate to use it!</p>\nSource: source.coveo.com",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "57",
                "id": "1847",
                "key": "original_post_id"
            },
            {
                "value": "57f4089d3ff14",
                "id": "1846",
                "key": "restapi_import_id"
            },
            {
                "value": "my_blog",
                "id": "1845",
                "key": "rss_pi_canonical_url"
            },
            {
                "value": "5956cae8961fbc6b70a9f537dba8db60",
                "id": "1844",
                "key": "rss_pi_source_md5"
            },
            {
                "value": "https://cjohnson78.github.io/source.coveo.com/2014/09/23/coveo-for-sitecore-troubleshooting/",
                "id": "1843",
                "key": "rss_pi_source_url"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {}
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2014/09/23/coveo-for-sitecore-troubleshooting/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2014-09-23T00:00:00+00:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "coveo-for-sitecore-troubleshooting",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2014-09-23T00:00:00+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/57",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/57/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/57/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/57/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=919",
        "title": "Markup: HTML Tags and Formatting",
        "short_URL": "http://wp.me/p7VTrW-j0",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "content": {
                "description": "",
                "post_count": 12,
                "ID": 35181409,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "content-2",
                "name": "content"
            },
            "markup": {
                "description": "",
                "post_count": 6,
                "ID": 38696790,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "markup-2",
                "name": "markup"
            },
            "formatting": {
                "description": "",
                "post_count": 1,
                "ID": 44189092,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:formatting-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:formatting-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "formatting-2",
                "name": "formatting"
            },
            "html": {
                "description": "",
                "post_count": 5,
                "ID": 647,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "html",
                "name": "html"
            },
            "css": {
                "description": "",
                "post_count": 7,
                "ID": 169,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "css",
                "name": "css"
            }
        },
        "global_ID": "80a4aa77d4856e14909d8919cbe256e5",
        "ID": 1178,
        "content": "<h2>Headings</h2>\n<h1>Header one</h1>\n<h2>Header two</h2>\n<h3>Header three</h3>\n<h4>Header four</h4>\n<h5>Header five</h5>\n<h6>Header six</h6>\n<h2>Blockquotes</h2>\nSingle line blockquote:\n<blockquote>Stay hungry. Stay foolish.</blockquote>\nMulti line blockquote with a cite reference:\n<blockquote>People think focus means saying yes to the thing you've got to focus on. But that's not what it means at all. It means saying no to the hundred other good ideas that there are. You have to pick carefully. I'm actually as proud of the things we haven't done as the things I have done. Innovation is saying no to 1,000 things. </blockquote>\n<cite>Steve Jobs</cite> - Apple Worldwide Developers' Conference, 1997\n<h2>Tables</h2>\n<table>\n<thead>\n<tr>\n<th>Employee</th>\n<th>Salary</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th><a href=\"http://example.org/\">John Doe</a></th>\n<td>$1</td>\n<td>Because that's all Steve Jobs needed for a salary.</td>\n</tr>\n<tr>\n<th><a href=\"http://example.org/\">Jane Doe</a></th>\n<td>$100K</td>\n<td>For all the blogging she does.</td>\n</tr>\n<tr>\n<th><a href=\"http://example.org/\">Fred Bloggs</a></th>\n<td>$100M</td>\n<td>Pictures are worth a thousand words, right? So Jane x 1,000.</td>\n</tr>\n<tr>\n<th><a href=\"http://example.org/\">Jane Bloggs</a></th>\n<td>$100B</td>\n<td>With hair like that?! Enough said...</td>\n</tr>\n</tbody>\n</table>\n<h2>Definition Lists</h2>\n<dl><dt>Definition List Title</dt><dd>Definition list division.</dd><dt>Startup</dt><dd>A startup company or startup is a company or temporary organization designed to search for a repeatable and scalable business model.</dd><dt>#dowork</dt><dd>Coined by Rob Dyrdek and his personal body guard Christopher \"Big Black\" Boykins, \"Do Work\" works as a self motivator, to motivating your friends.</dd><dt>Do It Live</dt><dd>I'll let Bill O'Reilly will <a title=\"We'll Do It Live\" href=\"https://www.youtube.com/watch?v=O_HyZ5aW76c\">explain</a> this one.</dd></dl>\n<h2>Unordered Lists (Nested)</h2>\n<ul>\n\t<li>List item one\n<ul>\n\t<li>List item one\n<ul>\n\t<li>List item one</li>\n\t<li>List item two</li>\n\t<li>List item three</li>\n\t<li>List item four</li>\n</ul>\n</li>\n\t<li>List item two</li>\n\t<li>List item three</li>\n\t<li>List item four</li>\n</ul>\n</li>\n\t<li>List item two</li>\n\t<li>List item three</li>\n\t<li>List item four</li>\n</ul>\n<h2>Ordered List (Nested)</h2>\n<ol>\n\t<li>List item one\n<ol>\n\t<li>List item one\n<ol>\n\t<li>List item one</li>\n\t<li>List item two</li>\n\t<li>List item three</li>\n\t<li>List item four</li>\n</ol>\n</li>\n\t<li>List item two</li>\n\t<li>List item three</li>\n\t<li>List item four</li>\n</ol>\n</li>\n\t<li>List item two</li>\n\t<li>List item three</li>\n\t<li>List item four</li>\n</ol>\n<h2>HTML Tags</h2>\nThese supported tags come from the WordPress.com code <a title=\"Code\" href=\"http://en.support.wordpress.com/code/\">FAQ</a>.\n\n<strong>Address Tag</strong>\n\n<address>1 Infinite Loop\nCupertino, CA 95014\nUnited States</address><strong>Anchor Tag (aka. Link)</strong>\n\nThis is an example of a <a title=\"Apple\" href=\"http://apple.com\">link</a>.\n\n<strong>Abbreviation Tag</strong>\n\nThe abbreviation <abbr title=\"Seriously\">srsly</abbr> stands for \"seriously\".\n\n<strong>Acronym Tag (<em>deprecated in HTML5</em>)</strong>\n\nThe acronym <acronym title=\"For The Win\">ftw</acronym> stands for \"for the win\".\n\n<strong>Big Tag <strong>(<em>deprecated in HTML5</em>)</strong></strong>\n\nThese tests are a <big>big</big> deal, but this tag is no longer supported in HTML5.\n\n<strong>Cite Tag</strong>\n\n\"Code is poetry.\" --<cite>Automattic</cite>\n\n<strong>Code Tag</strong>\n\nYou will learn later on in these tests that <code>word-wrap: break-word;</code> will be your best friend.\n\n<strong>Delete Tag</strong>\n\nThis tag will let you <del>strikeout text</del>, but this tag is no longer supported in HTML5 (use the <code>&lt;strike&gt;</code> instead).\n\n<strong>Emphasize Tag</strong>\n\nThe emphasize tag should <em>italicize</em> text.\n\n<strong>Insert Tag</strong>\n\nThis tag should denote <ins>inserted</ins> text.\n\n<strong>Keyboard Tag</strong>\n\nThis scarcely known tag emulates <kbd>keyboard text</kbd>, which is usually styled like the <code>&lt;code&gt;</code> tag.\n\n<strong>Preformatted Tag</strong>\n\nThis tag styles large blocks of code.\n<pre>.post-title {\n\tmargin: 0 0 5px;\n\tfont-weight: bold;\n\tfont-size: 38px;\n\tline-height: 1.2;\n\tand here's a line of some really, really, really, really long text, just to see how the PRE tag handles it and to find out how it overflows;\n}</pre>\n<strong>Quote Tag</strong>\n\n<q>Developers, developers, developers...</q> --Steve Ballmer\n\n<strong>Strike Tag <strong>(<em>deprecated in HTML5</em>)</strong></strong>\n\nThis tag shows <span style=\"text-decoration:line-through;\">strike-through text</span>\n\n<strong>Strong Tag</strong>\n\nThis tag shows <strong>bold<strong> text.</strong></strong>\n\n<strong>Subscript Tag</strong>\n\nGetting our science styling on with H<sub>2</sub>O, which should push the \"2\" down.\n\n<strong>Superscript Tag</strong>\n\nStill sticking with science and Isaac Newton's E = MC<sup>2</sup>, which should lift the 2 up.\n\n<strong>Teletype Tag <strong>(<em>deprecated in HTML5</em>)</strong></strong>\n\nThis rarely used tag emulates <tt>teletype text</tt>, which is usually styled like the <code>&lt;code&gt;</code> tag.\n\n<strong>Variable Tag</strong>\n\nThis allows you to denote <var>variables</var>.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "919",
                "id": "1277",
                "key": "original_post_id"
            },
            {
                "value": "1178",
                "id": "1280",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1279",
                "key": "restapi_import_id"
            },
            {
                "value": "",
                "id": "1275",
                "key": "standard_link_url_field"
            },
            {
                "value": "",
                "id": "1274",
                "key": "standard_seo_post_level_layout"
            },
            {
                "value": "",
                "id": "1276",
                "key": "standard_seo_post_meta_description"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Markup": {
                    "description": "Posts in this category test markup tags and styles.",
                    "parent": 0,
                    "post_count": 6,
                    "ID": 4675,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "markup",
                    "name": "Markup"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "content": {
                    "description": "",
                    "post_count": 12,
                    "ID": 35181409,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "content-2",
                    "name": "content"
                },
                "markup": {
                    "description": "",
                    "post_count": 6,
                    "ID": 38696790,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "markup-2",
                    "name": "markup"
                },
                "formatting": {
                    "description": "",
                    "post_count": 1,
                    "ID": 44189092,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:formatting-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:formatting-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "formatting-2",
                    "name": "formatting"
                },
                "html": {
                    "description": "",
                    "post_count": 5,
                    "ID": 647,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "html",
                    "name": "html"
                },
                "css": {
                    "description": "",
                    "post_count": 7,
                    "ID": 169,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "css",
                    "name": "css"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2013/01/11/markup-html-tags-and-formatting/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2013-01-11T20:22:19-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "markup-html-tags-and-formatting",
        "categories": {
            "Markup": {
                "description": "Posts in this category test markup tags and styles.",
                "parent": 0,
                "post_count": 6,
                "ID": 4675,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "markup",
                "name": "Markup"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2013-01-11T20:22:19-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1178",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1178/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1178/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1178/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {
            "1025": {
                "description": "",
                "extension": "jpg",
                "title": "Image Alignment 300x200",
                "URL": "https://coveopushdemo.files.wordpress.com/2013/03/image-alignment-300x200.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/1025",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/1025/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1177",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 200,
                "post_ID": 1177,
                "alt": "Image Alignment 300x200",
                "width": 300,
                "caption": "",
                "file": "image-alignment-300x200.jpg",
                "exif": {
                    "shutter_speed": "0",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "0",
                    "camera": "",
                    "iso": "0",
                    "focal_length": "0",
                    "aperture": "0",
                    "orientation": "0"
                },
                "date": "2013-03-14T19:44:49-05:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2013/03/image-alignment-300x200.jpg",
                "ID": 1025,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2013/03/image-alignment-300x200.jpg?w=300",
                    "medium": "https://coveopushdemo.files.wordpress.com/2013/03/image-alignment-300x200.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2013/03/image-alignment-300x200.jpg?w=150"
                }
            },
            "967": {
                "description": "",
                "extension": "jpg",
                "title": "Image Alignment 580x300",
                "URL": "https://coveopushdemo.files.wordpress.com/2013/03/image-alignment-580x300.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/967",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/967/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1177",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 300,
                "post_ID": 1177,
                "alt": "Image Alignment 580x300",
                "width": 580,
                "caption": "",
                "file": "image-alignment-580x300.jpg",
                "exif": {
                    "shutter_speed": "0",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "0",
                    "camera": "",
                    "iso": "0",
                    "focal_length": "0",
                    "aperture": "0",
                    "orientation": "0"
                },
                "date": "2013-03-14T19:44:50-05:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2013/03/image-alignment-580x300.jpg",
                "ID": 967,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2013/03/image-alignment-580x300.jpg?w=580",
                    "medium": "https://coveopushdemo.files.wordpress.com/2013/03/image-alignment-580x300.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2013/03/image-alignment-580x300.jpg?w=150"
                }
            },
            "1029": {
                "description": "",
                "extension": "jpg",
                "title": "Image Alignment 1200x4002",
                "URL": "https://coveopushdemo.files.wordpress.com/2013/03/image-alignment-1200x4002.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/1029",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/1029/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1177",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 400,
                "post_ID": 1177,
                "alt": "Image Alignment 1200x4002",
                "width": 1200,
                "caption": "",
                "file": "image-alignment-1200x4002.jpg",
                "exif": {
                    "shutter_speed": "0",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "0",
                    "camera": "",
                    "iso": "0",
                    "focal_length": "0",
                    "aperture": "0",
                    "orientation": "0"
                },
                "date": "2013-03-14T19:44:50-05:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2013/03/image-alignment-1200x4002.jpg",
                "ID": 1029,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2013/03/image-alignment-1200x4002.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2013/03/image-alignment-1200x4002.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2013/03/image-alignment-1200x4002.jpg?w=150"
                }
            },
            "1023": {
                "description": "",
                "extension": "jpg",
                "title": "I Am Worth Loving Wallpaper",
                "URL": "https://coveopushdemo.files.wordpress.com/2013/03/soworthloving-wallpaper.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/1023",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/1023/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1177",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 1200,
                "post_ID": 1177,
                "alt": "I Am Worth Loving Wallpaper",
                "width": 1920,
                "caption": "",
                "file": "soworthloving-wallpaper.jpg",
                "exif": {
                    "shutter_speed": "0",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "0",
                    "camera": "",
                    "iso": "0",
                    "focal_length": "0",
                    "aperture": "0",
                    "orientation": "0"
                },
                "date": "2013-03-14T09:58:24-05:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2013/03/soworthloving-wallpaper.jpg",
                "ID": 1023,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2013/03/soworthloving-wallpaper.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2013/03/soworthloving-wallpaper.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2013/03/soworthloving-wallpaper.jpg?w=150"
                }
            }
        },
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 4,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=903",
        "title": "Markup: Image Alignment",
        "short_URL": "http://wp.me/p7VTrW-iZ",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "image": {
                "description": "",
                "post_count": 7,
                "ID": 686,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "image",
                "name": "image"
            },
            "content": {
                "description": "",
                "post_count": 12,
                "ID": 35181409,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "content-2",
                "name": "content"
            },
            "alignment": {
                "description": "",
                "post_count": 3,
                "ID": 38590737,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:alignment-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:alignment-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "alignment-2",
                "name": "alignment"
            },
            "captions": {
                "description": "",
                "post_count": 2,
                "ID": 36446125,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:captions-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:captions-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "captions-2",
                "name": "captions"
            },
            "markup": {
                "description": "",
                "post_count": 6,
                "ID": 38696790,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "markup-2",
                "name": "markup"
            },
            "css": {
                "description": "",
                "post_count": 7,
                "ID": 169,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "css",
                "name": "css"
            }
        },
        "global_ID": "392a64c564e5255203037da5b60c7196",
        "ID": 1177,
        "content": "Welcome to image alignment! The best way to demonstrate the ebb and flow of the various image positioning options is to nestle them snuggly among an ocean of words. Grab a paddle and let's get started.\n\nOn the topic of alignment, it should be noted that users can choose from the options of <em>None</em>, <em>Left</em>, <em>Right, </em>and <em>Center</em>. In addition, they also get the options of <em>Thumbnail</em>, <em>Medium</em>, <em>Large</em> &amp; <em>Fullsize</em>.\n<p style=\"text-align:center;\"><img class=\"size-full wp-image-906 aligncenter\" title=\"Image Alignment 580x300\" alt=\"Image Alignment 580x300\" src=\"http://wpthemetestdata.files.wordpress.com/2013/03/image-alignment-580x300.jpg\" width=\"580\" height=\"300\" /></p>\nThe image above happens to be <em><strong>centered</strong></em>.\n\n<strong><img class=\"size-full wp-image-904 alignleft\" title=\"Image Alignment 150x150\" alt=\"Image Alignment 150x150\" src=\"http://wpthemetestdata.files.wordpress.com/2013/03/image-alignment-150x150.jpg\" width=\"150\" height=\"150\" /></strong>The rest of this paragraph is filler for the sake of seeing the text wrap around the 150x150 image, which is <em><strong>left aligned</strong></em>. <strong></strong>\n\nAs you can see the should be some space above, below, and to the right of the image. The text should not be creeping on the image. Creeping is just not right. Images need breathing room too. Let them speak like you words. Let them do their jobs without any hassle from the text. In about one more sentence here, we'll see that the text moves from the right of the image down below the image in seamless transition. Again, letting the do it's thang. Mission accomplished!\n\nAnd now for a <em><strong>massively large image</strong></em>. It also has <em><strong>no alignment</strong></em>.\n\n<img class=\"alignnone  wp-image-907\" title=\"Image Alignment 1200x400\" alt=\"Image Alignment 1200x400\" src=\"http://wpthemetestdata.files.wordpress.com/2013/03/image-alignment-1200x4002.jpg\" width=\"1200\" height=\"400\" />\n\nThe image above, though 1200px wide, should not overflow the content area. It should remain contained with no visible disruption to the flow of content.\n\n<img class=\"size-full wp-image-905 alignright\" title=\"Image Alignment 300x200\" alt=\"Image Alignment 300x200\" src=\"http://wpthemetestdata.files.wordpress.com/2013/03/image-alignment-300x200.jpg\" width=\"300\" height=\"200\" />\n\nAnd now we're going to shift things to the <em><strong>right align</strong></em>. Again, there should be plenty of room above, below, and to the left of the image. Just look at him there... Hey guy! Way to rock that right side. I don't care what the left aligned image says, you look great. Don't let anyone else tell you differently.\n\nIn just a bit here, you should see the text start to wrap below the right aligned image and settle in nicely. There should still be plenty of room and everything should be sitting pretty. Yeah... Just like that. It never felt so good to be right.\n\nAnd just when you thought we were done, we're going to do them all over again with captions!\n\n[caption id=\"attachment_906\" align=\"aligncenter\" width=\"580\"]<img class=\"size-full wp-image-906  \" title=\"Image Alignment 580x300\" alt=\"Image Alignment 580x300\" src=\"http://wpthemetestdata.files.wordpress.com/2013/03/image-alignment-580x300.jpg\" width=\"580\" height=\"300\" /> Look at 580x300 getting some <a title=\"Image Settings\" href=\"http://en.support.wordpress.com/images/image-settings/\">caption</a> love.[/caption]\n\nThe image above happens to be <em><strong>centered</strong></em>. The caption also has a link in it, just to see if it does anything funky.\n\n[caption id=\"attachment_904\" align=\"alignleft\" width=\"150\"]<img class=\"size-full wp-image-904  \" title=\"Image Alignment 150x150\" alt=\"Image Alignment 150x150\" src=\"http://wpthemetestdata.files.wordpress.com/2013/03/image-alignment-150x150.jpg\" width=\"150\" height=\"150\" /> Itty-bitty caption.[/caption]\n\n<strong></strong>The rest of this paragraph is filler for the sake of seeing the text wrap around the 150x150 image, which is <em><strong>left aligned</strong></em>. <strong></strong>\n\nAs you can see the should be some space above, below, and to the right of the image. The text should not be creeping on the image. Creeping is just not right. Images need breathing room too. Let them speak like you words. Let them do their jobs without any hassle from the text. In about one more sentence here, we'll see that the text moves from the right of the image down below the image in seamless transition. Again, letting the do it's thang. Mission accomplished!\n\nAnd now for a <em><strong>massively large image</strong></em>. It also has <em><strong>no alignment</strong></em>.\n\n[caption id=\"attachment_907\" align=\"alignnone\" width=\"1200\"]<img class=\" wp-image-907\" title=\"Image Alignment 1200x400\" alt=\"Image Alignment 1200x400\" src=\"http://wpthemetestdata.files.wordpress.com/2013/03/image-alignment-1200x4002.jpg\" width=\"1200\" height=\"400\" /> Massive image comment for your eyeballs.[/caption]\n\nThe image above, though 1200px wide, should not overflow the content area. It should remain contained with no visible disruption to the flow of content.\n\n[caption id=\"attachment_905\" align=\"alignright\" width=\"300\"]<img class=\"size-full wp-image-905 \" title=\"Image Alignment 300x200\" alt=\"Image Alignment 300x200\" src=\"http://wpthemetestdata.files.wordpress.com/2013/03/image-alignment-300x200.jpg\" width=\"300\" height=\"200\" /> Feels good to be right all the time.[/caption]\n\nAnd now we're going to shift things to the <em><strong>right align</strong></em>. Again, there should be plenty of room above, below, and to the left of the image. Just look at him there... Hey guy! Way to rock that right side. I don't care what the left aligned image says, you look great. Don't let anyone else tell you differently.\n\nIn just a bit here, you should see the text start to wrap below the right aligned image and settle in nicely. There should still be plenty of room and everything should be sitting pretty. Yeah... Just like that. It never felt so good to be right.\n\nAnd that's a wrap, yo! You survived the tumultuous waters of alignment. Image alignment achievement unlocked!",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "903",
                "id": "1265",
                "key": "original_post_id"
            },
            {
                "value": "1177",
                "id": "1268",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1267",
                "key": "restapi_import_id"
            },
            {
                "value": "",
                "id": "1263",
                "key": "standard_link_url_field"
            },
            {
                "value": "",
                "id": "1262",
                "key": "standard_seo_post_level_layout"
            },
            {
                "value": "",
                "id": "1264",
                "key": "standard_seo_post_meta_description"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Markup": {
                    "description": "Posts in this category test markup tags and styles.",
                    "parent": 0,
                    "post_count": 6,
                    "ID": 4675,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "markup",
                    "name": "Markup"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "image": {
                    "description": "",
                    "post_count": 7,
                    "ID": 686,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "image",
                    "name": "image"
                },
                "content": {
                    "description": "",
                    "post_count": 12,
                    "ID": 35181409,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "content-2",
                    "name": "content"
                },
                "alignment": {
                    "description": "",
                    "post_count": 3,
                    "ID": 38590737,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:alignment-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:alignment-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "alignment-2",
                    "name": "alignment"
                },
                "captions": {
                    "description": "",
                    "post_count": 2,
                    "ID": 36446125,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:captions-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:captions-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "captions-2",
                    "name": "captions"
                },
                "markup": {
                    "description": "",
                    "post_count": 6,
                    "ID": 38696790,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "markup-2",
                    "name": "markup"
                },
                "css": {
                    "description": "",
                    "post_count": 7,
                    "ID": 169,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "css",
                    "name": "css"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2013/01/10/markup-image-alignment/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2013-01-10T20:15:40-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "markup-image-alignment",
        "categories": {
            "Markup": {
                "description": "Posts in this category test markup tags and styles.",
                "parent": 0,
                "post_count": 6,
                "ID": 4675,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "markup",
                "name": "Markup"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2013-01-10T20:15:40-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1177",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1177/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1177/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1177/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=895",
        "title": "Markup: Text Alignment",
        "short_URL": "http://wp.me/p7VTrW-iY",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "content": {
                "description": "",
                "post_count": 12,
                "ID": 35181409,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "content-2",
                "name": "content"
            },
            "markup": {
                "description": "",
                "post_count": 6,
                "ID": 38696790,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "markup-2",
                "name": "markup"
            },
            "css": {
                "description": "",
                "post_count": 7,
                "ID": 169,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "css",
                "name": "css"
            },
            "alignment": {
                "description": "",
                "post_count": 3,
                "ID": 38590737,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:alignment-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:alignment-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "alignment-2",
                "name": "alignment"
            }
        },
        "global_ID": "bd700b3ec196e5a00eff9216efa5dfac",
        "ID": 1176,
        "content": "<h3>Default</h3>\nThis is a paragraph. It should not have any alignment of any kind. It should just flow like you would normally expect. Nothing fancy. Just straight up text, free flowing, with love. Completely neutral and not picking a side or sitting on the fence. It just is. It just freaking is. It likes where it is. It does not feel compelled to pick a side. Leave him be. It will just be better that way. Trust me.\n<h3>Left Align</h3>\n<p style=\"text-align:left;\">This is a paragraph. It is left aligned. Because of this, it is a bit more liberal in it's views. It's favorite color is green. Left align tends to be more eco-friendly, but it provides no concrete evidence that it really is. Even though it likes share the wealth evenly, it leaves the equal distribution up to justified alignment.</p>\n\n<h3>Center Align</h3>\n<p style=\"text-align:center;\">This is a paragraph. It is center aligned. Center is, but nature, a fence sitter. A flip flopper. It has a difficult time making up its mind. It wants to pick a side. Really, it does. It has the best intentions, but it tends to complicate matters more than help. The best you can do is try to win it over and hope for the best. I hear center align does take bribes.</p>\n\n<h3>Right Align</h3>\n<p style=\"text-align:right;\">This is a paragraph. It is right aligned. It is a bit more conservative in it's views. It's prefers to not be told what to do or how to do it. Right align totally owns a slew of guns and loves to head to the range for some practice. Which is cool and all. I mean, it's a pretty good shot from at least four or five football fields away. Dead on. So boss.</p>\n\n<h3>Justify Align</h3>\n<p style=\"text-align:justify;\">This is a paragraph. It is justify aligned. It gets really mad when people associate it with Justin Timberlake. Typically, justified is pretty straight laced. It likes everything to be in it's place and not all cattywampus like the rest of the aligns. I am not saying that makes it better than the rest of the aligns, but it does tend to put off more of an elitist attitude.</p>",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "895",
                "id": "1253",
                "key": "original_post_id"
            },
            {
                "value": "1176",
                "id": "1256",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1255",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Markup": {
                    "description": "Posts in this category test markup tags and styles.",
                    "parent": 0,
                    "post_count": 6,
                    "ID": 4675,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "markup",
                    "name": "Markup"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "content": {
                    "description": "",
                    "post_count": 12,
                    "ID": 35181409,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "content-2",
                    "name": "content"
                },
                "markup": {
                    "description": "",
                    "post_count": 6,
                    "ID": 38696790,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "markup-2",
                    "name": "markup"
                },
                "css": {
                    "description": "",
                    "post_count": 7,
                    "ID": 169,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "css",
                    "name": "css"
                },
                "alignment": {
                    "description": "",
                    "post_count": 3,
                    "ID": 38590737,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:alignment-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:alignment-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "alignment-2",
                    "name": "alignment"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2013/01/09/markup-text-alignment/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2013-01-09T09:00:39-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "markup-text-alignment",
        "categories": {
            "Markup": {
                "description": "Posts in this category test markup tags and styles.",
                "parent": 0,
                "post_count": 6,
                "ID": 4675,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "markup",
                "name": "Markup"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2013-01-09T09:00:39-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1176",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1176/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1176/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1176/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=867",
        "title": "Markup: Title With Special Characters",
        "short_URL": "http://wp.me/p7VTrW-iW",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "markup": {
                "description": "",
                "post_count": 6,
                "ID": 38696790,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "markup-2",
                "name": "markup"
            },
            "html": {
                "description": "",
                "post_count": 5,
                "ID": 647,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "html",
                "name": "html"
            },
            "post": {
                "description": "",
                "post_count": 1,
                "ID": 1187,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post",
                "name": "post"
            },
            "title": {
                "description": "",
                "post_count": 5,
                "ID": 1653,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "title",
                "name": "title"
            }
        },
        "global_ID": "4df72769f98747c14dc446646e67258b",
        "ID": 1174,
        "content": "Putting special characters in the title should have no adverse effect on the layout or functionality.\n\nSpecial characters in the post title have been known to cause issues with JavaScript when it is minified, especially in the admin when editing the post itself (ie. issues with metaboxes, media upload, etc.).\n<h2>Latin Character Tests</h2>\nThis is a test to see if the fonts used in this theme support basic Latin characters.\n<table>\n<tbody>\n<tr>\n<td>!</td>\n<td>\"</td>\n<td>#</td>\n<td>$</td>\n<td>%</td>\n<td>&amp;</td>\n<td>'</td>\n<td>(</td>\n<td>)</td>\n<td>*</td>\n</tr>\n<tr>\n<td>+</td>\n<td>,</td>\n<td>-</td>\n<td>.</td>\n<td>/</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n</tr>\n<tr>\n<td>5</td>\n<td>6</td>\n<td>7</td>\n<td>8</td>\n<td>9</td>\n<td>:</td>\n<td>;</td>\n<td>&gt;</td>\n<td>=</td>\n<td>&lt;</td>\n</tr>\n<tr>\n<td>?</td>\n<td>@</td>\n<td>A</td>\n<td>B</td>\n<td>C</td>\n<td>D</td>\n<td>E</td>\n<td>F</td>\n<td>G</td>\n<td>H</td>\n</tr>\n<tr>\n<td>I</td>\n<td>J</td>\n<td>K</td>\n<td>L</td>\n<td>M</td>\n<td>N</td>\n<td>O</td>\n<td>P</td>\n<td>Q</td>\n<td>R</td>\n</tr>\n<tr>\n<td>S</td>\n<td>T</td>\n<td>U</td>\n<td>V</td>\n<td>W</td>\n<td>X</td>\n<td>Y</td>\n<td>Z</td>\n<td>[</td>\n<td></td>\n</tr>\n<tr>\n<td>]</td>\n<td>^</td>\n<td>_</td>\n<td>`</td>\n<td>a</td>\n<td>b</td>\n<td>c</td>\n<td>d</td>\n<td>e</td>\n<td>f</td>\n</tr>\n<tr>\n<td>g</td>\n<td>h</td>\n<td>i</td>\n<td>j</td>\n<td>k</td>\n<td>l</td>\n<td>m</td>\n<td>n</td>\n<td>o</td>\n<td>p</td>\n</tr>\n<tr>\n<td>q</td>\n<td>r</td>\n<td>s</td>\n<td>t</td>\n<td>u</td>\n<td>v</td>\n<td>w</td>\n<td>x</td>\n<td>y</td>\n<td>z</td>\n</tr>\n<tr>\n<td>{</td>\n<td>|</td>\n<td>}</td>\n<td>~</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "867",
                "id": "1233",
                "key": "original_post_id"
            },
            {
                "value": "1174",
                "id": "1236",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1235",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Markup": {
                    "description": "Posts in this category test markup tags and styles.",
                    "parent": 0,
                    "post_count": 6,
                    "ID": 4675,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "markup",
                    "name": "Markup"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "markup": {
                    "description": "",
                    "post_count": 6,
                    "ID": 38696790,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "markup-2",
                    "name": "markup"
                },
                "html": {
                    "description": "",
                    "post_count": 5,
                    "ID": 647,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "html",
                    "name": "html"
                },
                "post": {
                    "description": "",
                    "post_count": 1,
                    "ID": 1187,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post",
                    "name": "post"
                },
                "title": {
                    "description": "",
                    "post_count": 5,
                    "ID": 1653,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "title",
                    "name": "title"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2013/01/05/title-with-special-characters/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2013-01-05T11:00:20-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "title-with-special-characters",
        "categories": {
            "Markup": {
                "description": "Posts in this category test markup tags and styles.",
                "parent": 0,
                "post_count": 6,
                "ID": 4675,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "markup",
                "name": "Markup"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2013-01-05T11:00:20-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1174",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1174/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1174/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1174/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=861",
        "title": "Markup: Title With Markup",
        "short_URL": "http://wp.me/p7VTrW-iV",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "html": {
                "description": "",
                "post_count": 5,
                "ID": 647,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "html",
                "name": "html"
            },
            "css": {
                "description": "",
                "post_count": 7,
                "ID": 169,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "css",
                "name": "css"
            },
            "title": {
                "description": "",
                "post_count": 5,
                "ID": 1653,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "title",
                "name": "title"
            }
        },
        "global_ID": "cfd60934cbfd79150e682d360dd83517",
        "ID": 1173,
        "content": "Verify that:\n<ul>\n\t<li><span style=\"line-height:1.714285714;font-size:1rem;\">The post title renders the word \"with\" in </span><em style=\"line-height:1.714285714;font-size:1rem;\">italics</em><span style=\"line-height:1.714285714;font-size:1rem;\"> and the word \"markup\" in </span><strong style=\"line-height:1.714285714;font-size:1rem;\">bold</strong><span style=\"line-height:1.714285714;font-size:1rem;\">.</span></li>\n\t<li><span style=\"line-height:1.714285714;font-size:1rem;\">The post title markup should be removed from the browser window / tab.</span></li>\n</ul>",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "861",
                "id": "1224",
                "key": "original_post_id"
            },
            {
                "value": "1173",
                "id": "1228",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1227",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Markup": {
                    "description": "Posts in this category test markup tags and styles.",
                    "parent": 0,
                    "post_count": 6,
                    "ID": 4675,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "markup",
                    "name": "Markup"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "html": {
                    "description": "",
                    "post_count": 5,
                    "ID": 647,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "html",
                    "name": "html"
                },
                "css": {
                    "description": "",
                    "post_count": 7,
                    "ID": 169,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "css",
                    "name": "css"
                },
                "title": {
                    "description": "",
                    "post_count": 5,
                    "ID": 1653,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "title",
                    "name": "title"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2013/01/05/markup-title-with-markup/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2013-01-05T10:00:49-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "markup-title-with-markup",
        "categories": {
            "Markup": {
                "description": "Posts in this category test markup tags and styles.",
                "parent": 0,
                "post_count": 6,
                "ID": 4675,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "markup",
                "name": "Markup"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2013-01-05T10:00:49-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1173",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1173/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1173/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1173/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {
            "1027": {
                "description": "",
                "extension": "jpg",
                "title": "Vertical Featured Image",
                "URL": "https://coveopushdemo.files.wordpress.com/2013/03/featured-image-vertical.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/1027",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/1027/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1016",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 580,
                "post_ID": 1016,
                "alt": "Horizontal Featured Image",
                "width": 300,
                "caption": "",
                "file": "featured-image-vertical.jpg",
                "exif": {
                    "shutter_speed": "0",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "0",
                    "camera": "",
                    "iso": "0",
                    "focal_length": "0",
                    "aperture": "0",
                    "orientation": "0"
                },
                "date": "2013-03-15T15:41:09-05:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2013/03/featured-image-vertical.jpg",
                "ID": 1027,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2013/03/featured-image-vertical.jpg?w=300",
                    "medium": "https://coveopushdemo.files.wordpress.com/2013/03/featured-image-vertical.jpg?w=155",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2013/03/featured-image-vertical.jpg?w=78"
                }
            }
        },
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 1,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=1016",
        "title": "Template: Featured Image (Vertical)",
        "short_URL": "http://wp.me/p7VTrW-go",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "Codex": {
                "description": "",
                "post_count": 3,
                "ID": 12525,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:codex",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:codex/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "codex",
                "name": "Codex"
            },
            "edge case": {
                "description": "",
                "post_count": 8,
                "ID": 16894899,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "edge-case",
                "name": "edge case"
            },
            "image": {
                "description": "",
                "post_count": 7,
                "ID": 686,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "image",
                "name": "image"
            },
            "featured image": {
                "description": "",
                "post_count": 3,
                "ID": 8923091,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:featured-image",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:featured-image/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "featured-image",
                "name": "featured image"
            },
            "template": {
                "description": "",
                "post_count": 12,
                "ID": 11867,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template",
                "name": "template"
            }
        },
        "global_ID": "dc4511349f2ab5369b1838a44231bb2e",
        "ID": 1016,
        "content": "This post should display a <a title=\"Featured Images\" href=\"http://en.support.wordpress.com/featured-images/#setting-a-featured-image\" target=\"_blank\">featured image</a>, if the theme <a title=\"Post Thumbnails\" href=\"http://codex.wordpress.org/Post_Thumbnails\" target=\"_blank\">supports it</a>.\n\nNon-square images can provide some unique styling issues.\n\nThis post tests a vertical featured image.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "1016",
                "id": "1043",
                "key": "original_post_id"
            },
            {
                "value": "1016",
                "id": "1046",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1045",
                "key": "restapi_import_id"
            },
            {
                "value": "",
                "id": "1041",
                "key": "standard_link_url_field"
            },
            {
                "value": "",
                "id": "1040",
                "key": "standard_seo_post_level_layout"
            },
            {
                "value": "",
                "id": "1042",
                "key": "standard_seo_post_meta_description"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Template": {
                    "description": "Posts with template-related tests",
                    "parent": 0,
                    "post_count": 10,
                    "ID": 33328006,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template-2",
                    "name": "Template"
                },
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "Codex": {
                    "description": "",
                    "post_count": 3,
                    "ID": 12525,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:codex",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:codex/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "codex",
                    "name": "Codex"
                },
                "edge case": {
                    "description": "",
                    "post_count": 8,
                    "ID": 16894899,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "edge-case",
                    "name": "edge case"
                },
                "image": {
                    "description": "",
                    "post_count": 7,
                    "ID": 686,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "image",
                    "name": "image"
                },
                "featured image": {
                    "description": "",
                    "post_count": 3,
                    "ID": 8923091,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:featured-image",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:featured-image/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "featured-image",
                    "name": "featured image"
                },
                "template": {
                    "description": "",
                    "post_count": 12,
                    "ID": 11867,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template",
                    "name": "template"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2012/03/15/template-featured-image-vertical/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2012-03-15T15:36:32-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "template-featured-image-vertical",
        "categories": {
            "Template": {
                "description": "Posts with template-related tests",
                "parent": 0,
                "post_count": 10,
                "ID": 33328006,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template-2",
                "name": "Template"
            },
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2012-03-15T15:36:32-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1016",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1016/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1016/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1016/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {
            "1022": {
                "description": "",
                "extension": "jpg",
                "title": "Horizontal Featured Image",
                "URL": "https://coveopushdemo.files.wordpress.com/2013/03/featured-image-horizontal.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/1022",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/1022/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1011",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 300,
                "post_ID": 1011,
                "alt": "Horizontal Featured Image",
                "width": 580,
                "caption": "",
                "file": "featured-image-horizontal.jpg",
                "exif": {
                    "shutter_speed": "0",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "0",
                    "camera": "",
                    "iso": "0",
                    "focal_length": "0",
                    "aperture": "0",
                    "orientation": "0"
                },
                "date": "2013-03-15T15:40:38-05:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2013/03/featured-image-horizontal.jpg",
                "ID": 1022,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2013/03/featured-image-horizontal.jpg?w=580",
                    "medium": "https://coveopushdemo.files.wordpress.com/2013/03/featured-image-horizontal.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2013/03/featured-image-horizontal.jpg?w=150"
                }
            }
        },
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 1,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=1011",
        "title": "Template: Featured Image (Horizontal)",
        "short_URL": "http://wp.me/p7VTrW-gj",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "Codex": {
                "description": "",
                "post_count": 3,
                "ID": 12525,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:codex",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:codex/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "codex",
                "name": "Codex"
            },
            "edge case": {
                "description": "",
                "post_count": 8,
                "ID": 16894899,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "edge-case",
                "name": "edge case"
            },
            "image": {
                "description": "",
                "post_count": 7,
                "ID": 686,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "image",
                "name": "image"
            },
            "featured image": {
                "description": "",
                "post_count": 3,
                "ID": 8923091,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:featured-image",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:featured-image/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "featured-image",
                "name": "featured image"
            },
            "template": {
                "description": "",
                "post_count": 12,
                "ID": 11867,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template",
                "name": "template"
            }
        },
        "global_ID": "7912b7262349b12d7e1e8b2de4b8f8fe",
        "ID": 1011,
        "content": "This post should display a <a title=\"Featured Images\" href=\"http://en.support.wordpress.com/featured-images/#setting-a-featured-image\" target=\"_blank\">featured image</a>, if the theme <a title=\"Post Thumbnails\" href=\"http://codex.wordpress.org/Post_Thumbnails\" target=\"_blank\">supports it</a>.\n\nNon-square images can provide some unique styling issues.\n\nThis post tests a horizontal featured image.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "1011",
                "id": "1030",
                "key": "original_post_id"
            },
            {
                "value": "1011",
                "id": "1033",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1032",
                "key": "restapi_import_id"
            },
            {
                "value": "",
                "id": "1028",
                "key": "standard_link_url_field"
            },
            {
                "value": "",
                "id": "1027",
                "key": "standard_seo_post_level_layout"
            },
            {
                "value": "",
                "id": "1029",
                "key": "standard_seo_post_meta_description"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Template": {
                    "description": "Posts with template-related tests",
                    "parent": 0,
                    "post_count": 10,
                    "ID": 33328006,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template-2",
                    "name": "Template"
                },
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "Codex": {
                    "description": "",
                    "post_count": 3,
                    "ID": 12525,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:codex",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:codex/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "codex",
                    "name": "Codex"
                },
                "edge case": {
                    "description": "",
                    "post_count": 8,
                    "ID": 16894899,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "edge-case",
                    "name": "edge case"
                },
                "image": {
                    "description": "",
                    "post_count": 7,
                    "ID": 686,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "image",
                    "name": "image"
                },
                "featured image": {
                    "description": "",
                    "post_count": 3,
                    "ID": 8923091,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:featured-image",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:featured-image/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "featured-image",
                    "name": "featured image"
                },
                "template": {
                    "description": "",
                    "post_count": 12,
                    "ID": 11867,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template",
                    "name": "template"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2012/03/15/template-featured-image-horizontal/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2012-03-15T15:15:12-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "template-featured-image-horizontal",
        "categories": {
            "Template": {
                "description": "Posts with template-related tests",
                "parent": 0,
                "post_count": 10,
                "ID": 33328006,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template-2",
                "name": "Template"
            },
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2012-03-15T15:15:12-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1011",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1011/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1011/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1011/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=996",
        "title": "Template: More Tag",
        "short_URL": "http://wp.me/p7VTrW-g4",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "content": {
                "description": "",
                "post_count": 12,
                "ID": 35181409,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "content-2",
                "name": "content"
            },
            "template": {
                "description": "",
                "post_count": 12,
                "ID": 11867,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template",
                "name": "template"
            },
            "read more": {
                "description": "",
                "post_count": 1,
                "ID": 40586,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:read-more",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:read-more/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "read-more",
                "name": "read more"
            }
        },
        "global_ID": "99a99a6f9567f676a58cb9ce77f31b06",
        "ID": 996,
        "content": "This content is before the <a title=\"The More Tag\" href=\"http://en.support.wordpress.com/splitting-content/more-tag/\" target=\"_blank\">more tag</a>.\n\nRight after this sentence should be a \"continue reading\" button of some sort.\n\n<!--more-->\n\nAnd this content is after the more tag.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "996",
                "id": "994",
                "key": "original_post_id"
            },
            {
                "value": "996",
                "id": "997",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "996",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Template": {
                    "description": "Posts with template-related tests",
                    "parent": 0,
                    "post_count": 10,
                    "ID": 33328006,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template-2",
                    "name": "Template"
                },
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "content": {
                    "description": "",
                    "post_count": 12,
                    "ID": 35181409,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "content-2",
                    "name": "content"
                },
                "template": {
                    "description": "",
                    "post_count": 12,
                    "ID": 11867,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template",
                    "name": "template"
                },
                "read more": {
                    "description": "",
                    "post_count": 1,
                    "ID": 40586,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:read-more",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:read-more/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "read-more",
                    "name": "read more"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2012/03/15/template-more-tag/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2012-03-15T14:41:11-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "template-more-tag",
        "categories": {
            "Template": {
                "description": "Posts with template-related tests",
                "parent": 0,
                "post_count": 10,
                "ID": 33328006,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template-2",
                "name": "Template"
            },
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2012-03-15T14:41:11-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/996",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/996/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/996/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/996/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "This is a user-defined post excerpt. It should be displayed in place of the post content in archive-index pages.",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=993",
        "revisions": [
            1740
        ],
        "title": "Template: Excerpt (Defined)",
        "short_URL": "http://wp.me/p7VTrW-g1",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "content": {
                "description": "",
                "post_count": 12,
                "ID": 35181409,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "content-2",
                "name": "content"
            },
            "excerpt": {
                "description": "",
                "post_count": 3,
                "ID": 31262653,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:excerpt-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:excerpt-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "excerpt-2",
                "name": "excerpt"
            },
            "template": {
                "description": "",
                "post_count": 12,
                "ID": 11867,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template",
                "name": "template"
            }
        },
        "global_ID": "afc7db1c6b7b4df8c6d0d033090cb08a",
        "ID": 993,
        "content": "This is the post content. It should be displayed in place of the user-defined excerpt in single-page views.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "1477075789",
                "id": "2453",
                "key": "jabber_published"
            },
            {
                "value": "993",
                "id": "985",
                "key": "original_post_id"
            },
            {
                "value": "993",
                "id": "988",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "987",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Template": {
                    "description": "Posts with template-related tests",
                    "parent": 0,
                    "post_count": 10,
                    "ID": 33328006,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template-2",
                    "name": "Template"
                },
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "content": {
                    "description": "",
                    "post_count": 12,
                    "ID": 35181409,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "content-2",
                    "name": "content"
                },
                "excerpt": {
                    "description": "",
                    "post_count": 3,
                    "ID": 31262653,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:excerpt-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:excerpt-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "excerpt-2",
                    "name": "excerpt"
                },
                "template": {
                    "description": "",
                    "post_count": 12,
                    "ID": 11867,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template",
                    "name": "template"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2012/03/15/template-excerpt-defined/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2012-03-15T14:38:08-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "template-excerpt-defined",
        "categories": {
            "Template": {
                "description": "Posts with template-related tests",
                "parent": 0,
                "post_count": 10,
                "ID": 33328006,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template-2",
                "name": "Template"
            },
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:49:49+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/993",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/993/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/993/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/993/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/?p=1446",
        "revisions": [
            1739
        ],
        "title": "Template: Excerpt (Generated)",
        "short_URL": "http://wp.me/p7VTrW-nk",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "content": {
                "description": "",
                "post_count": 12,
                "ID": 35181409,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "content-2",
                "name": "content"
            },
            "excerpt": {
                "description": "",
                "post_count": 3,
                "ID": 31262653,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:excerpt-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:excerpt-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "excerpt-2",
                "name": "excerpt"
            },
            "template": {
                "description": "",
                "post_count": 12,
                "ID": 11867,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template",
                "name": "template"
            }
        },
        "global_ID": "dc7037667118b36747671025b5817699",
        "ID": 1446,
        "content": "This is the post content. It should be displayed in place of the auto-generated excerpt in single-page views. Archive-index pages should display an auto-generated excerpt of this content. Depending on Theme-defined filters, the length of the auto-generated excerpt will vary from Theme-to-Theme. The default length for auto-generated excerpts is 55 words, so to test the excerpt auto-generation, this post must have more than 55 words.\n\nBe sure to test the formatting of the auto-generated excerpt, to ensure that it doesn't create any layout problems. Also, ensure that any filters applied to the excerpt, such as &lt;code&gt;excerpt_length&lt;/code&gt; and &lt;code&gt;excerpt_more&lt;/code&gt;, display properly.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "1477075787",
                "id": "2442",
                "key": "jabber_published"
            },
            {
                "value": "1446",
                "id": "1310",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1309",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Template": {
                    "description": "Posts with template-related tests",
                    "parent": 0,
                    "post_count": 10,
                    "ID": 33328006,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template-2",
                    "name": "Template"
                },
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "content": {
                    "description": "",
                    "post_count": 12,
                    "ID": 35181409,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "content-2",
                    "name": "content"
                },
                "excerpt": {
                    "description": "",
                    "post_count": 3,
                    "ID": 31262653,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:excerpt-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:excerpt-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "excerpt-2",
                    "name": "excerpt"
                },
                "template": {
                    "description": "",
                    "post_count": 12,
                    "ID": 11867,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template",
                    "name": "template"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2012/03/14/template-excerpt-generated/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2012-03-14T09:49:22-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "template-excerpt-generated",
        "categories": {
            "Template": {
                "description": "Posts with template-related tests",
                "parent": 0,
                "post_count": 10,
                "ID": 33328006,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template-2",
                "name": "Template"
            },
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:49:47+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1446",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1446/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1446/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1446/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://noeltest.wordpress.com/?p=188",
        "revisions": [
            1741
        ],
        "title": "Template: Paginated",
        "short_URL": "http://wp.me/p7VTrW-iT",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "content": {
                "description": "",
                "post_count": 12,
                "ID": 35181409,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "content-2",
                "name": "content"
            },
            "pagination": {
                "description": "",
                "post_count": 1,
                "ID": 697683,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:pagination",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:pagination/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "pagination",
                "name": "pagination"
            },
            "template": {
                "description": "",
                "post_count": 12,
                "ID": 11867,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template",
                "name": "template"
            }
        },
        "global_ID": "b07308585a0ff033a690a410aa615a22",
        "ID": 1171,
        "content": "Post Page 1\n\n<!--nextpage-->\n\nPost Page 2\n\n<!--nextpage-->\n\nPost Page 3",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "1477075786",
                "id": "2435",
                "key": "jabber_published"
            },
            {
                "value": "188",
                "id": "1215",
                "key": "original_post_id"
            },
            {
                "value": "1171",
                "id": "1219",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1218",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Template": {
                    "description": "Posts with template-related tests",
                    "parent": 0,
                    "post_count": 10,
                    "ID": 33328006,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template-2",
                    "name": "Template"
                },
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "content": {
                    "description": "",
                    "post_count": 12,
                    "ID": 35181409,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "content-2",
                    "name": "content"
                },
                "pagination": {
                    "description": "",
                    "post_count": 1,
                    "ID": 697683,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:pagination",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:pagination/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "pagination",
                    "name": "pagination"
                },
                "template": {
                    "description": "",
                    "post_count": 12,
                    "ID": 11867,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template",
                    "name": "template"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2012/01/08/template-paginated/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2012-01-08T10:00:20-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "template-paginated",
        "categories": {
            "Template": {
                "description": "Posts with template-related tests",
                "parent": 0,
                "post_count": 10,
                "ID": 33328006,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template-2",
                "name": "Template"
            },
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:49:46+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1171",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1171/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1171/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1171/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=1241",
        "revisions": [
            1742
        ],
        "title": "Template: Sticky",
        "short_URL": "http://wp.me/p7VTrW-k1",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "template": {
                "description": "",
                "post_count": 12,
                "ID": 11867,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template",
                "name": "template"
            },
            "sticky": {
                "description": "",
                "post_count": 1,
                "ID": 45997922,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:sticky-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:sticky-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "sticky-2",
                "name": "sticky"
            }
        },
        "global_ID": "8c20a942ac43a0b7fd39aadcae7e14f6",
        "ID": 1241,
        "content": "This is a sticky post.\n\nThere are a few things to verify:\n<ul>\n\t<li>The sticky post should be distinctly recognizable in some way in comparison to normal posts. You can style the <code>.sticky</code> class if you are using the <a title=\"WordPress Codex post_class() Function\" href=\"http://codex.wordpress.org/Function_Reference/post_class\" target=\"_blank\">post_class()</a> function to generate your post classes, which is a best practice.</li>\n\t<li>They should show at the very top of the blog index page, even though they could be several posts back chronologically.</li>\n\t<li>They should still show up again in their chronologically correct postion in time, but without the sticky indicator.</li>\n\t<li>If you have a plugin or widget that lists popular posts or comments, make sure that this sticky post is not always at the top of those lists unless it really is popular.</li>\n</ul>",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "1477075784",
                "id": "2426",
                "key": "jabber_published"
            },
            {
                "value": "1241",
                "id": "1300",
                "key": "original_post_id"
            },
            {
                "value": "1241",
                "id": "1304",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1303",
                "key": "restapi_import_id"
            },
            {
                "value": "",
                "id": "1298",
                "key": "standard_link_url_field"
            },
            {
                "value": "",
                "id": "1297",
                "key": "standard_seo_post_level_layout"
            },
            {
                "value": "",
                "id": "1299",
                "key": "standard_seo_post_meta_description"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "template": {
                    "description": "",
                    "post_count": 12,
                    "ID": 11867,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template",
                    "name": "template"
                },
                "sticky": {
                    "description": "",
                    "post_count": 1,
                    "ID": 45997922,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:sticky-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:sticky-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "sticky-2",
                    "name": "sticky"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2012/01/07/template-sticky/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2012-01-07T07:07:21-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "template-sticky",
        "categories": {
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:49:44+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1241",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1241/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1241/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1241/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/2007/09/04/test-with-secret-password/",
        "revisions": [
            1743
        ],
        "title": "Template: Password Protected (the password is \"enter\")",
        "short_URL": "http://wp.me/p7VTrW-iQ",
        "discussion": {
            "pings_open": false,
            "comment_count": 1,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "password": {
                "description": "",
                "post_count": 1,
                "ID": 39214087,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:password-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:password-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "password-2",
                "name": "password"
            },
            "template": {
                "description": "",
                "post_count": 12,
                "ID": 11867,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template",
                "name": "template"
            }
        },
        "global_ID": "6d90ef48d2238fcbb170381887d2e004",
        "ID": 1168,
        "content": "This content, comments, pingbacks, and trackbacks should not be visible until the password is entered.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "131",
                "id": "1186",
                "key": "original_post_id"
            },
            {
                "value": "1168",
                "id": "1189",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1188",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Template": {
                    "description": "Posts with template-related tests",
                    "parent": 0,
                    "post_count": 10,
                    "ID": 33328006,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template-2",
                    "name": "Template"
                },
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "password": {
                    "description": "",
                    "post_count": 1,
                    "ID": 39214087,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:password-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:password-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "password-2",
                    "name": "password"
                },
                "template": {
                    "description": "",
                    "post_count": 12,
                    "ID": 11867,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template",
                    "name": "template"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2012/01/04/template-password-protected/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2012-01-04T09:38:05-07:00",
        "sharing_enabled": true,
        "password": "enter",
        "geo": false,
        "slug": "template-password-protected",
        "categories": {
            "Template": {
                "description": "Posts with template-related tests",
                "parent": 0,
                "post_count": 10,
                "ID": 33328006,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template-2",
                "name": "Template"
            },
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:49:43+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1168",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1168/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1168/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1168/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/2007/09/04/comment-test/",
        "revisions": [
            1744
        ],
        "title": "Template: Comments",
        "short_URL": "http://wp.me/p7VTrW-iw",
        "discussion": {
            "pings_open": false,
            "comment_count": 19,
            "comments_open": true,
            "ping_status": "closed",
            "comment_status": "open"
        },
        "tags": {
            "template": {
                "description": "",
                "post_count": 12,
                "ID": 11867,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template",
                "name": "template"
            },
            "comments": {
                "description": "",
                "post_count": 4,
                "ID": 1861347,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "comments-2",
                "name": "comments"
            }
        },
        "global_ID": "9751a53d5c7b4e79059cd6dbf8b68571",
        "ID": 1148,
        "content": "This post tests comments in the following ways.\n<ul>\n\t<li>Threaded comments up to 10 levels deep</li>\n\t<li>Paginated comments (set <em><strong>Settings &gt; Discussion &gt; Break comments into pages</strong></em> to <em><strong>5</strong></em> top level comments per page)</li>\n\t<li>Comment markup / formatting</li>\n\t<li>Comment images</li>\n\t<li>Comment videos</li>\n\t<li>Author comments</li>\n\t<li>Gravatars and default fallbacks</li>\n</ul>",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "1477075782",
                "id": "2409",
                "key": "jabber_published"
            },
            {
                "value": "149",
                "id": "1084",
                "key": "original_post_id"
            },
            {
                "value": "1148",
                "id": "1088",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1087",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Template": {
                    "description": "Posts with template-related tests",
                    "parent": 0,
                    "post_count": 10,
                    "ID": 33328006,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template-2",
                    "name": "Template"
                },
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "template": {
                    "description": "",
                    "post_count": 12,
                    "ID": 11867,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template",
                    "name": "template"
                },
                "comments": {
                    "description": "",
                    "post_count": 4,
                    "ID": 1861347,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "comments-2",
                    "name": "comments"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2012/01/03/template-comments/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2012-01-03T10:11:37-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "template-comments",
        "categories": {
            "Template": {
                "description": "Posts with template-related tests",
                "parent": 0,
                "post_count": 10,
                "ID": 33328006,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template-2",
                "name": "Template"
            },
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:49:42+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1148",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1148/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1148/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1148/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/2007/09/04/no-comments/",
        "revisions": [
            1745
        ],
        "title": "Template: Comments Disabled",
        "short_URL": "http://wp.me/p7VTrW-iy",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "template": {
                "description": "",
                "post_count": 12,
                "ID": 11867,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template",
                "name": "template"
            },
            "comments": {
                "description": "",
                "post_count": 4,
                "ID": 1861347,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "comments-2",
                "name": "comments"
            }
        },
        "global_ID": "a58b801d22eebe3ae1a932aa5d49c61c",
        "ID": 1150,
        "content": "This post has its comments, pingbacks, and trackbacks disabled.\n\nThere should be no comment reply form, but <em>should</em> display pingbacks and trackbacks.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "1477075781",
                "id": "2400",
                "key": "jabber_published"
            },
            {
                "value": "152",
                "id": "1104",
                "key": "original_post_id"
            },
            {
                "value": "1150",
                "id": "1108",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1107",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Template": {
                    "description": "Posts with template-related tests",
                    "parent": 0,
                    "post_count": 10,
                    "ID": 33328006,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template-2",
                    "name": "Template"
                },
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "template": {
                    "description": "",
                    "post_count": 12,
                    "ID": 11867,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template",
                    "name": "template"
                },
                "comments": {
                    "description": "",
                    "post_count": 4,
                    "ID": 1861347,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "comments-2",
                    "name": "comments"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2012/01/02/template-comments-disabled/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2012-01-02T10:21:15-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "template-comments-disabled",
        "categories": {
            "Template": {
                "description": "Posts with template-related tests",
                "parent": 0,
                "post_count": 10,
                "ID": 33328006,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template-2",
                "name": "Template"
            },
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:49:41+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1150",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1150/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1150/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1150/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/2007/09/04/many-trackbacks/",
        "revisions": [
            1746
        ],
        "title": "Template: Pingbacks And Trackbacks",
        "short_URL": "http://wp.me/p7VTrW-ix",
        "discussion": {
            "pings_open": false,
            "comment_count": 5,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "pingbacks": {
                "description": "",
                "post_count": 1,
                "ID": 161099149,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:pingbacks-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:pingbacks-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "pingbacks-2",
                "name": "pingbacks"
            },
            "template": {
                "description": "",
                "post_count": 12,
                "ID": 11867,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template",
                "name": "template"
            },
            "comments": {
                "description": "",
                "post_count": 4,
                "ID": 1861347,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "comments-2",
                "name": "comments"
            },
            "trackbacks": {
                "description": "",
                "post_count": 1,
                "ID": 64903049,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:trackbacks-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:trackbacks-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "trackbacks-2",
                "name": "trackbacks"
            }
        },
        "global_ID": "6bdc483c1913b2c702cb342811aa839d",
        "ID": 1149,
        "content": "This post has many pingpacks and trackbacks.\n\nThere are a few ways to list them.\n<ol>\n\t<li>Above the comments</li>\n\t<li>Below the comments</li>\n\t<li>Included within the normal flow of comments</li>\n</ol>",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "1477075779",
                "id": "2391",
                "key": "jabber_published"
            },
            {
                "value": "151",
                "id": "1095",
                "key": "original_post_id"
            },
            {
                "value": "1149",
                "id": "1098",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1097",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Template": {
                    "description": "Posts with template-related tests",
                    "parent": 0,
                    "post_count": 10,
                    "ID": 33328006,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template-2",
                    "name": "Template"
                },
                "Uncategorized": {
                    "description": "",
                    "parent": 0,
                    "post_count": 49,
                    "ID": 1,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "uncategorized",
                    "name": "Uncategorized"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "pingbacks": {
                    "description": "",
                    "post_count": 1,
                    "ID": 161099149,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:pingbacks-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:pingbacks-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "pingbacks-2",
                    "name": "pingbacks"
                },
                "template": {
                    "description": "",
                    "post_count": 12,
                    "ID": 11867,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template",
                    "name": "template"
                },
                "comments": {
                    "description": "",
                    "post_count": 4,
                    "ID": 1861347,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "comments-2",
                    "name": "comments"
                },
                "trackbacks": {
                    "description": "",
                    "post_count": 1,
                    "ID": 64903049,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:trackbacks-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:trackbacks-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "trackbacks-2",
                    "name": "trackbacks"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2012/01/01/template-pingbacks-an-trackbacks/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2012-01-01T10:17:18-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "template-pingbacks-an-trackbacks",
        "categories": {
            "Template": {
                "description": "Posts with template-related tests",
                "parent": 0,
                "post_count": 10,
                "ID": 33328006,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:template-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template-2",
                "name": "Template"
            },
            "Uncategorized": {
                "description": "",
                "parent": 0,
                "post_count": 49,
                "ID": 1,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:uncategorized/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "uncategorized",
                "name": "Uncategorized"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:49:39+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1149",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1149/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1149/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1149/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=1027",
        "revisions": [
            1747
        ],
        "title": "Media: Twitter Embeds",
        "short_URL": "http://wp.me/p7VTrW-j1",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "content": {
                "description": "",
                "post_count": 12,
                "ID": 35181409,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "content-2",
                "name": "content"
            },
            "embeds": {
                "description": "",
                "post_count": 4,
                "ID": 161043722,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "embeds-2",
                "name": "embeds"
            },
            "twitter": {
                "description": "",
                "post_count": 2,
                "ID": 11320090,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:twitter-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:twitter-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "twitter-2",
                "name": "twitter"
            },
            "media": {
                "description": "",
                "post_count": 1,
                "ID": 292,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:media",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:media/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "media",
                "name": "media"
            }
        },
        "global_ID": "89eba0e11b8732bfe45e779965535c4f",
        "ID": 1179,
        "content": "https://twitter.com/nacin/status/319508408669708289\n\nThis post tests WordPress' <a title=\"Twitter Embeds\" href=\"http://en.support.wordpress.com/twitter/twitter-embeds/\" target=\"_blank\">Twitter Embeds</a> feature.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "1477075778",
                "id": "2382",
                "key": "jabber_published"
            },
            {
                "value": "1027",
                "id": "1289",
                "key": "original_post_id"
            },
            {
                "value": "1179",
                "id": "1292",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1291",
                "key": "restapi_import_id"
            },
            {
                "value": "",
                "id": "1286",
                "key": "standard_link_url_field"
            },
            {
                "value": "",
                "id": "1285",
                "key": "standard_seo_post_level_layout"
            },
            {
                "value": "",
                "id": "1287",
                "key": "standard_seo_post_meta_description"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Media": {
                    "description": "Posts that have media-related tests",
                    "parent": 0,
                    "post_count": 2,
                    "ID": 329026,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:media-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:media-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "media-2",
                    "name": "Media"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "content": {
                    "description": "",
                    "post_count": 12,
                    "ID": 35181409,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "content-2",
                    "name": "content"
                },
                "embeds": {
                    "description": "",
                    "post_count": 4,
                    "ID": 161043722,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "embeds-2",
                    "name": "embeds"
                },
                "twitter": {
                    "description": "",
                    "post_count": 2,
                    "ID": 11320090,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:twitter-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:twitter-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "twitter-2",
                    "name": "twitter"
                },
                "media": {
                    "description": "",
                    "post_count": 1,
                    "ID": 292,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:media",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:media/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "media",
                    "name": "media"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2011/03/15/media-twitter-embeds/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2011-03-15T15:47:16-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "media-twitter-embeds",
        "categories": {
            "Media": {
                "description": "Posts that have media-related tests",
                "parent": 0,
                "post_count": 2,
                "ID": 329026,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:media-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:media-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "media-2",
                "name": "Media"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:49:38+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1179",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1179/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1179/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1179/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/?p=358",
        "revisions": [
            1748
        ],
        "title": "Post Format: Standard",
        "short_URL": "http://wp.me/p7VTrW-5M",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            },
            "readability": {
                "description": "",
                "post_count": 1,
                "ID": 71229,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:readability",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:readability/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "readability",
                "name": "readability"
            },
            "standard": {
                "description": "",
                "post_count": 2,
                "ID": 472597,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:standard-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:standard-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "standard-2",
                "name": "standard"
            }
        },
        "global_ID": "84b0898491f47925c26e3838268e242e",
        "ID": 358,
        "content": "All children, except one, grow up. They soon know that they will grow up, and the way Wendy knew was this. One day when she was two years old she was playing in a garden, and she plucked another flower and ran with it to her mother. I suppose she must have looked rather delightful, for Mrs. Darling put her hand to her heart and cried, \"Oh, why can't you remain like this for ever!\" This was all that passed between them on the subject, but henceforth Wendy knew that she must grow up. You always know after you are two. Two is the beginning of the end.\n\n<!--more-->\n\nMrs. Darling first heard of Peter when she was tidying up her children's minds. It is the nightly custom of every good mother after her children are asleep to rummage in their minds and put things straight for next morning, repacking into their proper places the many articles that have wandered during the day.\n\nIf you could keep awake (but of course you can't) you would see your own mother doing this, and you would find it very interesting to watch her. It is quite like tidying up drawers. You would see her on her knees, I expect, lingering humorously over some of your contents, wondering where on earth you had picked this thing up, making discoveries sweet and not so sweet, pressing this to her cheek as if it were as nice as a kitten, and hurriedly stowing that out of sight. When you wake in the morning, the naughtiness and evil passions with which you went to bed have been folded up small and placed at the bottom of your mind and on the top, beautifully aired, are spread out your prettier thoughts, ready for you to put on.\n\nI don't know whether you have ever seen a map of a person's mind. Doctors sometimes draw maps of other parts of you, and your own map can become intensely interesting, but catch them trying to draw a map of a child's mind, which is not only confused, but keeps going round all the time. There are zigzag lines on it, just like your temperature on a card, and these are probably roads in the island, for the Neverland is always more or less an island, with astonishing splashes of colour here and there, and coral reefs and rakish-looking craft in the offing, and savages and lonely lairs, and gnomes who are mostly tailors, and caves through which a river runs, and princes with six elder brothers, and a hut fast going to decay, and one very small old lady with a hooked nose. It would be an easy map if that were all, but there is also first day at school, religion, fathers, the round pond, needle-work, murders, hangings, verbs that take the dative, chocolate pudding day, getting into braces, say ninety-nine, three-pence for pulling out your tooth yourself, and so on, and either these are part of the island or they are another map showing through, and it is all rather confusing, especially as nothing will stand still.\n\nOf course the Neverlands vary a good deal. John's, for instance, had a lagoon with flamingoes flying over it at which John was shooting, while Michael, who was very small, had a flamingo with lagoons flying over it. John lived in a boat turned upside down on the sands, Michael in a wigwam, Wendy in a house of leaves deftly sewn together. John had no friends, Michael had friends at night, Wendy had a pet wolf forsaken by its parents, but on the whole the Neverlands have a family resemblance, and if they stood still in a row you could say of them that they have each other's nose, and so forth. On these magic shores children at play are for ever beaching their coracles [simple boat]. We too have been there; we can still hear the sound of the surf, though we shall land no more.\n\nOf all delectable islands the Neverland is the snuggest and most compact, not large and sprawly, you know, with tedious distances between one adventure and another, but nicely crammed. When you play at it by day with the chairs and table-cloth, it is not in the least alarming, but in the two minutes before you go to sleep it becomes very real. That is why there are night-lights.\n\nOccasionally in her travels through her children's minds Mrs. Darling found things she could not understand, and of these quite the most perplexing was the word Peter. She knew of no Peter, and yet he was here and there in John and Michael's minds, while Wendy's began to be scrawled all over with him. The name stood out in bolder letters than any of the other words, and as Mrs. Darling gazed she felt that it had an oddly cocky appearance.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "1477075775",
                "id": "2373",
                "key": "jabber_published"
            },
            {
                "value": "358",
                "id": "867",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "866",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                },
                "readability": {
                    "description": "",
                    "post_count": 1,
                    "ID": 71229,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:readability",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:readability/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "readability",
                    "name": "readability"
                },
                "standard": {
                    "description": "",
                    "post_count": 2,
                    "ID": 472597,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:standard-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:standard-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "standard-2",
                    "name": "standard"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2010/10/05/post-format-standard/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-10-05T00:27:25-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-standard",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2016-10-21T18:49:35+00:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/358",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/358/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/358/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/358/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {
            "768": {
                "description": "Public domain via http://www.burningwell.org/gallery2/v/Landscapes/ocean/IMG_0513-1.JPG.html",
                "extension": "jpg",
                "title": "Huatulco Coastline",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/07/img_0513-1.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/768",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/768/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 533,
                "post_ID": 555,
                "alt": "Huatulco Coastline",
                "width": 800,
                "caption": "Sunrise over the coast in Huatulco, Oaxaca, Mexico",
                "file": "img_0513-1.jpg",
                "exif": {
                    "shutter_speed": "0.005",
                    "copyright": "",
                    "caption": "Alas! I have found my Shangri-La",
                    "title": "Alas! I have found my Shangri-La",
                    "keywords": [],
                    "credit": "Picasa 2.0",
                    "created_timestamp": "1158217614",
                    "camera": "Canon EOS 5D",
                    "iso": "400",
                    "focal_length": "105",
                    "aperture": "5.6",
                    "orientation": "0"
                },
                "date": "2011-07-15T14:49:48-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/07/img_0513-1.jpg",
                "ID": 768,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/07/img_0513-1.jpg?w=800",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/07/img_0513-1.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/07/img_0513-1.jpg?w=150"
                }
            },
            "769": {
                "description": "Public domain via http://www.burningwell.org/gallery2/main.php?g2_view=dynamicalbum.UpdatesAlbum&amp;g2_itemId=25770",
                "extension": "jpg",
                "title": "Brazil Beach",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/07/img_0747.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/769",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/769/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 1066,
                "post_ID": 555,
                "alt": "Brazil Beach",
                "width": 1600,
                "caption": "Jericoacoara Ceara Brasil",
                "file": "img_0747.jpg",
                "exif": {
                    "shutter_speed": "0.00125",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1271654325",
                    "camera": "Canon EOS REBEL T2i",
                    "iso": "800",
                    "focal_length": "18",
                    "aperture": "11",
                    "orientation": "1"
                },
                "date": "2011-07-15T14:50:37-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/07/img_0747.jpg",
                "ID": 769,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/07/img_0747.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/07/img_0747.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/07/img_0747.jpg?w=150"
                }
            },
            "771": {
                "description": "Public domain via http://www.burningwell.org/gallery2/main.php?g2_view=dynamicalbum.UpdatesAlbum&amp;g2_itemId=25774",
                "extension": "jpg",
                "title": "Boat Barco Texture",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/07/img_8399.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/771",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/771/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 1066,
                "post_ID": 555,
                "alt": "Boat Barco Texture",
                "width": 1600,
                "caption": "Boat BW PB Barco Texture Beautiful Fishing",
                "file": "img_8399.jpg",
                "exif": {
                    "shutter_speed": "0.004",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1192368714",
                    "camera": "Canon EOS DIGITAL REBEL XT",
                    "iso": "100",
                    "focal_length": "75",
                    "aperture": "4.5",
                    "orientation": "1"
                },
                "date": "2011-07-15T14:51:57-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/07/img_8399.jpg",
                "ID": 771,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/07/img_8399.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/07/img_8399.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/07/img_8399.jpg?w=150"
                }
            },
            "756": {
                "description": "Public domain via http://www.burningwell.org/gallery2/v/Landscapes/ocean/CEP00032.jpg.html",
                "extension": "jpg",
                "title": "Sunburst Over River",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/07/cep00032.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/756",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/756/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 1200,
                "post_ID": 555,
                "alt": "Sunburst Over River",
                "width": 1500,
                "caption": "Sunburst over the Clinch River, Southwest Virginia.",
                "file": "cep00032.jpg",
                "exif": {
                    "shutter_speed": "0.002091",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1130775264",
                    "camera": "Canon ELURA90",
                    "iso": "0",
                    "focal_length": "4.15",
                    "aperture": "4",
                    "orientation": "1"
                },
                "date": "2011-07-15T14:41:24-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/07/cep00032.jpg",
                "ID": 756,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/07/cep00032.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/07/cep00032.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/07/cep00032.jpg?w=150"
                }
            },
            "762": {
                "description": "Public domain via http://www.burningwell.org/gallery2/v/Objects/dsc20051220_160808_102.jpg.html",
                "extension": "jpg",
                "title": "Antique Farm Machinery",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/07/dsc20051220_160808_102.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/762",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/762/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 1066,
                "post_ID": 555,
                "alt": "Antique Farm Machinery",
                "width": 1600,
                "caption": "Antique farm machinery, Mount Barker Museum, Western Australia",
                "file": "dsc20051220_160808_102.jpg",
                "exif": {
                    "shutter_speed": "0.016666666666667",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1135094888",
                    "camera": "Canon EOS 10D",
                    "iso": "400",
                    "focal_length": "50",
                    "aperture": "2.5",
                    "orientation": "1"
                },
                "date": "2011-07-15T14:41:45-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/07/dsc20051220_160808_102.jpg",
                "ID": 762,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/07/dsc20051220_160808_102.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/07/dsc20051220_160808_102.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/07/dsc20051220_160808_102.jpg?w=150"
                }
            },
            "763": {
                "description": "Public domain via http://www.burningwell.org/gallery2/main.php?g2_view=dynamicalbum.UpdatesAlbum&amp;g2_itemId=25895",
                "extension": "jpg",
                "title": "Orange Iris",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/07/dsc02085.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/763",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/763/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 1200,
                "post_ID": 555,
                "alt": "Orange Iris",
                "width": 1600,
                "caption": "Orange Iris",
                "file": "dsc02085.jpg",
                "exif": {
                    "shutter_speed": "0.008",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1288861799",
                    "camera": "DSC-S930",
                    "iso": "100",
                    "focal_length": "6.4",
                    "aperture": "2.9",
                    "orientation": "1"
                },
                "date": "2011-07-15T14:46:27-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/07/dsc02085.jpg",
                "ID": 763,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/07/dsc02085.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/07/dsc02085.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/07/dsc02085.jpg?w=150"
                }
            },
            "760": {
                "description": "Public domain via http://www.burningwell.org/gallery2/v/Objects/dsc09114.jpg.html",
                "extension": "jpg",
                "title": "Sydney Harbor Bridge",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/07/dsc09114.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/760",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/760/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 1200,
                "post_ID": 555,
                "alt": "Sydney Harbor Bridge",
                "width": 1600,
                "caption": "Sydney Harbor Bridge",
                "file": "dsc09114.jpg",
                "exif": {
                    "shutter_speed": "0.002",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1067174771",
                    "camera": "CYBERSHOT",
                    "iso": "100",
                    "focal_length": "11.8",
                    "aperture": "5.6",
                    "orientation": "1"
                },
                "date": "2011-07-15T14:41:41-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/07/dsc09114.jpg",
                "ID": 760,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/07/dsc09114.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/07/dsc09114.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/07/dsc09114.jpg?w=150"
                }
            },
            "761": {
                "description": "Public domain via http://www.burningwell.org/gallery2/v/Landscapes/ocean/dsc20050102_192118_51.jpg.html",
                "extension": "jpg",
                "title": "Wind Farm",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/07/dsc20050102_192118_51.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/761",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/761/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 1200,
                "post_ID": 555,
                "alt": "Wind Farm",
                "width": 1600,
                "caption": "Albany wind-farm against the sunset, Western Australia",
                "file": "dsc20050102_192118_51.jpg",
                "exif": {
                    "shutter_speed": "0.00625",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1104693678",
                    "camera": "CYBERSHOT",
                    "iso": "100",
                    "focal_length": "33.3",
                    "aperture": "4",
                    "orientation": "1"
                },
                "date": "2011-07-15T14:41:42-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/07/dsc20050102_192118_51.jpg",
                "ID": 761,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/07/dsc20050102_192118_51.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/07/dsc20050102_192118_51.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/07/dsc20050102_192118_51.jpg?w=150"
                }
            },
            "766": {
                "description": "Public domain via http://www.burningwell.org/gallery2/v/Landscapes/ocean/michelle_049.jpg.html",
                "extension": "jpg",
                "title": "Big Sur",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/07/michelle_049.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/766",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/766/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 1200,
                "post_ID": 555,
                "alt": "Big Sur",
                "width": 1600,
                "caption": "Beach at Big Sur, CA",
                "file": "michelle_049.jpg",
                "exif": {
                    "shutter_speed": "0.00625",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1096133874",
                    "camera": "Canon PowerShot G3",
                    "iso": "0",
                    "focal_length": "15.8125",
                    "aperture": "7.1",
                    "orientation": "1"
                },
                "date": "2011-07-15T14:47:23-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/07/michelle_049.jpg",
                "ID": 766,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/07/michelle_049.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/07/michelle_049.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/07/michelle_049.jpg?w=150"
                }
            },
            "767": {
                "description": "Public domain via http://www.burningwell.org/gallery2/v/Objects/Windmill.jpg.html",
                "extension": "jpg",
                "title": "Windmill",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/07/windmill.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/767",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/767/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 1200,
                "post_ID": 555,
                "alt": "Windmill",
                "width": 1600,
                "caption": "Windmill shrouded in fog at a farm outside of Walker, Iowa",
                "file": "windmill.jpg",
                "exif": {
                    "shutter_speed": "0.0055555555555556",
                    "copyright": "",
                    "caption": "DCF 1.0",
                    "title": "DCF 1.0",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1125077631",
                    "camera": "DiMAGE 7",
                    "iso": "100",
                    "focal_length": "50.69140625",
                    "aperture": "5.6",
                    "orientation": "1"
                },
                "date": "2011-07-15T14:47:26-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/07/windmill.jpg",
                "ID": 767,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/07/windmill.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/07/windmill.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/07/windmill.jpg?w=150"
                }
            },
            "764": {
                "description": "Public domain via http://www.burningwell.org/gallery2/v/Objects/dsc20051220_173257_119.jpg.html",
                "extension": "jpg",
                "title": "Rusty Rail",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/07/dsc20051220_173257_119.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/764",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/764/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 1066,
                "post_ID": 555,
                "alt": "Rusty Rail",
                "width": 1600,
                "caption": "Rusty rails with fishplate, Kojonup",
                "file": "dsc20051220_173257_119.jpg",
                "exif": {
                    "shutter_speed": "0.0013333333333333",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1135099977",
                    "camera": "Canon EOS 10D",
                    "iso": "400",
                    "focal_length": "50",
                    "aperture": "6.7",
                    "orientation": "1"
                },
                "date": "2011-07-15T14:47:17-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/07/dsc20051220_173257_119.jpg",
                "ID": 764,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/07/dsc20051220_173257_119.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/07/dsc20051220_173257_119.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/07/dsc20051220_173257_119.jpg?w=150"
                }
            },
            "765": {
                "description": "Public domain via http://www.burningwell.org/gallery2/v/Landscapes/ocean/dscn3316.jpg.html",
                "extension": "jpg",
                "title": "Sea and Rocks",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/07/dscn3316.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/765",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/765/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 1200,
                "post_ID": 555,
                "alt": "Sea and Rocks",
                "width": 1600,
                "caption": "Sea and rocks, Plimmerton, New Zealand",
                "file": "dscn3316.jpg",
                "exif": {
                    "shutter_speed": "0.0045454545454545",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1170775967",
                    "camera": "E4300",
                    "iso": "100",
                    "focal_length": "8",
                    "aperture": "7.6",
                    "orientation": "1"
                },
                "date": "2011-07-15T14:47:20-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/07/dscn3316.jpg",
                "ID": 765,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/07/dscn3316.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/07/dscn3316.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/07/dscn3316.jpg?w=150"
                }
            },
            "611": {
                "description": "",
                "extension": "jpg",
                "title": "canola2",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/01/canola2.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/611",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/611/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 480,
                "post_ID": 555,
                "alt": "canola",
                "width": 640,
                "caption": "Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec mollis. Quisque convallis libero in sapien pharetra tincidunt. Aliquam elit ante, malesuada id, tempor eu, gravida id, odio. Maecenas suscipit, risus et eleifend imperdiet, nisi orci ullamcorper massa, et adipiscing orci velit quis magna.",
                "file": "canola2.jpg",
                "exif": {
                    "shutter_speed": "0.0015625",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1094915268",
                    "camera": "Canon PowerShot G2",
                    "iso": "0",
                    "focal_length": "16.8125",
                    "aperture": "5.6",
                    "orientation": "0"
                },
                "date": "2011-01-10T06:17:54-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/01/canola2.jpg",
                "ID": 611,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/01/canola2.jpg?w=640",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/01/canola2.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/01/canola2.jpg?w=150"
                }
            },
            "617": {
                "description": "",
                "extension": "jpg",
                "title": "dsc20050813_115856_52",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/01/dsc20050813_115856_52.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/617",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/617/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 480,
                "post_ID": 555,
                "alt": "dsc20050813_115856_52",
                "width": 640,
                "caption": "",
                "file": "dsc20050813_115856_52.jpg",
                "exif": {
                    "shutter_speed": "0.008",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1123934337",
                    "camera": "CYBERSHOT",
                    "iso": "100",
                    "focal_length": "9.7",
                    "aperture": "3.2",
                    "orientation": "0"
                },
                "date": "2011-01-10T06:20:57-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/01/dsc20050813_115856_52.jpg",
                "ID": 617,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/01/dsc20050813_115856_52.jpg?w=640",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/01/dsc20050813_115856_52.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/01/dsc20050813_115856_52.jpg?w=150"
                }
            },
            "807": {
                "description": "",
                "extension": "jpg",
                "title": "dsc20040724_152504_532",
                "URL": "https://coveopushdemo.files.wordpress.com/2012/06/dsc20040724_152504_532.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/807",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/807/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 480,
                "post_ID": 555,
                "alt": "",
                "width": 640,
                "caption": "",
                "file": "dsc20040724_152504_532.jpg",
                "exif": {
                    "shutter_speed": "0.02",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1090682704",
                    "camera": "CYBERSHOT",
                    "iso": "100",
                    "focal_length": "9.7",
                    "aperture": "2",
                    "orientation": "0"
                },
                "date": "2012-06-04T11:36:56-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2012/06/dsc20040724_152504_532.jpg",
                "ID": 807,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2012/06/dsc20040724_152504_532.jpg?w=640",
                    "medium": "https://coveopushdemo.files.wordpress.com/2012/06/dsc20040724_152504_532.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2012/06/dsc20040724_152504_532.jpg?w=150"
                }
            },
            "759": {
                "description": "Public domain via http://www.burningwell.org/gallery2/v/Landscapes/ocean/dsc04563.jpg.html",
                "extension": "jpg",
                "title": "Rain Ripples",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/07/dsc04563.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/759",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/759/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 1200,
                "post_ID": 555,
                "alt": "Rain Ripples",
                "width": 1600,
                "caption": "Raindrop ripples on a pond",
                "file": "dsc04563.jpg",
                "exif": {
                    "shutter_speed": "0.002",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1040567677",
                    "camera": "CYBERSHOT",
                    "iso": "100",
                    "focal_length": "48.5",
                    "aperture": "4",
                    "orientation": "1"
                },
                "date": "2011-07-15T14:41:37-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/07/dsc04563.jpg",
                "ID": 759,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/07/dsc04563.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/07/dsc04563.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/07/dsc04563.jpg?w=150"
                }
            },
            "616": {
                "description": "",
                "extension": "jpg",
                "title": "dsc20050727_091048_222",
                "URL": "https://coveopushdemo.files.wordpress.com/2011/01/dsc20050727_091048_222.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/616",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/616/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 480,
                "post_ID": 555,
                "alt": "dsc20050727_091048_222",
                "width": 640,
                "caption": "",
                "file": "dsc20050727_091048_222.jpg",
                "exif": {
                    "shutter_speed": "0.004",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "1122455448",
                    "camera": "CYBERSHOT",
                    "iso": "100",
                    "focal_length": "9.7",
                    "aperture": "4",
                    "orientation": "0"
                },
                "date": "2011-01-10T06:20:37-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2011/01/dsc20050727_091048_222.jpg",
                "ID": 616,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2011/01/dsc20050727_091048_222.jpg?w=640",
                    "medium": "https://coveopushdemo.files.wordpress.com/2011/01/dsc20050727_091048_222.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2011/01/dsc20050727_091048_222.jpg?w=150"
                }
            }
        },
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 17,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/?p=555",
        "title": "Post Format: Gallery",
        "short_URL": "http://wp.me/p7VTrW-8X",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            },
            "shortcode": {
                "description": "",
                "post_count": 6,
                "ID": 412776,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "shortcode",
                "name": "shortcode"
            },
            "gallery": {
                "description": "",
                "post_count": 3,
                "ID": 3263,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:gallery",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:gallery/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "gallery",
                "name": "gallery"
            }
        },
        "global_ID": "454e7eae376ff4ea4af62dc805f54fa8",
        "ID": 555,
        "content": "[gallery]\n\n<!--nextpage-->\n\nYou can use this page to test the Theme's handling of the[gallery]\n\nshortcode, including the <code>columns</code> parameter, from 1 to 9 columns. Themes are only required to support the default setting (3 columns), so this page is entirely optional.\n<h2>One Column</h2>\n[gallery columns=\"1\"]\n<h2>Two Columns</h2>\n[gallery columns=\"2\"]\n<h2>Three Columns</h2>\n[gallery columns=\"3\"]\n<h2>Four Columns</h2>\n[gallery columns=\"4\"]\n<h2>Five Columns</h2>\n[gallery columns=\"5\"]\n<h2>Six Columns</h2>\n[gallery columns=\"6\"]\n<h2>Seven Columns</h2>\n[gallery columns=\"7\"]\n<h2>Eight Columns</h2>\n[gallery columns=\"8\"]\n<h2>Nine Columns</h2>\n[gallery columns=\"9\"]",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "555",
                "id": "875",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "874",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {
                "Gallery": {
                    "description": "",
                    "post_count": 2,
                    "ID": 46912880,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-gallery",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-gallery/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-format-gallery",
                    "name": "Gallery"
                }
            },
            "post_tag": {
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                },
                "shortcode": {
                    "description": "",
                    "post_count": 6,
                    "ID": 412776,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "shortcode",
                    "name": "shortcode"
                },
                "gallery": {
                    "description": "",
                    "post_count": 3,
                    "ID": 3263,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:gallery",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:gallery/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "gallery",
                    "name": "gallery"
                }
            }
        },
        "parent": false,
        "format": "gallery",
        "URL": "https://coveopushdemo.wordpress.com/2010/09/10/post-format-gallery/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-09-10T07:24:14-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-gallery",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2010-09-10T07:24:14-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/555/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=1031",
        "title": "Post Format: Gallery (Tiled)",
        "short_URL": "http://wp.me/p7VTrW-gD",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "jetpack": {
                "description": "",
                "post_count": 3,
                "ID": 76655687,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jetpack-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jetpack-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "jetpack-2",
                "name": "jetpack"
            },
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            },
            "shortcode": {
                "description": "",
                "post_count": 6,
                "ID": 412776,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "shortcode",
                "name": "shortcode"
            },
            "gallery": {
                "description": "",
                "post_count": 3,
                "ID": 3263,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:gallery",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:gallery/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "gallery",
                "name": "gallery"
            },
            "tiled": {
                "description": "",
                "post_count": 1,
                "ID": 1235460,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:tiled",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:tiled/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "tiled",
                "name": "tiled"
            }
        },
        "global_ID": "b526b41bf68e9a294c0a5bcf7661ac4a",
        "ID": 1031,
        "content": "This is a test for Jetpack's Tiled Gallery.\n\nInstall <a title=\"Jetpack for WordPress\" href=\"http://wordpress.org/plugins/jetpack/\" target=\"_blank\">Jetpack</a> to test.\n\n[gallery type=\"rectangular\" columns=\"4\" ids=\"755,757,758,760,766,763\" orderby=\"rand\"]\n\nThis is some text after the Tiled Gallery just to make sure that everything spaces nicely.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "1031",
                "id": "1056",
                "key": "original_post_id"
            },
            {
                "value": "1031",
                "id": "1059",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1058",
                "key": "restapi_import_id"
            },
            {
                "value": "",
                "id": "1054",
                "key": "standard_link_url_field"
            },
            {
                "value": "",
                "id": "1053",
                "key": "standard_seo_post_level_layout"
            },
            {
                "value": "",
                "id": "1055",
                "key": "standard_seo_post_meta_description"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {
                "Gallery": {
                    "description": "",
                    "post_count": 2,
                    "ID": 46912880,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-gallery",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-gallery/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-format-gallery",
                    "name": "Gallery"
                }
            },
            "post_tag": {
                "jetpack": {
                    "description": "",
                    "post_count": 3,
                    "ID": 76655687,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jetpack-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jetpack-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "jetpack-2",
                    "name": "jetpack"
                },
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                },
                "shortcode": {
                    "description": "",
                    "post_count": 6,
                    "ID": 412776,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "shortcode",
                    "name": "shortcode"
                },
                "gallery": {
                    "description": "",
                    "post_count": 3,
                    "ID": 3263,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:gallery",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:gallery/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "gallery",
                    "name": "gallery"
                },
                "tiled": {
                    "description": "",
                    "post_count": 1,
                    "ID": 1235460,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:tiled",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:tiled/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "tiled",
                    "name": "tiled"
                }
            }
        },
        "parent": false,
        "format": "gallery",
        "URL": "https://coveopushdemo.wordpress.com/2010/09/09/post-format-gallery-tiled/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-09-09T17:23:27-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-gallery-tiled",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2010-09-09T17:23:27-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1031",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1031/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1031/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1031/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {
            "1045": {
                "description": "",
                "extension": "jpg",
                "title": "Unicorn Wallpaper",
                "URL": "https://coveopushdemo.files.wordpress.com/2013/03/unicorn-wallpaper.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/1045",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/1045/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1158",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 1200,
                "post_ID": 1158,
                "alt": "Unicorn Wallpaper",
                "width": 1600,
                "caption": "",
                "file": "unicorn-wallpaper.jpg",
                "exif": {
                    "shutter_speed": "0",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "0",
                    "camera": "",
                    "iso": "0",
                    "focal_length": "0",
                    "aperture": "0",
                    "orientation": "0"
                },
                "date": "2013-03-14T22:10:39-05:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2013/03/unicorn-wallpaper.jpg",
                "ID": 1045,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2013/03/unicorn-wallpaper.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2013/03/unicorn-wallpaper.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2013/03/unicorn-wallpaper.jpg?w=150"
                }
            }
        },
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 1,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/?p=568",
        "title": "Post Format: Image",
        "short_URL": "http://wp.me/p7VTrW-iG",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "image": {
                "description": "",
                "post_count": 7,
                "ID": 686,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "image",
                "name": "image"
            },
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "global_ID": "d1428e9923cb0dcff8b24cadcf067f53",
        "ID": 1158,
        "content": "<dl id=\"attachment_612\" class=\"wp-caption aligncenter\" style=\"width:650px;\"><dt class=\"wp-caption-dt\"></dt></dl>&nbsp;\n\n<a href=\"http://wpthemetestdata.files.wordpress.com/2008/06/100_5540.jpg\"><img class=\"alignnone wp-image-755 size-large\" src=\"http://wpthemetestdata.files.wordpress.com/2008/06/100_5540.jpg?w=604\" alt=\"\" width=\"604\" height=\"453\" /></a>",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "568",
                "id": "1141",
                "key": "original_post_id"
            },
            {
                "value": "1158",
                "id": "1144",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1143",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {
                "Image": {
                    "description": "",
                    "post_count": 3,
                    "ID": 50518530,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-image",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-image/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-format-image",
                    "name": "Image"
                }
            },
            "post_tag": {
                "image": {
                    "description": "",
                    "post_count": 7,
                    "ID": 686,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "image",
                    "name": "image"
                },
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            }
        },
        "parent": false,
        "format": "image",
        "URL": "https://coveopushdemo.wordpress.com/2010/08/08/post-format-image/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-08-08T05:00:39-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-image",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2010-08-08T05:00:39-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1158",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1158/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1158/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1158/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {
            "1628": {
                "description": "",
                "extension": "jpg",
                "title": "triforce-wallpaper",
                "URL": "https://coveopushdemo.files.wordpress.com/2013/04/triforce-wallpaper.jpg",
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/1628",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/media/1628/help",
                        "parent": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1163",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "height": 707,
                "post_ID": 1163,
                "alt": "",
                "width": 1131,
                "caption": "It’s dangerous to go alone! Take this.",
                "file": "triforce-wallpaper.jpg",
                "exif": {
                    "shutter_speed": "0",
                    "copyright": "",
                    "caption": "",
                    "title": "",
                    "keywords": [],
                    "credit": "",
                    "created_timestamp": "0",
                    "camera": "",
                    "iso": "0",
                    "focal_length": "0",
                    "aperture": "0",
                    "orientation": "0"
                },
                "date": "2013-04-09T13:17:31-07:00",
                "author_ID": 110654655,
                "guid": "http://coveopushdemo.files.wordpress.com/2013/04/triforce-wallpaper.jpg",
                "ID": 1628,
                "mime_type": "image/jpeg",
                "thumbnails": {
                    "large": "https://coveopushdemo.files.wordpress.com/2013/04/triforce-wallpaper.jpg?w=1024",
                    "medium": "https://coveopushdemo.files.wordpress.com/2013/04/triforce-wallpaper.jpg?w=300",
                    "thumbnail": "https://coveopushdemo.files.wordpress.com/2013/04/triforce-wallpaper.jpg?w=150"
                }
            }
        },
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 1,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/?p=674",
        "title": "Post Format: Image (Caption)",
        "short_URL": "http://wp.me/p7VTrW-iL",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "image": {
                "description": "",
                "post_count": 7,
                "ID": 686,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "image",
                "name": "image"
            },
            "shortcode": {
                "description": "",
                "post_count": 6,
                "ID": 412776,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "shortcode",
                "name": "shortcode"
            },
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "global_ID": "f9aac87a48539a84cad8515b7b36e51a",
        "ID": 1163,
        "content": "[caption id=\"attachment_754\" align=\"alignnone\" width=\"604\"]<a href=\"http://wpthemetestdata.files.wordpress.com/2008/06/100_5478.jpg\"><img class=\"wp-image-754 size-large\" src=\"http://wpthemetestdata.files.wordpress.com/2008/06/100_5478.jpg?w=604\" alt=\"Bell on Wharf\" width=\"604\" height=\"453\" /></a> Bell on wharf in San Francisco[/caption]",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "674",
                "id": "1160",
                "key": "original_post_id"
            },
            {
                "value": "1163",
                "id": "1170",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1169",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {
                "Image": {
                    "description": "",
                    "post_count": 3,
                    "ID": 50518530,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-image",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-image/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-format-image",
                    "name": "Image"
                }
            },
            "post_tag": {
                "image": {
                    "description": "",
                    "post_count": 7,
                    "ID": 686,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "image",
                    "name": "image"
                },
                "shortcode": {
                    "description": "",
                    "post_count": 6,
                    "ID": 412776,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "shortcode",
                    "name": "shortcode"
                },
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            }
        },
        "parent": false,
        "format": "image",
        "URL": "https://coveopushdemo.wordpress.com/2010/08/07/post-format-image-caption/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-08-07T06:00:19-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-image-caption",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2010-08-07T06:00:19-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1163",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1163/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1163/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1163/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/?p=568",
        "title": "Post Format: Image (Linked)",
        "short_URL": "http://wp.me/p7VTrW-9a",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "image": {
                "description": "",
                "post_count": 7,
                "ID": 686,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "image",
                "name": "image"
            },
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "global_ID": "ded0a1c33f52a277fe6a4b7ece8e0216",
        "ID": 568,
        "content": "[caption id=\"attachment_612\" align=\"aligncenter\" width=\"640\" caption=\"Chunk of resinous blackboy husk, Clarkson, Western Australia. This burns like a spinifex log.\"]<a href=\"http://wpthemetestdata.files.wordpress.com/2012/06/dsc20040724_152504_532.jpg\"><img src=\"http://wpthemetestdata.files.wordpress.com/2012/06/dsc20040724_152504_532.jpg\" alt=\"chunk of resinous blackboy husk\" title=\"dsc20040724_152504_532\" width=\"640\" height=\"480\" class=\"size-full wp-image-612\" /></a>[/caption]\n",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "568",
                "id": "917",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "916",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {
                "Image": {
                    "description": "",
                    "post_count": 3,
                    "ID": 50518530,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-image",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-image/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-format-image",
                    "name": "Image"
                }
            },
            "post_tag": {
                "image": {
                    "description": "",
                    "post_count": 7,
                    "ID": 686,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "image",
                    "name": "image"
                },
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            }
        },
        "parent": false,
        "format": "image",
        "URL": "https://coveopushdemo.wordpress.com/2010/08/06/post-format-image-linked/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-08-06T08:09:39-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-image-linked",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2010-08-06T08:09:39-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/568",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/568/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/568/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/568/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/?p=587",
        "title": "Post Format: Audio",
        "short_URL": "http://wp.me/p7VTrW-9t",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            },
            "audio": {
                "description": "",
                "post_count": 1,
                "ID": 413,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:audio",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:audio/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "audio",
                "name": "audio"
            },
            "shortcode": {
                "description": "",
                "post_count": 6,
                "ID": 412776,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "shortcode",
                "name": "shortcode"
            }
        },
        "global_ID": "6729bc6bea9e1636bea6e38bfb9ced98",
        "ID": 587,
        "content": "Link:\n\n<a href=\"http://wpthemetestdata.files.wordpress.com/2008/06/originaldixielandjazzbandwithalbernard-stlouisblues.mp3\">St. Louis Blues</a>\n\nAudio shortcode:\n\n[audio http://wpthemetestdata.files.wordpress.com/2008/06/originaldixielandjazzbandwithalbernard-stlouisblues.mp3]",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "http://wpthemetestdata.files.wordpress.com/2008/06/originaldixielandjazzbandwithalbernard-stlouisblues.mp3\n3043247\naudio/mpeg\n",
                "id": "939",
                "key": "enclosure"
            },
            {
                "value": "587",
                "id": "942",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "941",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {
                "Audio": {
                    "description": "",
                    "post_count": 1,
                    "ID": 50517751,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-audio",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-audio/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-format-audio",
                    "name": "Audio"
                }
            },
            "post_tag": {
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                },
                "audio": {
                    "description": "",
                    "post_count": 1,
                    "ID": 413,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:audio",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:audio/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "audio",
                    "name": "audio"
                },
                "shortcode": {
                    "description": "",
                    "post_count": 6,
                    "ID": 412776,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "shortcode",
                    "name": "shortcode"
                }
            }
        },
        "parent": false,
        "format": "audio",
        "URL": "https://coveopushdemo.wordpress.com/2010/07/02/post-format-audio/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-07-02T08:36:44-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-audio",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2010-07-02T08:36:44-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/587",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/587/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/587/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/587/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/?p=582",
        "title": "Post Format: Video (WordPress.tv)",
        "short_URL": "http://wp.me/p7VTrW-9o",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "embeds": {
                "description": "",
                "post_count": 4,
                "ID": 161043722,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "embeds-2",
                "name": "embeds"
            },
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            },
            "video": {
                "description": "",
                "post_count": 3,
                "ID": 412,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:video",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:video/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "video",
                "name": "video"
            },
            "wordpress.tv": {
                "description": "",
                "post_count": 2,
                "ID": 15787590,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:wordpress-tv",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:wordpress-tv/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "wordpress-tv",
                "name": "wordpress.tv"
            }
        },
        "global_ID": "0a0ccdc9db1fef7fd99f1a9e65d2b2ee",
        "ID": 582,
        "content": "http://wordpress.tv/2009/03/16/anatomy-of-a-wordpress-theme-exploring-the-files-behind-your-theme/\n\nPosted as per the <a href=\"http://codex.wordpress.org/Embeds\" target=\"_blank\">instructions in the Codex</a>.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "582",
                "id": "935",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "934",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {
                "Video": {
                    "description": "",
                    "post_count": 3,
                    "ID": 50518769,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-video",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-video/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-format-video",
                    "name": "Video"
                }
            },
            "post_tag": {
                "embeds": {
                    "description": "",
                    "post_count": 4,
                    "ID": 161043722,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "embeds-2",
                    "name": "embeds"
                },
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                },
                "video": {
                    "description": "",
                    "post_count": 3,
                    "ID": 412,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:video",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:video/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "video",
                    "name": "video"
                },
                "wordpress.tv": {
                    "description": "",
                    "post_count": 2,
                    "ID": 15787590,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:wordpress-tv",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:wordpress-tv/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "wordpress-tv",
                    "name": "wordpress.tv"
                }
            }
        },
        "parent": false,
        "format": "video",
        "URL": "https://coveopushdemo.wordpress.com/2010/06/03/post-format-video-wordpresstv/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-06-03T08:25:58-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-video-wordpresstv",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2010-06-03T08:25:58-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/582",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/582/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/582/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/582/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=1005",
        "title": "Post Format: Video (VideoPress)",
        "short_URL": "http://wp.me/p7VTrW-gd",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            },
            "embeds": {
                "description": "",
                "post_count": 4,
                "ID": 161043722,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "embeds-2",
                "name": "embeds"
            },
            "jetpack": {
                "description": "",
                "post_count": 3,
                "ID": 76655687,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jetpack-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jetpack-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "jetpack-2",
                "name": "jetpack"
            },
            "video": {
                "description": "",
                "post_count": 3,
                "ID": 412,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:video",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:video/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "video",
                "name": "video"
            },
            "videopress": {
                "description": "",
                "post_count": 2,
                "ID": 20117770,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:videopress",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:videopress/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "videopress",
                "name": "videopress"
            },
            "shortcode": {
                "description": "",
                "post_count": 6,
                "ID": 412776,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "shortcode",
                "name": "shortcode"
            }
        },
        "global_ID": "982650d99dc54d839b55b231b2cbe4a7",
        "ID": 1005,
        "content": "[wpvideo tFnqC9XQ w=680]\n\n<a title=\"VideoPress Plugin for WordPress\" href=\"http://videopress.com/\" target=\"_blank\">VideoPress</a>, especially as a video post format, usually provides some unique styling issues.\n\nYou will need to install <a title=\"Jetpack for WordPress\" href=\"http://jetpack.me/\" target=\"_blank\">Jetpack</a> or <a title=\"Slim Jetpack\" href=\"http://wordpress.org/extend/plugins/slimjetpack/\" target=\"_blank\">Slim Jetpack</a> plugin to turn the shortcode into a viewable video.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "1005",
                "id": "1016",
                "key": "original_post_id"
            },
            {
                "value": "1005",
                "id": "1019",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1018",
                "key": "restapi_import_id"
            },
            {
                "value": "",
                "id": "1014",
                "key": "standard_link_url_field"
            },
            {
                "value": "",
                "id": "1013",
                "key": "standard_seo_post_level_layout"
            },
            {
                "value": "",
                "id": "1015",
                "key": "standard_seo_post_meta_description"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {
                "Video": {
                    "description": "",
                    "post_count": 3,
                    "ID": 50518769,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-video",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-video/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-format-video",
                    "name": "Video"
                }
            },
            "post_tag": {
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                },
                "embeds": {
                    "description": "",
                    "post_count": 4,
                    "ID": 161043722,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "embeds-2",
                    "name": "embeds"
                },
                "jetpack": {
                    "description": "",
                    "post_count": 3,
                    "ID": 76655687,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jetpack-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jetpack-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "jetpack-2",
                    "name": "jetpack"
                },
                "video": {
                    "description": "",
                    "post_count": 3,
                    "ID": 412,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:video",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:video/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "video",
                    "name": "video"
                },
                "videopress": {
                    "description": "",
                    "post_count": 2,
                    "ID": 20117770,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:videopress",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:videopress/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "videopress",
                    "name": "videopress"
                },
                "shortcode": {
                    "description": "",
                    "post_count": 6,
                    "ID": 412776,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "shortcode",
                    "name": "shortcode"
                }
            }
        },
        "parent": false,
        "format": "video",
        "URL": "https://coveopushdemo.wordpress.com/2010/06/02/post-format-video-videopress/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-06-02T03:00:34-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-video-videopress",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2010-06-02T03:00:34-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1005",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1005/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1005/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1005/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/?p=582",
        "title": "Post Format: Video (YouTube)",
        "short_URL": "http://wp.me/p7VTrW-iJ",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "global_ID": "f630394532487681ce0c831d82e646d3",
        "ID": 1161,
        "content": "http://www.youtube.com/watch?v=SQEQr7c0-dw\n\nLearn more about <a title=\"WordPress Embeds\" href=\"http://codex.wordpress.org/Embeds\" target=\"_blank\">WordPress Embeds</a>.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "582",
                "id": "1151",
                "key": "original_post_id"
            },
            {
                "value": "1161",
                "id": "1154",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1153",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {
                "Video": {
                    "description": "",
                    "post_count": 3,
                    "ID": 50518769,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-video",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-video/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-format-video",
                    "name": "Video"
                }
            },
            "post_tag": {
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            }
        },
        "parent": false,
        "format": "video",
        "URL": "https://coveopushdemo.wordpress.com/2010/06/02/post-format-video-youtube/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-06-02T02:00:58-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-video-youtube",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2010-06-02T02:00:58-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1161",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1161/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1161/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1161/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/?p=559",
        "title": "Post Format: Aside",
        "short_URL": "http://wp.me/p7VTrW-91",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            },
            "aside": {
                "description": "",
                "post_count": 1,
                "ID": 6935,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:aside",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:aside/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "aside",
                "name": "aside"
            }
        },
        "global_ID": "aaae1486a7134c7b2508e57f8573a76a",
        "ID": 559,
        "content": "“I never tried to prove nothing, just wanted to give a good show. My life has always been my music, it's always come first, but the music ain't worth nothing if you can't lay it on the public. The main thing is to live for that audience, 'cause what you're there for is to please the people.”",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "559",
                "id": "883",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "882",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {
                "Aside": {
                    "description": "",
                    "post_count": 1,
                    "ID": 46911994,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-aside",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-aside/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-format-aside",
                    "name": "Aside"
                }
            },
            "post_tag": {
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                },
                "aside": {
                    "description": "",
                    "post_count": 1,
                    "ID": 6935,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:aside",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:aside/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "aside",
                    "name": "aside"
                }
            }
        },
        "parent": false,
        "format": "aside",
        "URL": "https://coveopushdemo.wordpress.com/2010/05/09/post-format-aside/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-05-09T07:51:54-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-aside",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2010-05-09T07:51:54-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/559",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/559/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/559/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/559/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/?p=579",
        "title": "Post Format: Status",
        "short_URL": "http://wp.me/p7VTrW-9l",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "status": {
                "description": "",
                "post_count": 1,
                "ID": 577,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:status",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:status/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "status",
                "name": "status"
            },
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "global_ID": "871357499de1c5517da34aa44175c45a",
        "ID": 579,
        "content": "WordPress, how do I love thee? Let me count the ways (in 140 characters or less).",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "579",
                "id": "929",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "928",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {
                "Status": {
                    "description": "",
                    "post_count": 1,
                    "ID": 49319563,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-status",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-status/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-format-status",
                    "name": "Status"
                }
            },
            "post_tag": {
                "status": {
                    "description": "",
                    "post_count": 1,
                    "ID": 577,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:status",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:status/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "status",
                    "name": "status"
                },
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            }
        },
        "parent": false,
        "format": "status",
        "URL": "https://coveopushdemo.wordpress.com/2010/04/04/post-format-status/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-04-04T08:21:24-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-status",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2010-04-04T08:21:24-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/579",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/579/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/579/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/579/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/?p=565",
        "title": "Post Format: Link",
        "short_URL": "http://wp.me/p7VTrW-97",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            },
            "link": {
                "description": "",
                "post_count": 2,
                "ID": 2717,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:link",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:link/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "link",
                "name": "link"
            }
        },
        "global_ID": "a1d564ee59749b89a0b5b950e3e7be84",
        "ID": 565,
        "content": "<a href=\"http://make.wordpress.org/themes\" title=\"The WordPress Theme Review Team Website\">The WordPress Theme Review Team Website</a>",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "565",
                "id": "897",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "896",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {
                "Link": {
                    "description": "",
                    "post_count": 1,
                    "ID": 50331727,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-link",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-link/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-format-link",
                    "name": "Link"
                }
            },
            "post_tag": {
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                },
                "link": {
                    "description": "",
                    "post_count": 2,
                    "ID": 2717,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:link",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:link/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "link",
                    "name": "link"
                }
            }
        },
        "parent": false,
        "format": "link",
        "URL": "https://coveopushdemo.wordpress.com/2010/03/07/post-format-link/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-03-07T08:06:53-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-link",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2010-03-07T08:06:53-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/565",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/565/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/565/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/565/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/?p=575",
        "title": "Post Format: Quote",
        "short_URL": "http://wp.me/p7VTrW-9h",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "quote": {
                "description": "",
                "post_count": 2,
                "ID": 3099,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:quote",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:quote/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "quote",
                "name": "quote"
            },
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "global_ID": "5ac1d22546d0e3d99b1a524d404074d2",
        "ID": 575,
        "content": "<blockquote>Only one thing is impossible for God: To find any sense in any copyright law on the planet.\n<cite><a href=\"http://www.brainyquote.com/quotes/quotes/m/marktwain163473.html\">Mark Twain</a></cite></blockquote>",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "575",
                "id": "923",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "922",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {
                "Quote": {
                    "description": "",
                    "post_count": 1,
                    "ID": 49366344,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-quote",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-quote/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-format-quote",
                    "name": "Quote"
                }
            },
            "post_tag": {
                "quote": {
                    "description": "",
                    "post_count": 2,
                    "ID": 3099,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:quote",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:quote/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "quote",
                    "name": "quote"
                },
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            }
        },
        "parent": false,
        "format": "quote",
        "URL": "https://coveopushdemo.wordpress.com/2010/02/05/post-format-quote/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-02-05T08:13:15-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-quote",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2010-02-05T08:13:15-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/575",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/575/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/575/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/575/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/?p=562",
        "title": "Post Format: Chat",
        "short_URL": "http://wp.me/p7VTrW-94",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            },
            "chat": {
                "description": "",
                "post_count": 2,
                "ID": 4870,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:chat",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:chat/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "chat",
                "name": "chat"
            }
        },
        "global_ID": "7f93eddd4165a8505a27c26e61b0837d",
        "ID": 562,
        "content": "Abbott: Strange as it may seem, they give ball players nowadays very peculiar names.\n\nCostello: Funny names?\n\nAbbott: Nicknames, nicknames. Now, on the St. Louis team we have Who's on first, What's on second, I Don't Know is on third--\n\nCostello: That's what I want to find out. I want you to tell me the names of the fellows on the St. Louis team.\n\nAbbott: I'm telling you. Who's on first, What's on second, I Don't Know is on third--\n\nCostello: You know the fellows' names?\n\nAbbott: Yes.\n\nCostello: Well, then who's playing first?\n\nAbbott: Yes.\n\nCostello: I mean the fellow's name on first base.\n\nAbbott: Who.\n\nCostello: The fellow playin' first base.\n\nAbbott: Who.\n\nCostello: The guy on first base.\n\nAbbott: Who is on first.\n\nCostello: Well, what are you askin' me for?\n\nAbbott: I'm not asking you--I'm telling you. Who is on first.\n\nCostello: I'm asking you--who's on first?\n\nAbbott: That's the man's name.\n\nCostello: That's who's name?\n\nAbbott: Yes.\n\nCostello: When you pay off the first baseman every month, who gets the money?\n\nAbbott: Every dollar of it. And why not, the man's entitled to it.\n\nCostello: Who is?\n\nAbbott: Yes.\n\nCostello: So who gets it?\n\nAbbott: Why shouldn't he? Sometimes his wife comes down and collects it.\n\nCostello: Who's wife?\n\nAbbott: Yes. After all, the man earns it.\n\nCostello: Who does?\n\nAbbott: Absolutely.\n\nCostello: Well, all I'm trying to find out is what's the guy's name on first base?\n\nAbbott: Oh, no, no. What is on second base.\n\nCostello: I'm not asking you who's on second.\n\nAbbott: Who's on first!\n\nCostello: St. Louis has a good outfield?\n\nAbbott: Oh, absolutely.\n\nCostello: The left fielder's name?\n\nAbbott: Why.\n\nCostello: I don't know, I just thought I'd ask.\n\nAbbott: Well, I just thought I'd tell you.\n\nCostello: Then tell me who's playing left field?\n\nAbbott: Who's playing first.\n\nCostello: Stay out of the infield! The left fielder's name?\n\nAbbott: Why.\n\nCostello: Because.\n\nAbbott: Oh, he's center field.\n\nCostello: Wait a minute. You got a pitcher on this team?\n\nAbbott: Wouldn't this be a fine team without a pitcher?\n\nCostello: Tell me the pitcher's name.\n\nAbbott: Tomorrow.\n\nCostello: Now, when the guy at bat bunts the ball--me being a good catcher--I want to throw the guy out at first base, so I pick up the ball and throw it to who?\n\nAbbott: Now, that's he first thing you've said right.\n\nCostello: I DON'T EVEN KNOW WHAT I'M TALKING ABOUT!\n\nAbbott: Don't get excited. Take it easy.\n\nCostello: I throw the ball to first base, whoever it is grabs the ball, so the guy runs to second. Who picks up the ball and throws it to what. What throws it to I don't know. I don't know throws it back to tomorrow--a triple play.\n\nAbbott: Yeah, it could be.\n\nCostello: Another guy gets up and it's a long ball to center.\n\nAbbott: Because.\n\nCostello: Why? I don't know. And I don't care.\n\nAbbott: What was that?\n\nCostello: I said, I DON'T CARE!\n\nAbbott: Oh, that's our shortstop!",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "562",
                "id": "889",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "888",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                }
            },
            "mentions": {},
            "post_format": {
                "Chat": {
                    "description": "",
                    "post_count": 1,
                    "ID": 55294242,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-chat",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/taxonomies/post_format/terms/slug:post-format-chat/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-format-chat",
                    "name": "Chat"
                }
            },
            "post_tag": {
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                },
                "chat": {
                    "description": "",
                    "post_count": 2,
                    "ID": 4870,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:chat",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:chat/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "chat",
                    "name": "chat"
                }
            }
        },
        "parent": false,
        "format": "chat",
        "URL": "https://coveopushdemo.wordpress.com/2010/01/08/post-format-chat/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2010-01-08T07:59:31-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "post-format-chat",
        "categories": {
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2010-01-08T07:59:31-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/562",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/562/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/562/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/562/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=877",
        "title": "Antidisestablishmentarianism",
        "short_URL": "http://wp.me/p7VTrW-iX",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "layout": {
                "description": "",
                "post_count": 4,
                "ID": 26060,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "layout",
                "name": "layout"
            },
            "title": {
                "description": "",
                "post_count": 5,
                "ID": 1653,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "title",
                "name": "title"
            },
            "content": {
                "description": "",
                "post_count": 12,
                "ID": 35181409,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "content-2",
                "name": "content"
            },
            "html": {
                "description": "",
                "post_count": 5,
                "ID": 647,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "html",
                "name": "html"
            },
            "edge case": {
                "description": "",
                "post_count": 8,
                "ID": 16894899,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "edge-case",
                "name": "edge case"
            },
            "css": {
                "description": "",
                "post_count": 7,
                "ID": 169,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "css",
                "name": "css"
            }
        },
        "global_ID": "ee21ff606c1c773c6cfb4c5a82971f55",
        "ID": 1175,
        "content": "<h2>Title should not overflow the content area</h2>\n\nA few things to check for:\n<ul>\n\t<li>Non-breaking text in the title, content, and comments should have no adverse effects on layout or functionality.</li>\n\t<li>Check the browser window / tab title.</li>\n\t<li>If you are a plugin or widget developer, check that this text does not break anything.</li>\n</ul>\n\nThe following CSS properties will help you support non-breaking text.\n\n<pre>-ms-word-wrap: break-word;\nword-wrap: break-word;</pre>\n&nbsp;",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "877",
                "id": "1244",
                "key": "original_post_id"
            },
            {
                "value": "1175",
                "id": "1247",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1246",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Edge Case": {
                    "description": "Posts that have edge-case related tests",
                    "parent": 0,
                    "post_count": 6,
                    "ID": 161095136,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "edge-case-2",
                    "name": "Edge Case"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "layout": {
                    "description": "",
                    "post_count": 4,
                    "ID": 26060,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "layout",
                    "name": "layout"
                },
                "title": {
                    "description": "",
                    "post_count": 5,
                    "ID": 1653,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "title",
                    "name": "title"
                },
                "content": {
                    "description": "",
                    "post_count": 12,
                    "ID": 35181409,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "content-2",
                    "name": "content"
                },
                "html": {
                    "description": "",
                    "post_count": 5,
                    "ID": 647,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "html",
                    "name": "html"
                },
                "edge case": {
                    "description": "",
                    "post_count": 8,
                    "ID": 16894899,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "edge-case",
                    "name": "edge case"
                },
                "css": {
                    "description": "",
                    "post_count": 7,
                    "ID": 169,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "css",
                    "name": "css"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2009/10/05/title-should-not-overflow-the-content-area/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2009-10-05T12:00:59-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "title-should-not-overflow-the-content-area",
        "categories": {
            "Edge Case": {
                "description": "Posts that have edge-case related tests",
                "parent": 0,
                "post_count": 6,
                "ID": 161095136,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "edge-case-2",
                "name": "Edge Case"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2009-10-05T12:00:59-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1175",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1175/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1175/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1175/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/2007/09/04/14/",
        "title": "",
        "short_URL": "http://wp.me/p7VTrW-iR",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "edge case": {
                "description": "",
                "post_count": 8,
                "ID": 16894899,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "edge-case",
                "name": "edge case"
            },
            "layout": {
                "description": "",
                "post_count": 4,
                "ID": 26060,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "layout",
                "name": "layout"
            },
            "title": {
                "description": "",
                "post_count": 5,
                "ID": 1653,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "title",
                "name": "title"
            }
        },
        "global_ID": "cb723c9936f68a73aa202fa5422605cf",
        "ID": 1169,
        "content": "This post has no title, but it still must link to the single post view somehow.\n\nThis is typically done by placing the permalink on the post date.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "133",
                "id": "1195",
                "key": "original_post_id"
            },
            {
                "value": "1169",
                "id": "1199",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1198",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Edge Case": {
                    "description": "Posts that have edge-case related tests",
                    "parent": 0,
                    "post_count": 6,
                    "ID": 161095136,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "edge-case-2",
                    "name": "Edge Case"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "edge case": {
                    "description": "",
                    "post_count": 8,
                    "ID": 16894899,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "edge-case",
                    "name": "edge case"
                },
                "layout": {
                    "description": "",
                    "post_count": 4,
                    "ID": 26060,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "layout",
                    "name": "layout"
                },
                "title": {
                    "description": "",
                    "post_count": 5,
                    "ID": 1653,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "title",
                    "name": "title"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2009/09/05/edge-case-no-title/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2009-09-05T09:00:23-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "edge-case-no-title",
        "categories": {
            "Edge Case": {
                "description": "Posts that have edge-case related tests",
                "parent": 0,
                "post_count": 6,
                "ID": 161095136,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "edge-case-2",
                "name": "Edge Case"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2009-09-05T09:00:23-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1169",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1169/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1169/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1169/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/2007/09/04/this-post-has-no-body/",
        "title": "Edge Case: No Content",
        "short_URL": "http://wp.me/p7VTrW-iS",
        "discussion": {
            "pings_open": false,
            "comment_count": 1,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "content": {
                "description": "",
                "post_count": 12,
                "ID": 35181409,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "content-2",
                "name": "content"
            },
            "edge case": {
                "description": "",
                "post_count": 8,
                "ID": 16894899,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "edge-case",
                "name": "edge case"
            },
            "layout": {
                "description": "",
                "post_count": 4,
                "ID": 26060,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "layout",
                "name": "layout"
            }
        },
        "global_ID": "30016544ccb226cec356a8e2186bd9f1",
        "ID": 1170,
        "content": "",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "134",
                "id": "1205",
                "key": "original_post_id"
            },
            {
                "value": "1170",
                "id": "1209",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1208",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Edge Case": {
                    "description": "Posts that have edge-case related tests",
                    "parent": 0,
                    "post_count": 6,
                    "ID": 161095136,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "edge-case-2",
                    "name": "Edge Case"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "content": {
                    "description": "",
                    "post_count": 12,
                    "ID": 35181409,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "content-2",
                    "name": "content"
                },
                "edge case": {
                    "description": "",
                    "post_count": 8,
                    "ID": 16894899,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "edge-case",
                    "name": "edge case"
                },
                "layout": {
                    "description": "",
                    "post_count": 4,
                    "ID": 26060,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "layout",
                    "name": "layout"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2009/08/06/edge-case-no-content/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2009-08-06T09:39:56-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "edge-case-no-content",
        "categories": {
            "Edge Case": {
                "description": "Posts that have edge-case related tests",
                "parent": 0,
                "post_count": 6,
                "ID": 161095136,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "edge-case-2",
                "name": "Edge Case"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2009-08-06T09:39:56-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1170",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1170/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1170/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1170/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/2007/11/24/many-categories/",
        "title": "Edge Case: Many Categories",
        "short_URL": "http://wp.me/p7VTrW-iA",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "edge case": {
                "description": "",
                "post_count": 8,
                "ID": 16894899,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "edge-case",
                "name": "edge case"
            },
            "categories": {
                "description": "",
                "post_count": 2,
                "ID": 1656,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:categories",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:categories/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "categories",
                "name": "categories"
            }
        },
        "global_ID": "c9722547d944cc123b162d28c1ea6bf8",
        "ID": 1152,
        "content": "This post has many categories.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "168",
                "id": "1124",
                "key": "original_post_id"
            },
            {
                "value": "1152",
                "id": "1127",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1126",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "clerkship": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 96553,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:clerkship",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:clerkship/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "clerkship",
                    "name": "clerkship"
                },
                "fatuity": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835022,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:fatuity",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:fatuity/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "fatuity",
                    "name": "fatuity"
                },
                "Cat A": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 111995,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:cat-a",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:cat-a/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "cat-a",
                    "name": "Cat A"
                },
                "Media": {
                    "description": "Posts that have media-related tests",
                    "parent": 0,
                    "post_count": 2,
                    "ID": 329026,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:media-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:media-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "media-2",
                    "name": "Media"
                },
                "Cat C": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 111997,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:cat-c",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:cat-c/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "cat-c",
                    "name": "Cat C"
                },
                "Cat B": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 111996,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:cat-b",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:cat-b/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "cat-b",
                    "name": "Cat B"
                },
                "dispatch": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 167368,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:dispatch",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:dispatch/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "dispatch",
                    "name": "dispatch"
                },
                "years": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 67899,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:years",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:years/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "years",
                    "name": "years"
                },
                "quartern": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835000,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:quartern",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:quartern/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "quartern",
                    "name": "quartern"
                },
                "Child 1": {
                    "description": "",
                    "parent": 54150,
                    "post_count": 1,
                    "ID": 1043326,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-1",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-1/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "child-1",
                    "name": "Child 1"
                },
                "Child 2": {
                    "description": "",
                    "parent": 1043326,
                    "post_count": 1,
                    "ID": 1043329,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "child-2",
                    "name": "Child 2"
                },
                "showshoe": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835006,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:showshoe",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:showshoe/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "showshoe",
                    "name": "showshoe"
                },
                "sloyd": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835007,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sloyd",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sloyd/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "sloyd",
                    "name": "sloyd"
                },
                "illtempered": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835026,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:illtempered",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:illtempered/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "illtempered",
                    "name": "illtempered"
                },
                "papilionaceous": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2834994,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:papilionaceous",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:papilionaceous/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "papilionaceous",
                    "name": "papilionaceous"
                },
                "broder": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 714120,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:broder",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:broder/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "broder",
                    "name": "broder"
                },
                "aciform": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835016,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:aciform",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:aciform/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "aciform",
                    "name": "aciform"
                },
                "sub": {
                    "description": "",
                    "parent": 2835016,
                    "post_count": 1,
                    "ID": 30849,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sub",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sub/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "sub",
                    "name": "sub"
                },
                "Parent": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 54150,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:parent",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:parent/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "parent",
                    "name": "Parent"
                },
                "insubordination": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 315209,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:insubordination",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:insubordination/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "insubordination",
                    "name": "insubordination"
                },
                "arrangement": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 33280,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:arrangement",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:arrangement/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "arrangement",
                    "name": "arrangement"
                },
                "lender": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 376018,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:lender",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:lender/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "lender",
                    "name": "lender"
                },
                "Foo Parent": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 3128707,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:foo-parent",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:foo-parent/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "foo-parent",
                    "name": "Foo Parent"
                },
                "propylaeum": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2834996,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:propylaeum",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:propylaeum/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "propylaeum",
                    "name": "propylaeum"
                },
                "wellhead": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 1327706,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:wellhead",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:wellhead/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "wellhead",
                    "name": "wellhead"
                },
                "Edge Case": {
                    "description": "Posts that have edge-case related tests",
                    "parent": 0,
                    "post_count": 6,
                    "ID": 161095136,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "edge-case-2",
                    "name": "Edge Case"
                },
                "Post Formats": {
                    "description": "Posts in this category test post formats.",
                    "parent": 0,
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                },
                "championship": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 62501,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:championship",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:championship/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "championship",
                    "name": "championship"
                },
                "ween": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 312342,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:ween",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:ween/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "ween",
                    "name": "ween"
                },
                "tamtam": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2016057,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:tamtam",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:tamtam/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "tamtam",
                    "name": "tamtam"
                },
                "Parent Category": {
                    "description": "This is a parent category. It will contain child categories",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 6004933,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:parent-category",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:parent-category/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "parent-category",
                    "name": "Parent Category"
                },
                "equipollent": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2834992,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:equipollent",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:equipollent/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "equipollent",
                    "name": "equipollent"
                },
                "Markup": {
                    "description": "Posts in this category test markup tags and styles.",
                    "parent": 0,
                    "post_count": 6,
                    "ID": 4675,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "markup",
                    "name": "Markup"
                },
                "gaberlunzie": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835023,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:gaberlunzie",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:gaberlunzie/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "gaberlunzie",
                    "name": "gaberlunzie"
                },
                "weakhearted": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835037,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:weakhearted",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:weakhearted/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "weakhearted",
                    "name": "weakhearted"
                },
                "Blogroll": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835020,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:blogroll",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:blogroll/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "blogroll",
                    "name": "Blogroll"
                },
                "palter": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835031,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:palter",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:palter/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "palter",
                    "name": "palter"
                },
                "whetstone": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835045,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:whetstone",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:whetstone/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "whetstone",
                    "name": "whetstone"
                },
                "wellintentioned": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835043,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:wellintentioned",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:wellintentioned/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "wellintentioned",
                    "name": "wellintentioned"
                },
                "sublunary": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835009,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sublunary",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sublunary/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "sublunary",
                    "name": "sublunary"
                },
                "asmodeus": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2720660,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:asmodeus",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:asmodeus/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "asmodeus",
                    "name": "asmodeus"
                },
                "selfconvicted": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835035,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:selfconvicted",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:selfconvicted/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "selfconvicted",
                    "name": "selfconvicted"
                },
                "pustule": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 177992,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:pustule",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:pustule/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "pustule",
                    "name": "pustule"
                },
                "personable": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 1922221,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:personable",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:personable/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "personable",
                    "name": "personable"
                },
                "buying": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 30256,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:buying",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:buying/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "buying",
                    "name": "buying"
                },
                "disinclination": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2834984,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:disinclination",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:disinclination/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "disinclination",
                    "name": "disinclination"
                },
                "Unpublished": {
                    "description": "Posts in this category test unpublished posts.",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 54090,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:unpublished",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:unpublished/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "unpublished",
                    "name": "Unpublished"
                },
                "echappee": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2834987,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:echappee",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:echappee/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "echappee",
                    "name": "echappee"
                },
                "enphagy": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2834990,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:enphagy",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:enphagy/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "enphagy",
                    "name": "enphagy"
                },
                "Grandchild Category": {
                    "description": "This is a description for the Grandchild Category.",
                    "parent": 158081321,
                    "post_count": 1,
                    "ID": 57037077,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:grandchild-category",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:grandchild-category/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "grandchild-category",
                    "name": "Grandchild Category"
                },
                "antiquarianism": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 1020423,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:antiquarianism",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:antiquarianism/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "antiquarianism",
                    "name": "antiquarianism"
                },
                "monosyllable": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835029,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:monosyllable",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:monosyllable/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "monosyllable",
                    "name": "monosyllable"
                },
                "disinfection": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 1454829,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:disinfection",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:disinfection/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "disinfection",
                    "name": "disinfection"
                },
                "Child Category 03": {
                    "description": "This is a description for the Child Category 03.",
                    "parent": 6004933,
                    "post_count": 1,
                    "ID": 158081321,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-03",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-03/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "child-category-03",
                    "name": "Child Category 03"
                },
                "Child Category 02": {
                    "description": "This is a description for the Child Category 02.",
                    "parent": 6004933,
                    "post_count": 1,
                    "ID": 158081319,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-02",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-02/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "child-category-02",
                    "name": "Child Category 02"
                },
                "Child Category 01": {
                    "description": "This is a description for the Child Category 01.",
                    "parent": 6004933,
                    "post_count": 1,
                    "ID": 158081316,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-01",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-01/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "child-category-01",
                    "name": "Child Category 01"
                },
                "scholarship": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 34975,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:scholarship",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:scholarship/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "scholarship",
                    "name": "scholarship"
                },
                "Foo A": {
                    "description": "",
                    "parent": 3128707,
                    "post_count": 1,
                    "ID": 3128710,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:foo-a-foo-parent",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:foo-a-foo-parent/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "foo-a-foo-parent",
                    "name": "Foo A"
                },
                "packthread": {
                    "description": "",
                    "parent": 0,
                    "post_count": 1,
                    "ID": 2835030,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:packthread",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:packthread/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "packthread",
                    "name": "packthread"
                },
                "Child Category 05": {
                    "description": "This is a description for the Child Category 05.",
                    "parent": 6004933,
                    "post_count": 1,
                    "ID": 158081325,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-05",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-05/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "child-category-05",
                    "name": "Child Category 05"
                },
                "Child Category 04": {
                    "description": "This is a description for the Child Category 04.",
                    "parent": 6004933,
                    "post_count": 1,
                    "ID": 158081323,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-04",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-04/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "child-category-04",
                    "name": "Child Category 04"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "edge case": {
                    "description": "",
                    "post_count": 8,
                    "ID": 16894899,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "edge-case",
                    "name": "edge case"
                },
                "categories": {
                    "description": "",
                    "post_count": 2,
                    "ID": 1656,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:categories",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:categories/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "categories",
                    "name": "categories"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2009/07/02/edge-case-many-categories/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2009-07-02T02:00:03-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "edge-case-many-categories",
        "categories": {
            "clerkship": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 96553,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:clerkship",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:clerkship/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "clerkship",
                "name": "clerkship"
            },
            "fatuity": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835022,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:fatuity",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:fatuity/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "fatuity",
                "name": "fatuity"
            },
            "Cat A": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 111995,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:cat-a",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:cat-a/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "cat-a",
                "name": "Cat A"
            },
            "Media": {
                "description": "Posts that have media-related tests",
                "parent": 0,
                "post_count": 2,
                "ID": 329026,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:media-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:media-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "media-2",
                "name": "Media"
            },
            "Cat C": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 111997,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:cat-c",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:cat-c/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "cat-c",
                "name": "Cat C"
            },
            "Cat B": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 111996,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:cat-b",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:cat-b/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "cat-b",
                "name": "Cat B"
            },
            "dispatch": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 167368,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:dispatch",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:dispatch/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "dispatch",
                "name": "dispatch"
            },
            "years": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 67899,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:years",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:years/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "years",
                "name": "years"
            },
            "quartern": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835000,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:quartern",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:quartern/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "quartern",
                "name": "quartern"
            },
            "Child 1": {
                "description": "",
                "parent": 54150,
                "post_count": 1,
                "ID": 1043326,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-1",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-1/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "child-1",
                "name": "Child 1"
            },
            "Child 2": {
                "description": "",
                "parent": 1043326,
                "post_count": 1,
                "ID": 1043329,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "child-2",
                "name": "Child 2"
            },
            "showshoe": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835006,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:showshoe",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:showshoe/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "showshoe",
                "name": "showshoe"
            },
            "sloyd": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835007,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sloyd",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sloyd/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "sloyd",
                "name": "sloyd"
            },
            "illtempered": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835026,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:illtempered",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:illtempered/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "illtempered",
                "name": "illtempered"
            },
            "papilionaceous": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2834994,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:papilionaceous",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:papilionaceous/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "papilionaceous",
                "name": "papilionaceous"
            },
            "broder": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 714120,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:broder",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:broder/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "broder",
                "name": "broder"
            },
            "aciform": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835016,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:aciform",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:aciform/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "aciform",
                "name": "aciform"
            },
            "sub": {
                "description": "",
                "parent": 2835016,
                "post_count": 1,
                "ID": 30849,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sub",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sub/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "sub",
                "name": "sub"
            },
            "Parent": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 54150,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:parent",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:parent/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "parent",
                "name": "Parent"
            },
            "insubordination": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 315209,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:insubordination",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:insubordination/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "insubordination",
                "name": "insubordination"
            },
            "arrangement": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 33280,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:arrangement",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:arrangement/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "arrangement",
                "name": "arrangement"
            },
            "lender": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 376018,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:lender",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:lender/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "lender",
                "name": "lender"
            },
            "Foo Parent": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 3128707,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:foo-parent",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:foo-parent/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "foo-parent",
                "name": "Foo Parent"
            },
            "propylaeum": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2834996,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:propylaeum",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:propylaeum/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "propylaeum",
                "name": "propylaeum"
            },
            "wellhead": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 1327706,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:wellhead",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:wellhead/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "wellhead",
                "name": "wellhead"
            },
            "Edge Case": {
                "description": "Posts that have edge-case related tests",
                "parent": 0,
                "post_count": 6,
                "ID": 161095136,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "edge-case-2",
                "name": "Edge Case"
            },
            "Post Formats": {
                "description": "Posts in this category test post formats.",
                "parent": 0,
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            },
            "championship": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 62501,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:championship",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:championship/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "championship",
                "name": "championship"
            },
            "ween": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 312342,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:ween",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:ween/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "ween",
                "name": "ween"
            },
            "tamtam": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2016057,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:tamtam",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:tamtam/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "tamtam",
                "name": "tamtam"
            },
            "Parent Category": {
                "description": "This is a parent category. It will contain child categories",
                "parent": 0,
                "post_count": 1,
                "ID": 6004933,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:parent-category",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:parent-category/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "parent-category",
                "name": "Parent Category"
            },
            "equipollent": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2834992,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:equipollent",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:equipollent/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "equipollent",
                "name": "equipollent"
            },
            "Markup": {
                "description": "Posts in this category test markup tags and styles.",
                "parent": 0,
                "post_count": 6,
                "ID": 4675,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:markup/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "markup",
                "name": "Markup"
            },
            "gaberlunzie": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835023,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:gaberlunzie",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:gaberlunzie/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "gaberlunzie",
                "name": "gaberlunzie"
            },
            "weakhearted": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835037,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:weakhearted",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:weakhearted/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "weakhearted",
                "name": "weakhearted"
            },
            "Blogroll": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835020,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:blogroll",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:blogroll/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "blogroll",
                "name": "Blogroll"
            },
            "palter": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835031,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:palter",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:palter/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "palter",
                "name": "palter"
            },
            "whetstone": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835045,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:whetstone",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:whetstone/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "whetstone",
                "name": "whetstone"
            },
            "wellintentioned": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835043,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:wellintentioned",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:wellintentioned/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "wellintentioned",
                "name": "wellintentioned"
            },
            "sublunary": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835009,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sublunary",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:sublunary/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "sublunary",
                "name": "sublunary"
            },
            "asmodeus": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2720660,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:asmodeus",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:asmodeus/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "asmodeus",
                "name": "asmodeus"
            },
            "selfconvicted": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835035,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:selfconvicted",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:selfconvicted/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "selfconvicted",
                "name": "selfconvicted"
            },
            "pustule": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 177992,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:pustule",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:pustule/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "pustule",
                "name": "pustule"
            },
            "personable": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 1922221,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:personable",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:personable/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "personable",
                "name": "personable"
            },
            "buying": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 30256,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:buying",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:buying/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "buying",
                "name": "buying"
            },
            "disinclination": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2834984,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:disinclination",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:disinclination/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "disinclination",
                "name": "disinclination"
            },
            "Unpublished": {
                "description": "Posts in this category test unpublished posts.",
                "parent": 0,
                "post_count": 1,
                "ID": 54090,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:unpublished",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:unpublished/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "unpublished",
                "name": "Unpublished"
            },
            "echappee": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2834987,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:echappee",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:echappee/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "echappee",
                "name": "echappee"
            },
            "enphagy": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2834990,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:enphagy",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:enphagy/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "enphagy",
                "name": "enphagy"
            },
            "Grandchild Category": {
                "description": "This is a description for the Grandchild Category.",
                "parent": 158081321,
                "post_count": 1,
                "ID": 57037077,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:grandchild-category",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:grandchild-category/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "grandchild-category",
                "name": "Grandchild Category"
            },
            "antiquarianism": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 1020423,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:antiquarianism",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:antiquarianism/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "antiquarianism",
                "name": "antiquarianism"
            },
            "monosyllable": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835029,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:monosyllable",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:monosyllable/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "monosyllable",
                "name": "monosyllable"
            },
            "disinfection": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 1454829,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:disinfection",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:disinfection/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "disinfection",
                "name": "disinfection"
            },
            "Child Category 03": {
                "description": "This is a description for the Child Category 03.",
                "parent": 6004933,
                "post_count": 1,
                "ID": 158081321,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-03",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-03/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "child-category-03",
                "name": "Child Category 03"
            },
            "Child Category 02": {
                "description": "This is a description for the Child Category 02.",
                "parent": 6004933,
                "post_count": 1,
                "ID": 158081319,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-02",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-02/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "child-category-02",
                "name": "Child Category 02"
            },
            "Child Category 01": {
                "description": "This is a description for the Child Category 01.",
                "parent": 6004933,
                "post_count": 1,
                "ID": 158081316,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-01",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-01/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "child-category-01",
                "name": "Child Category 01"
            },
            "scholarship": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 34975,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:scholarship",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:scholarship/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "scholarship",
                "name": "scholarship"
            },
            "Foo A": {
                "description": "",
                "parent": 3128707,
                "post_count": 1,
                "ID": 3128710,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:foo-a-foo-parent",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:foo-a-foo-parent/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "foo-a-foo-parent",
                "name": "Foo A"
            },
            "packthread": {
                "description": "",
                "parent": 0,
                "post_count": 1,
                "ID": 2835030,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:packthread",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:packthread/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "packthread",
                "name": "packthread"
            },
            "Child Category 05": {
                "description": "This is a description for the Child Category 05.",
                "parent": 6004933,
                "post_count": 1,
                "ID": 158081325,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-05",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-05/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "child-category-05",
                "name": "Child Category 05"
            },
            "Child Category 04": {
                "description": "This is a description for the Child Category 04.",
                "parent": 6004933,
                "post_count": 1,
                "ID": 158081323,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-04",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:child-category-04/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "child-category-04",
                "name": "Child Category 04"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2009-07-02T02:00:03-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1152",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1152/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1152/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1152/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wpthemetestdata.wordpress.com/2007/11/24/many-tags/",
        "title": "Edge Case: Many Tags",
        "short_URL": "http://wp.me/p7VTrW-iz",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "wordpress.tv": {
                "description": "",
                "post_count": 2,
                "ID": 15787590,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:wordpress-tv",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:wordpress-tv/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "wordpress-tv",
                "name": "wordpress.tv"
            },
            "Codex": {
                "description": "",
                "post_count": 3,
                "ID": 12525,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:codex",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:codex/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "codex",
                "name": "Codex"
            },
            "Mothership": {
                "description": "Tags posts about motherships.",
                "post_count": 1,
                "ID": 57948,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:mothership",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:mothership/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "mothership",
                "name": "Mothership"
            },
            "dowork": {
                "description": "Tags posts about #dowork.",
                "post_count": 1,
                "ID": 13207917,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:dowork",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:dowork/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "dowork",
                "name": "dowork"
            },
            "featured image": {
                "description": "",
                "post_count": 3,
                "ID": 8923091,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:featured-image",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:featured-image/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "featured-image",
                "name": "featured image"
            },
            "excerpt": {
                "description": "",
                "post_count": 3,
                "ID": 31262653,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:excerpt-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:excerpt-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "excerpt-2",
                "name": "excerpt"
            },
            "video": {
                "description": "",
                "post_count": 3,
                "ID": 412,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:video",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:video/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "video",
                "name": "video"
            },
            "chat": {
                "description": "",
                "post_count": 2,
                "ID": 4870,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:chat",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:chat/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "chat",
                "name": "chat"
            },
            "captions": {
                "description": "",
                "post_count": 2,
                "ID": 36446125,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:captions-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:captions-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "captions-2",
                "name": "captions"
            },
            "Swagger": {
                "description": "Tags posts about swagger.",
                "post_count": 1,
                "ID": 655802,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:swagger",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:swagger/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "swagger",
                "name": "Swagger"
            },
            "alignment": {
                "description": "",
                "post_count": 3,
                "ID": 38590737,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:alignment-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:alignment-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "alignment-2",
                "name": "alignment"
            },
            "layout": {
                "description": "",
                "post_count": 4,
                "ID": 26060,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "layout",
                "name": "layout"
            },
            "Success": {
                "description": "Tags posts about success.",
                "post_count": 1,
                "ID": 4668,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:success",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:success/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "success",
                "name": "Success"
            },
            "twitter": {
                "description": "",
                "post_count": 2,
                "ID": 11320090,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:twitter-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:twitter-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "twitter-2",
                "name": "twitter"
            },
            "Tags": {
                "description": "Tags posts about tags. #inception",
                "post_count": 1,
                "ID": 1502,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:tags",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:tags/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "tags",
                "name": "Tags"
            },
            "jetpack": {
                "description": "",
                "post_count": 3,
                "ID": 76655687,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jetpack-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jetpack-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "jetpack-2",
                "name": "jetpack"
            },
            "comments": {
                "description": "",
                "post_count": 4,
                "ID": 1861347,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "comments-2",
                "name": "comments"
            },
            "content": {
                "description": "",
                "post_count": 12,
                "ID": 35181409,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "content-2",
                "name": "content"
            },
            "html": {
                "description": "",
                "post_count": 5,
                "ID": 647,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "html",
                "name": "html"
            },
            "template": {
                "description": "",
                "post_count": 12,
                "ID": 11867,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "template",
                "name": "template"
            },
            "Nailed It": {
                "description": "Tags posts about that nailed it.",
                "post_count": 1,
                "ID": 36752930,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:nailedit",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:nailedit/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "nailedit",
                "name": "Nailed It"
            },
            "edge case": {
                "description": "",
                "post_count": 8,
                "ID": 16894899,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "edge-case",
                "name": "edge case"
            },
            "WordPress": {
                "description": "Tags posts about WordPress.",
                "post_count": 1,
                "ID": 33,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:wordpress",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:wordpress/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "wordpress",
                "name": "WordPress"
            },
            "shortcode": {
                "description": "",
                "post_count": 6,
                "ID": 412776,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "shortcode",
                "name": "shortcode"
            },
            "image": {
                "description": "",
                "post_count": 7,
                "ID": 686,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "image",
                "name": "image"
            },
            "css": {
                "description": "",
                "post_count": 7,
                "ID": 169,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "css",
                "name": "css"
            },
            "Articles": {
                "description": "Tags posts about Articles.",
                "post_count": 1,
                "ID": 651,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:articles",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:articles/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "articles",
                "name": "Articles"
            },
            "Post Formats": {
                "description": "",
                "post_count": 16,
                "ID": 44090582,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "post-formats",
                "name": "Post Formats"
            },
            "Unseen": {
                "description": "Tags posts about things that cannot be unseen.",
                "post_count": 1,
                "ID": 207758,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:unseen",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:unseen/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "unseen",
                "name": "Unseen"
            },
            "FTW": {
                "description": "",
                "post_count": 1,
                "ID": 109004,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:ftw",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:ftw/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "ftw",
                "name": "FTW"
            },
            "embeds": {
                "description": "",
                "post_count": 4,
                "ID": 161043722,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "embeds-2",
                "name": "embeds"
            },
            "quote": {
                "description": "",
                "post_count": 2,
                "ID": 3099,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:quote",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:quote/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "quote",
                "name": "quote"
            },
            "standard": {
                "description": "",
                "post_count": 2,
                "ID": 472597,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:standard-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:standard-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "standard-2",
                "name": "standard"
            },
            "link": {
                "description": "",
                "post_count": 2,
                "ID": 2717,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:link",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:link/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "link",
                "name": "link"
            },
            "Fun": {
                "description": "Tags posts about fun.",
                "post_count": 1,
                "ID": 272,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:fun",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:fun/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "fun",
                "name": "Fun"
            },
            "gallery": {
                "description": "",
                "post_count": 3,
                "ID": 3263,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:gallery",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:gallery/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "gallery",
                "name": "gallery"
            },
            "categories": {
                "description": "",
                "post_count": 2,
                "ID": 1656,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:categories",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:categories/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "categories",
                "name": "categories"
            },
            "Love": {
                "description": "Tags posts about love.",
                "post_count": 1,
                "ID": 3785,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:love",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:love/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "love",
                "name": "Love"
            },
            "markup": {
                "description": "",
                "post_count": 6,
                "ID": 38696790,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "markup-2",
                "name": "markup"
            },
            "title": {
                "description": "",
                "post_count": 5,
                "ID": 1653,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "title",
                "name": "title"
            },
            "Must Read": {
                "description": "Tags posts about articles you must read.",
                "post_count": 1,
                "ID": 1560278,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:mustread",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:mustread/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "mustread",
                "name": "Must Read"
            },
            "8BIT": {
                "description": "Tags posts about 8BIT.",
                "post_count": 1,
                "ID": 695220,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:8bit",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:8bit/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "8bit",
                "name": "8BIT"
            },
            "Fail": {
                "description": "Tags posts about fail.",
                "post_count": 1,
                "ID": 112207,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:fail",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:fail/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "fail",
                "name": "Fail"
            },
            "videopress": {
                "description": "",
                "post_count": 2,
                "ID": 20117770,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:videopress",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:videopress/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "videopress",
                "name": "videopress"
            },
            "Pictures": {
                "description": "",
                "post_count": 1,
                "ID": 835,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:pictures",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:pictures/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "pictures",
                "name": "Pictures"
            }
        },
        "global_ID": "579c5ad9ca20d7946b4c5677bb0e2284",
        "ID": 1151,
        "content": "This post has many tags.",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "167",
                "id": "1113",
                "key": "original_post_id"
            },
            {
                "value": "1151",
                "id": "1117",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1116",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Edge Case": {
                    "description": "Posts that have edge-case related tests",
                    "parent": 0,
                    "post_count": 6,
                    "ID": 161095136,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "edge-case-2",
                    "name": "Edge Case"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "wordpress.tv": {
                    "description": "",
                    "post_count": 2,
                    "ID": 15787590,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:wordpress-tv",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:wordpress-tv/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "wordpress-tv",
                    "name": "wordpress.tv"
                },
                "Codex": {
                    "description": "",
                    "post_count": 3,
                    "ID": 12525,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:codex",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:codex/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "codex",
                    "name": "Codex"
                },
                "Mothership": {
                    "description": "Tags posts about motherships.",
                    "post_count": 1,
                    "ID": 57948,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:mothership",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:mothership/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "mothership",
                    "name": "Mothership"
                },
                "dowork": {
                    "description": "Tags posts about #dowork.",
                    "post_count": 1,
                    "ID": 13207917,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:dowork",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:dowork/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "dowork",
                    "name": "dowork"
                },
                "featured image": {
                    "description": "",
                    "post_count": 3,
                    "ID": 8923091,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:featured-image",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:featured-image/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "featured-image",
                    "name": "featured image"
                },
                "excerpt": {
                    "description": "",
                    "post_count": 3,
                    "ID": 31262653,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:excerpt-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:excerpt-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "excerpt-2",
                    "name": "excerpt"
                },
                "video": {
                    "description": "",
                    "post_count": 3,
                    "ID": 412,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:video",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:video/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "video",
                    "name": "video"
                },
                "chat": {
                    "description": "",
                    "post_count": 2,
                    "ID": 4870,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:chat",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:chat/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "chat",
                    "name": "chat"
                },
                "captions": {
                    "description": "",
                    "post_count": 2,
                    "ID": 36446125,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:captions-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:captions-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "captions-2",
                    "name": "captions"
                },
                "Swagger": {
                    "description": "Tags posts about swagger.",
                    "post_count": 1,
                    "ID": 655802,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:swagger",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:swagger/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "swagger",
                    "name": "Swagger"
                },
                "alignment": {
                    "description": "",
                    "post_count": 3,
                    "ID": 38590737,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:alignment-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:alignment-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "alignment-2",
                    "name": "alignment"
                },
                "layout": {
                    "description": "",
                    "post_count": 4,
                    "ID": 26060,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:layout/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "layout",
                    "name": "layout"
                },
                "Success": {
                    "description": "Tags posts about success.",
                    "post_count": 1,
                    "ID": 4668,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:success",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:success/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "success",
                    "name": "Success"
                },
                "twitter": {
                    "description": "",
                    "post_count": 2,
                    "ID": 11320090,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:twitter-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:twitter-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "twitter-2",
                    "name": "twitter"
                },
                "Tags": {
                    "description": "Tags posts about tags. #inception",
                    "post_count": 1,
                    "ID": 1502,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:tags",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:tags/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "tags",
                    "name": "Tags"
                },
                "jetpack": {
                    "description": "",
                    "post_count": 3,
                    "ID": 76655687,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jetpack-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:jetpack-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "jetpack-2",
                    "name": "jetpack"
                },
                "comments": {
                    "description": "",
                    "post_count": 4,
                    "ID": 1861347,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:comments-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "comments-2",
                    "name": "comments"
                },
                "content": {
                    "description": "",
                    "post_count": 12,
                    "ID": 35181409,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "content-2",
                    "name": "content"
                },
                "html": {
                    "description": "",
                    "post_count": 5,
                    "ID": 647,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:html/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "html",
                    "name": "html"
                },
                "template": {
                    "description": "",
                    "post_count": 12,
                    "ID": 11867,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:template/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "template",
                    "name": "template"
                },
                "Nailed It": {
                    "description": "Tags posts about that nailed it.",
                    "post_count": 1,
                    "ID": 36752930,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:nailedit",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:nailedit/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "nailedit",
                    "name": "Nailed It"
                },
                "edge case": {
                    "description": "",
                    "post_count": 8,
                    "ID": 16894899,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "edge-case",
                    "name": "edge case"
                },
                "WordPress": {
                    "description": "Tags posts about WordPress.",
                    "post_count": 1,
                    "ID": 33,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:wordpress",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:wordpress/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "wordpress",
                    "name": "WordPress"
                },
                "shortcode": {
                    "description": "",
                    "post_count": 6,
                    "ID": 412776,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:shortcode/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "shortcode",
                    "name": "shortcode"
                },
                "image": {
                    "description": "",
                    "post_count": 7,
                    "ID": 686,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:image/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "image",
                    "name": "image"
                },
                "css": {
                    "description": "",
                    "post_count": 7,
                    "ID": 169,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "css",
                    "name": "css"
                },
                "Articles": {
                    "description": "Tags posts about Articles.",
                    "post_count": 1,
                    "ID": 651,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:articles",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:articles/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "articles",
                    "name": "Articles"
                },
                "Post Formats": {
                    "description": "",
                    "post_count": 16,
                    "ID": 44090582,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:post-formats/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "post-formats",
                    "name": "Post Formats"
                },
                "Unseen": {
                    "description": "Tags posts about things that cannot be unseen.",
                    "post_count": 1,
                    "ID": 207758,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:unseen",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:unseen/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "unseen",
                    "name": "Unseen"
                },
                "FTW": {
                    "description": "",
                    "post_count": 1,
                    "ID": 109004,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:ftw",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:ftw/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "ftw",
                    "name": "FTW"
                },
                "embeds": {
                    "description": "",
                    "post_count": 4,
                    "ID": 161043722,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:embeds-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "embeds-2",
                    "name": "embeds"
                },
                "quote": {
                    "description": "",
                    "post_count": 2,
                    "ID": 3099,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:quote",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:quote/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "quote",
                    "name": "quote"
                },
                "standard": {
                    "description": "",
                    "post_count": 2,
                    "ID": 472597,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:standard-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:standard-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "standard-2",
                    "name": "standard"
                },
                "link": {
                    "description": "",
                    "post_count": 2,
                    "ID": 2717,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:link",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:link/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "link",
                    "name": "link"
                },
                "Fun": {
                    "description": "Tags posts about fun.",
                    "post_count": 1,
                    "ID": 272,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:fun",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:fun/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "fun",
                    "name": "Fun"
                },
                "gallery": {
                    "description": "",
                    "post_count": 3,
                    "ID": 3263,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:gallery",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:gallery/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "gallery",
                    "name": "gallery"
                },
                "categories": {
                    "description": "",
                    "post_count": 2,
                    "ID": 1656,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:categories",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:categories/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "categories",
                    "name": "categories"
                },
                "Love": {
                    "description": "Tags posts about love.",
                    "post_count": 1,
                    "ID": 3785,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:love",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:love/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "love",
                    "name": "Love"
                },
                "markup": {
                    "description": "",
                    "post_count": 6,
                    "ID": 38696790,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "markup-2",
                    "name": "markup"
                },
                "title": {
                    "description": "",
                    "post_count": 5,
                    "ID": 1653,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:title/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "title",
                    "name": "title"
                },
                "Must Read": {
                    "description": "Tags posts about articles you must read.",
                    "post_count": 1,
                    "ID": 1560278,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:mustread",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:mustread/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "mustread",
                    "name": "Must Read"
                },
                "8BIT": {
                    "description": "Tags posts about 8BIT.",
                    "post_count": 1,
                    "ID": 695220,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:8bit",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:8bit/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "8bit",
                    "name": "8BIT"
                },
                "Fail": {
                    "description": "Tags posts about fail.",
                    "post_count": 1,
                    "ID": 112207,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:fail",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:fail/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "fail",
                    "name": "Fail"
                },
                "videopress": {
                    "description": "",
                    "post_count": 2,
                    "ID": 20117770,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:videopress",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:videopress/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "videopress",
                    "name": "videopress"
                },
                "Pictures": {
                    "description": "",
                    "post_count": 1,
                    "ID": 835,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:pictures",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:pictures/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "pictures",
                    "name": "Pictures"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2009/06/01/edge-case-many-tags/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2009-06-01T01:00:34-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "edge-case-many-tags",
        "categories": {
            "Edge Case": {
                "description": "Posts that have edge-case related tests",
                "parent": 0,
                "post_count": 6,
                "ID": 161095136,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "edge-case-2",
                "name": "Edge Case"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2009-06-01T01:00:34-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1151",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1151/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1151/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1151/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    },
    {
        "is_reblogged": false,
        "attachments": {},
        "excerpt": "",
        "sticky": false,
        "like_count": 0,
        "is_following": true,
        "capabilities": {
            "edit_post": true,
            "delete_post": true,
            "publish_post": true
        },
        "featured_image": "",
        "attachment_count": 0,
        "menu_order": 0,
        "guid": "http://wptest.io/demo/?p=1000",
        "title": "Edge Case: Nested And Mixed Lists",
        "short_URL": "http://wp.me/p7VTrW-g8",
        "discussion": {
            "pings_open": false,
            "comment_count": 0,
            "comments_open": false,
            "ping_status": "closed",
            "comment_status": "closed"
        },
        "tags": {
            "content": {
                "description": "",
                "post_count": 12,
                "ID": 35181409,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "content-2",
                "name": "content"
            },
            "edge case": {
                "description": "",
                "post_count": 8,
                "ID": 16894899,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "edge-case",
                "name": "edge case"
            },
            "markup": {
                "description": "",
                "post_count": 6,
                "ID": 38696790,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "markup-2",
                "name": "markup"
            },
            "lists": {
                "description": "",
                "post_count": 1,
                "ID": 35081376,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:lists-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:lists-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "lists-2",
                "name": "lists"
            },
            "css": {
                "description": "",
                "post_count": 7,
                "ID": 169,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "css",
                "name": "css"
            }
        },
        "global_ID": "79f98cb3a7353e7d08dfb8a24ad4dc9b",
        "ID": 1000,
        "content": "Nested and mixed lists are an interesting beast. It's a corner case to make sure that\n<ul>\n\t<li><span style=\"line-height:1.714285714;font-size:1rem;\">Lists within lists do not break the ordered list numbering order</span></li>\n\t<li><span style=\"line-height:1.714285714;font-size:1rem;\">Your list styles go deep enough.</span></li>\n</ul>\n<h3>Ordered - Unordered - Ordered</h3>\n<ol>\n\t<li>ordered item</li>\n\t<li>ordered item\n<ul>\n\t<li><strong>unordered</strong></li>\n\t<li><strong>unordered</strong>\n<ol>\n\t<li>ordered item</li>\n\t<li>ordered item</li>\n</ol>\n</li>\n</ul>\n</li>\n\t<li>ordered item</li>\n\t<li>ordered item</li>\n</ol>\n<h3>Ordered - Unordered - Unordered</h3>\n<ol>\n\t<li>ordered item</li>\n\t<li>ordered item\n<ul>\n\t<li><strong>unordered</strong></li>\n\t<li><strong>unordered</strong>\n<ul>\n\t<li>unordered item</li>\n\t<li>unordered item</li>\n</ul>\n</li>\n</ul>\n</li>\n\t<li>ordered item</li>\n\t<li>ordered item</li>\n</ol>\n<h3>Unordered - Ordered - Unordered</h3>\n<ul>\n\t<li>unordered item</li>\n\t<li>unordered item\n<ol>\n\t<li>ordered</li>\n\t<li>ordered\n<ul>\n\t<li>unordered item</li>\n\t<li>unordered item</li>\n</ul>\n</li>\n</ol>\n</li>\n\t<li>unordered item</li>\n\t<li>unordered item</li>\n</ul>\n<h3>Unordered - Unordered - Ordered</h3>\n<ul>\n\t<li>unordered item</li>\n\t<li>unordered item\n<ul>\n\t<li>unordered</li>\n\t<li>unordered\n<ol>\n\t<li><strong>ordered item</strong></li>\n\t<li><strong>ordered item</strong></li>\n</ol>\n</li>\n</ul>\n</li>\n\t<li>unordered item</li>\n\t<li>unordered item</li>\n</ul>",
        "other_URLs": {},
        "type": "post",
        "metadata": [
            {
                "value": "1000",
                "id": "1005",
                "key": "original_post_id"
            },
            {
                "value": "1000",
                "id": "1008",
                "key": "original_post_id"
            },
            {
                "value": "57e56598baa4b",
                "id": "1007",
                "key": "restapi_import_id"
            }
        ],
        "status": "publish",
        "terms": {
            "category": {
                "Edge Case": {
                    "description": "Posts that have edge-case related tests",
                    "parent": 0,
                    "post_count": 6,
                    "ID": 161095136,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "edge-case-2",
                    "name": "Edge Case"
                }
            },
            "mentions": {},
            "post_format": {},
            "post_tag": {
                "content": {
                    "description": "",
                    "post_count": 12,
                    "ID": 35181409,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:content-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "content-2",
                    "name": "content"
                },
                "edge case": {
                    "description": "",
                    "post_count": 8,
                    "ID": 16894899,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:edge-case/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "edge-case",
                    "name": "edge case"
                },
                "markup": {
                    "description": "",
                    "post_count": 6,
                    "ID": 38696790,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:markup-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "markup-2",
                    "name": "markup"
                },
                "lists": {
                    "description": "",
                    "post_count": 1,
                    "ID": 35081376,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:lists-2",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:lists-2/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "lists-2",
                    "name": "lists"
                },
                "css": {
                    "description": "",
                    "post_count": 7,
                    "ID": 169,
                    "meta": {
                        "links": {
                            "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css",
                            "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/tags/slug:css/help",
                            "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                        }
                    },
                    "slug": "css",
                    "name": "css"
                }
            }
        },
        "parent": false,
        "format": "standard",
        "URL": "https://coveopushdemo.wordpress.com/2009/05/15/edge-case-nested-and-mixed-lists/",
        "post_thumbnail": null,
        "site_ID": 117232200,
        "i_like": false,
        "date": "2009-05-15T14:48:32-07:00",
        "sharing_enabled": true,
        "password": "",
        "geo": false,
        "slug": "edge-case-nested-and-mixed-lists",
        "categories": {
            "Edge Case": {
                "description": "Posts that have edge-case related tests",
                "parent": 0,
                "post_count": 6,
                "ID": 161095136,
                "meta": {
                    "links": {
                        "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2",
                        "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/categories/slug:edge-case-2/help",
                        "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
                    }
                },
                "slug": "edge-case-2",
                "name": "Edge Case"
            }
        },
        "page_template": "",
        "author": {
            "first_name": "",
            "last_name": "",
            "name": "coveopushapidemo",
            "URL": "http://coveopushapidemo.wordpress.com",
            "site_ID": 117232200,
            "email": "jdevost@coveo.com",
            "nice_name": "coveopushapidemo",
            "avatar_URL": "https://2.gravatar.com/avatar/2a86c57237a5dfb80b14fa1c3b14437b?s=96&d=identicon&r=G",
            "login": "coveopushapidemo",
            "ID": 110654655,
            "profile_URL": "http://en.gravatar.com/coveopushapidemo"
        },
        "modified": "2009-05-15T14:48:32-07:00",
        "likes_enabled": true,
        "meta": {
            "links": {
                "self": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1000",
                "replies": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1000/replies/",
                "likes": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1000/likes/",
                "help": "https://public-api.wordpress.com/rest/v1.1/sites/117232200/posts/1000/help",
                "site": "https://public-api.wordpress.com/rest/v1.1/sites/117232200"
            }
        },
        "publicize_URLs": []
    }
]
